
Функция ПолучитьФорматДляРаздела6(Показатель, Раздел, КодДокумента)
	
	Если (Раздел = "Раздел6" ИЛИ Раздел = "Раздел7") И 
		(КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634) Тогда   		
		ЗначениеПоказателя = ?(Показатель =-99999, "Х", Формат(Показатель, "ЧЦ=15; ЧДЦ=3; ЧН=0,000"));
	Иначе	
		ЗначениеПоказателя = Показатель;
		Если Показатель =-99999 Тогда
			ЗначениеПоказателя = "Х";
		ИначеЕсли Показатель =-77777 Тогда
			ЗначениеПоказателя = "-";
		КонецЕсли;
	КонецЕсли;

	Возврат ЗначениеПоказателя;
	
КонецФункции

Процедура ВывестиТаблицуПоказателей(Раздел, ДокументОтчетности, ТабличныйДокумент, Макет)
	
	КодДокумента = ДокументОтчетности.КодДокумента;       	
	
	//ОбластьШапка = Макет.получитьОбласть("Шапка");
	ОбластьНаименованиеРаздела= Макет.ПолучитьОбласть("НаименованиеРаздела"); 		

	ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапки");
	ОбластьСтрока = Макет.получитьОбласть("Строка");   

	ВТысРублей = "тыс.руб.";  

	// выбираем нужные разделы и показатели
	Если Раздел = "Раздел2" тогда
		ГруппаРазделов = Справочники.Разделы.Раздел2;
	ИначеЕсли Раздел = "Раздел3" тогда
		ГруппаРазделов = Справочники.Разделы.Раздел3;
	ИначеЕсли Раздел = "Раздел4" тогда
		ГруппаРазделов = Справочники.Разделы.Раздел4;			
		ВТысРублей = "";

		// выбираем нужные разделы и показатели
	ИначеЕсли Раздел = "Раздел5" тогда
				
		ГруппаРазделов = Справочники.Разделы.Раздел5;
			
		Если КодДокумента = перечисления.КодДокумента.ОКУД_0420820_21631
			ИЛИ КодДокумента = перечисления.КодДокумента.ОКУД_0420820_21632 Тогда    			
			
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел5");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел5"); 	 
		
		Иначе
		//	ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел6_21633");
		//	ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел6_21633");
			
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел6");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел6");      
			
		КонецЕсли;

		
	ИначеЕсли Раздел = "Раздел6" тогда
		ГруппаРазделов = Справочники.Разделы.Раздел6;	    
		
			
		Если КодДокумента = перечисления.КодДокумента.ОКУД_0420820_2164
			ИЛИ КодДокумента = перечисления.КодДокумента.ОКУД_0420820_21641
			ИЛИ КодДокумента = перечисления.КодДокумента.ОКУД_0420820_21642
			ИЛИ КодДокумента = перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел6_2164");
		
		ИначеЕсли КодДокумента = перечисления.КодДокумента.ОКУД_0420820_21632 Тогда
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел6");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел6");
		Иначе
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел6_21633");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел6_21633");
		КонецЕсли;
		
		ВТысРублей = "";
		
	ИначеЕсли Раздел = "Раздел7" тогда
		ГруппаРазделов = Справочники.Разделы.Раздел7;	
		
		Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел7_21633");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел7_21633"); 				
			
		ИначеЕсли КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел9");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел9");
			
		Иначе	
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел7_8");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел7_8"); 	
		КонецЕсли;
		 
	ИначеЕсли Раздел = "Раздел8" тогда
		ГруппаРазделов = Справочники.Разделы.Раздел8;	
		
		Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел9");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел9"); 
			
		ИначеЕсли КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапки");
			ОбластьСтрока = Макет.получитьОбласть("Строка");        
			
		Иначе	                                                              			                    		
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел7_8");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел7_8"); 	
		КонецЕсли;
		
	ИначеЕсли Раздел = "Раздел9" тогда
		ГруппаРазделов = Справочники.Разделы.Раздел9;
		
		Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапки");
			ОбластьСтрока = Макет.получитьОбласть("Строка");       
		Иначе
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел9");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел9"); 	
			ВТысРублей = "";
		КонецЕсли;
		
	ИначеЕсли Раздел = "Раздел10" тогда	
		
		Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел10_21633");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел10_21633"); 	
		Иначе
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел10");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел10"); 	
			ОбластьЗаголовок = Макет.получитьОбласть("СтрокаРаздел10Заголовок"); 	
			ВТысРублей = "";    
		КонецЕсли;
		 		
	ИначеЕсли Раздел = "Раздел11" тогда
		
		Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел11_2164");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел11_2164"); 	 		
			
		ИначеЕсли КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел11_21633");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел11_21633"); 	
		Иначе
			ВТысРублей = "";     	
		КонецЕсли;   
			
		ГруппаРазделов = Справочники.Разделы.Раздел11;	
		
	ИначеЕсли Раздел = "Раздел12" Тогда        		
		
		Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 тогда       		
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел13_21633");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел13_21633"); 		
		Иначе
			ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел12_21633");
			ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел12_21633"); 	
		КонецЕсли;
		
	ИначеЕсли Раздел = "Раздел13" Тогда       		
		ОбластьЗаголовкиШапки = Макет.получитьОбласть("ЗаголовкиШапкиРаздел13_21633");
		ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел13_21633"); 		
		
	КонецЕсли;

	
	Если Раздел = "Раздел7" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641  ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644)
		ИЛИ (Раздел = "Раздел9" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21631 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21632)) ИЛИ (Раздел = "Раздел8" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634)) тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетностьКПКТаблицаПоказателей.КодРаздела КАК КодРаздела,
		|	ОтчетностьКПКТаблицаПоказателей.ВидАктивов КАК ВидАктивов,
		|	ОтчетностьКПКТаблицаПоказателей.СуммаРазмещаемыхСредств КАК СуммаРазмещаемыхСредств,
		|	ОтчетностьКПКТаблицаПоказателей.НаименованиеКредитногоРейтинговогоАгенства КАК НаименованиеКредитногоРейтинговогоАгенства,
		|	ОтчетностьКПКТаблицаПоказателей.УровеньКредитногоРейтинга КАК УровеньКредитногоРейтинга
		|ИЗ
		|	Документ.ОтчетностьКПК.ТаблицаПоказателейРаздел9 КАК ОтчетностьКПКТаблицаПоказателей
		|ГДЕ
		|	ОтчетностьКПКТаблицаПоказателей.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОтчетностьКПКТаблицаПоказателей.ПорядокСортировки";
		
		Запрос.УстановитьПараметр("Ссылка", ДокументОтчетности);
		
	ИначеЕсли Раздел = "Раздел10" тогда
		
		Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОтчетностьКПКТаблицаСведенийОбУтвержденииПовестки.НаименованиеОрганаУтвердившегоПовестку КАК НаименованиеОрганаУтвердившегоПовестку,
			|	ОтчетностьКПКТаблицаСведенийОбУтвержденииПовестки.ДатаУтвержденияПовестки КАК ДатаУтвержденияПовестки,
			|	ОтчетностьКПКТаблицаСведенийОбУтвержденииПовестки.ДатаПроведенияОбщегоСобранияВКПК КАК ДатаПроведенияОбщегоСобранияВКПК,
			|	ОтчетностьКПКТаблицаСведенийОбУтвержденииПовестки.ВидОтчетности КАК ВидОтчетности,
			|	ОтчетностьКПКТаблицаСведенийОбУтвержденииПовестки.ПолноеНаименованиеАудиторскойОрганизации КАК ПолноеНаименованиеАудиторскойОрганизации,
			|	ОтчетностьКПКТаблицаСведенийОбУтвержденииПовестки.ОГРНАудиторскойОрганизации КАК ОГРНАудиторскойОрганизации,
			|	ОтчетностьКПКТаблицаСведенийОбУтвержденииПовестки.ИННАудиторскойОрганизации КАК ИННАудиторскойОрганизации,
			|	ОтчетностьКПКТаблицаСведенийОбУтвержденииПовестки.АдресАудиторскойОрганизации КАК АдресАудиторскойОрганизации,
			|	ОтчетностьКПКТаблицаСведенийОбУтвержденииПовестки.ПолноеНаименованиеСРООрганизацииАудиторов КАК ПолноеНаименованиеСРООрганизацииАудиторов,
			|	ОтчетностьКПКТаблицаСведенийОбУтвержденииПовестки.НомерСРОАудиторов КАК НомерСРОАудиторов,
			|	ОтчетностьКПКТаблицаСведенийОбУтвержденииПовестки.НомерРегистрационнойЗаписиВРесстреАудиторов КАК НомерРегистрационнойЗаписиВРесстреАудиторов
			|ИЗ
			|	Документ.ОтчетностьКПК.ТаблицаСведенийОбУтвержденииПовестки КАК ОтчетностьКПКТаблицаСведенийОбУтвержденииПовестки
			|ГДЕ
			|	ОтчетностьКПКТаблицаСведенийОбУтвержденииПовестки.Ссылка = &Ссылка"; 			
		Иначе	
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОтчетностьКПКТаблицаДоговоровОдобренныхОбщимСобранием.Ссылка КАК Ссылка,
			|	ОтчетностьКПКТаблицаДоговоровОдобренныхОбщимСобранием.НомерСтроки КАК НомерСтроки,
			|	ОтчетностьКПКТаблицаДоговоровОдобренныхОбщимСобранием.ДатаНомерДоговора КАК ДатаНомерДоговора,
			|	ОтчетностьКПКТаблицаДоговоровОдобренныхОбщимСобранием.ДатаНомерПротокола КАК ДатаНомерПротокола,
			|	ОтчетностьКПКТаблицаДоговоровОдобренныхОбщимСобранием.РазмерОбязательствНаМоментЗаключенияДоговора КАК РазмерОбязательствНаМоментЗаключенияДоговора,
			|	ОтчетностьКПКТаблицаДоговоровОдобренныхОбщимСобранием.РазмерОбязательствНаКонецОтчетногоПериода КАК РазмерОбязательствНаКонецОтчетногоПериода,
			|	ОтчетностьКПКТаблицаДоговоровОдобренныхОбщимСобранием.УсловиеИсполненияОбязательств КАК УсловиеИсполненияОбязательств,
			|	ОтчетностьКПКТаблицаДоговоровОдобренныхОбщимСобранием.СрокИсполненияОбязательств КАК СрокИсполненияОбязательств,
			|	ОтчетностьКПКТаблицаДоговоровОдобренныхОбщимСобранием.ВидДоговора КАК ВидДоговора,
			|	ОтчетностьКПКТаблицаДоговоровОдобренныхОбщимСобранием.Комментарий КАК Комментарий
			|ИЗ
			|	Документ.ОтчетностьКПК.ТаблицаДоговоровОдобренныхОбщимСобранием КАК ОтчетностьКПКТаблицаДоговоровОдобренныхОбщимСобранием
			|ГДЕ
			|	ОтчетностьКПКТаблицаДоговоровОдобренныхОбщимСобранием.Ссылка = &Ссылка";
		КонецЕсли;
			
		Запрос.УстановитьПараметр("Ссылка", ДокументОтчетности);	
		
	ИначеЕсли Раздел = "Раздел11" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
		ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.Ссылка КАК Ссылка,
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.НомерСтроки КАК НомерСтроки,
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.ПолноеНаименованиеАудиторскойОрганизации КАК ПолноеНаименованиеАудиторскойОрганизации,
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.ОГРНАудиторскойОрганизации КАК ОГРНАудиторскойОрганизации,
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.ИННАудиторскойОрганизации КАК ИННАудиторскойОрганизации,
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.АдресАудиторскойОрганизации КАК АдресАудиторскойОрганизации,
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.ПолноеНаименованиеСРООрганизацииАудиторов КАК ПолноеНаименованиеСРООрганизацииАудиторов,
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.НомерСРОАудиторов КАК НомерСРОАудиторов,
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.НомерРегистрационнойЗаписиВРесстреАудиторов КАК НомерРегистрационнойЗаписиВРесстреАудиторов,
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.ВидОтчетности КАК ВидОтчетности,
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.ДатаЗаключения КАК ДатаЗаключения,
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.ДатаНачалаПредоставленияУслуг КАК ДатаНачалаПредоставленияУслуг,
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.ДатаОкончанияПредоставленияУслуг КАК ДатаОкончанияПредоставленияУслуг,
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.ДатаСоставленияПоследнегоЗаключения КАК ДатаСоставленияПоследнегоЗаключения,
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.СведенияОЛицахПодписавшихАудиторскоеЗаключение КАК СведенияОЛицахПодписавшихАудиторскоеЗаключение,
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.МнениеВыраженноеВАудиторскомзаключении КАК МнениеВыраженноеВАудиторскомзаключении
		|ИЗ
		|	Документ.ОтчетностьКПК.ТаблицаСведенийОАудиторах КАК ОтчетностьКПКТаблицаСведенийОАудиторах
		|ГДЕ
		|	ОтчетностьКПКТаблицаСведенийОАудиторах.Ссылка = &Ссылка"; 			
		
			
		Запрос.УстановитьПараметр("Ссылка", ДокументОтчетности);	
		
	ИначеЕсли Раздел = "Раздел12" 
		И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634)
		ИЛИ (Раздел = "Раздел11" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
		 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644)) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетностьКПКТаблицаАффилированныхЛиц.Ссылка КАК Ссылка,
		|	ОтчетностьКПКТаблицаАффилированныхЛиц.НомерСтроки КАК НомерСтроки,
		|	ОтчетностьКПКТаблицаАффилированныхЛиц.ПолноеНаименованиеЮрФизЛица КАК ПолноеНаименованиеЮрФизЛица,
		|	ОтчетностьКПКТаблицаАффилированныхЛиц.АдресЮрФизЛица КАК АдресЮрФизЛица,
		|	ОтчетностьКПКТаблицаАффилированныхЛиц.ИННАффилированногоЛица КАК ИННАффилированногоЛица,
		|	ОтчетностьКПКТаблицаАффилированныхЛиц.ДатаВозникновенияАффилированности КАК ДатаВозникновенияАффилированности,
		|	ОтчетностьКПКТаблицаАффилированныхЛиц.КодАффилированности КАК КодАффилированности,
		|	ОтчетностьКПКТаблицаАффилированныхЛиц.ОснованияАффилированностиПримечание КАК ОснованияАффилированностиПримечание
		|ИЗ
		|	Документ.ОтчетностьКПК.ТаблицаАффилированныхЛиц КАК ОтчетностьКПКТаблицаАффилированныхЛиц
		|ГДЕ
		|	ОтчетностьКПКТаблицаАффилированныхЛиц.Ссылка = &Ссылка"; 			
		
			
		Запрос.УстановитьПараметр("Ссылка", ДокументОтчетности.Ссылка);		
		
	ИначеЕсли (Раздел = "Раздел12" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
		ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644)) 
		ИЛИ Раздел = "Раздел13" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетностьКПКТаблицаФондыСформированныеВКПК.НаименованиеФонда КАК НаименованиеФонда,
		|	ОтчетностьКПКТаблицаФондыСформированныеВКПК.РазмерФондаНаНачалоПериода КАК РазмерФондаНаНачалоПериода,
		|	ОтчетностьКПКТаблицаФондыСформированныеВКПК.ПоступилоЗаПериод КАК ПоступилоЗаПериод,
		|	ОтчетностьКПКТаблицаФондыСформированныеВКПК.ИзрасходованоЗаПериод КАК ИзрасходованоЗаПериод,
		|	ОтчетностьКПКТаблицаФондыСформированныеВКПК.РазмерФондаНаКонецПериода КАК РазмерФондаНаКонецПериода
		|ИЗ
		|	Документ.ОтчетностьКПК.ТаблицаФондыСформированныеВКПК КАК ОтчетностьКПКТаблицаФондыСформированныеВКПК
		|ГДЕ
		|	ОтчетностьКПКТаблицаФондыСформированныеВКПК.Ссылка = &Ссылка"; 			
		
			
		Запрос.УстановитьПараметр("Ссылка", ДокументОтчетности.Ссылка);			
		
	Иначе	
		КодДокумента = ДокументОтчетности.КодДокумента;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СРО_НаименованияРазделовПоКодамДокументов.Раздел КАК Раздел,
		|	СРО_НаименованияРазделовПоКодамДокументов.КодДокумента КАК КодДокумента,
		|	СРО_НаименованияРазделовПоКодамДокументов.Значение КАК Значение
		|ПОМЕСТИТЬ ВТ_СовпадающиеРазделы
		|ИЗ
		|	РегистрСведений.СРО_НаименованияРазделовПоКодамДокументов КАК СРО_НаименованияРазделовПоКодамДокументов
		|ГДЕ
		|	СРО_НаименованияРазделовПоКодамДокументов.КодДокумента = &КодДокумента
		|	И СРО_НаименованияРазделовПоКодамДокументов.Раздел В ИЕРАРХИИ(&ГруппаРазделов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Раздел
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтчетностьКПКТаблицаПоказателей.Раздел КАК Раздел,
		|	ОтчетностьКПКТаблицаПоказателей.Раздел.КодРаздела КАК РазделКод,
		|	ЕСТЬNULL(ВТ_СовпадающиеРазделы.Значение, ОтчетностьКПКТаблицаПоказателей.Раздел.ПолноеНаименование) КАК РазделПолноеНаименование,
		|	ОтчетностьКПКТаблицаПоказателей.Показатель1 КАК ЗначениеПоказателя,
		|	ОтчетностьКПКТаблицаПоказателей.Показатель2 КАК Показатель2,
		|	ОтчетностьКПКТаблицаПоказателей.Показатель3 КАК Показатель3,
		|	ОтчетностьКПКТаблицаПоказателей.Показатель4 КАК Показатель4,
		|	ОтчетностьКПКТаблицаПоказателей.Показатель5 КАК Показатель5,
		|	ОтчетностьКПКТаблицаПоказателей.Показатель6 КАК Показатель6,
		|	ОтчетностьКПКТаблицаПоказателей.Раздел.Код КАК РазделКод1,
		|	ОтчетностьКПКТаблицаПоказателей.Показатель7 КАК Показатель7,
		|	ОтчетностьКПКТаблицаПоказателей.Показатель8 КАК Показатель8,
		|	ОтчетностьКПКТаблицаПоказателей.Показатель9 КАК Показатель9,
		|	ОтчетностьКПКТаблицаПоказателей.Показатель10 КАК Показатель10,
		|	ОтчетностьКПКТаблицаПоказателей.Показатель11 КАК Показатель11,
		|	ОтчетностьКПКТаблицаПоказателей.Показатель12 КАК Показатель12,
		|	ОтчетностьКПКТаблицаПоказателей.Показатель13 КАК Показатель13,
		|	ОтчетностьКПКТаблицаПоказателей.Показатель14 КАК Показатель14,  		
		|	ОтчетностьКПКТаблицаПоказателей.ВидЗадолжностиОсновной КАК ВидЗадолжностиОсновной,
		|	ОтчетностьКПКТаблицаПоказателей.ВидЗадолжностиДополнительный КАК ВидЗадолжностиДополнительный,
		|	ОтчетностьКПКТаблицаПоказателей.ТипОсновнойДополнительный КАК ТипОсновнойДополнительный  
		|ИЗ
		|	Документ.ОтчетностьКПК.ТаблицаПоказателей КАК ОтчетностьКПКТаблицаПоказателей
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СовпадающиеРазделы КАК ВТ_СовпадающиеРазделы
		|		ПО ОтчетностьКПКТаблицаПоказателей.Раздел = ВТ_СовпадающиеРазделы.Раздел
		|ГДЕ
		|	ОтчетностьКПКТаблицаПоказателей.Ссылка = &Ссылка
		|	И ОтчетностьКПКТаблицаПоказателей.Раздел В ИЕРАРХИИ(&ГруппаРазделов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОтчетностьКПКТаблицаПоказателей.Раздел.ПорядокСортировки";
		
		Запрос.УстановитьПараметр("Ссылка", ДокументОтчетности.Ссылка);
		Запрос.УстановитьПараметр("ГруппаРазделов", ГруппаРазделов);
		
		Запрос.УстановитьПараметр("КодДокумента", КодДокумента);

	КонецЕсли;	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;		
	КонецЕсли;
	
	Если Раздел = "Раздел4" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
		ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634) Тогда
		ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел IV. Сведения о членах КПК, заключенных договорах, привлеченных и размещенных средствах";  	
		
	ИначеЕсли Раздел = "Раздел5" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
		ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634) Тогда
		ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел V. Данные о средневзвешенных значениях полной стоимости потребительских займов по категориям потребительских займов";  	

	ИначеЕсли Раздел = "Раздел6" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
		ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634) Тогда
		ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел VI. Данные о структуре задолженности по предоставленным займам";  	
		
	ИначеЕсли Раздел = "Раздел7" Тогда
		Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда
			ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел VII. Данные о размере сформированных резервов на возможные потери по займам";
		ИначеЕсли КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
			ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел VII. Данные о размещении средств резервных фондов";	
		КонецЕсли;                                                           	
		
	ИначеЕсли Раздел = "Раздел8" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
		ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634) Тогда
		ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел VIII. Данные о размещении средств резервных фондов";	
	
	ИначеЕсли Раздел = "Раздел9" Тогда
		Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда
			ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел IX. Числовые значения финансовых нормативов";  		
		Иначе
			ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел IX. Данные о размещении средств резервных фондов";  		
		КонецЕсли;
	ИначеЕсли Раздел = "Раздел10" тогда 		
		Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
		ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда
			ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел X. Сведения об утверждении повестки дня общего собрания членов КПК, содержащей вопрос об утверждении аудиторской организации (аудитора)";	
		Иначе
			ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел X. Информация о договорах, одобренных общим собранием";	
		КонецЕсли;
		
	ИначеЕсли Раздел = "Раздел11" тогда 		
		
		Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда
			ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел XI. Сведения об аудиторской организации (аудиторе)";	
			
		ИначеЕсли КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642 
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
	    	ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел XI. Аффилированные лица";
			
		Иначе
			ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = ГруппаРазделов.ПолноеНаименование;
		КонецЕсли;
		
	ИначеЕсли Раздел = "Раздел12" тогда 	
		
		Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642 
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда       		
			ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел XII. Информация о фондах, сформированных в КПК (паевой, резервный фонд, фонд финансовой взаимопомощи и иные)";	
	    Иначе	
			ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел XII. Аффилированные лица";
		КонецЕсли;
		
	ИначеЕсли Раздел = "Раздел13" тогда 	
		ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел XIII. Информация о фондах, сформированных в КПК (паевой, резервный фонд, фонд финансовой взаимопомощи и иные)";	
	  
	Иначе	
		ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = ГруппаРазделов.ПолноеНаименование;
	КонецЕсли;
	
	//ОбластьНаименованиеРаздела.Параметры.ВТысРублей = ВТысРублей;
	ТабличныйДокумент.Вывести(ОбластьНаименованиеРаздела, 3);
	ТабличныйДокумент.Вывести(ОбластьЗаголовкиШапки, 4); 


	//ЦветРаздел1Уровня = Новый Цвет(59, 224, 66);
	ЦветРаздел1Уровня = Новый Цвет(145, 235, 149);
	ЦветРаздел2Уровня = Новый Цвет(174, 255, 187);  // 227, 255, 225
	
	ПоследняяКолонкаОбласти = 14;
	
	Если Раздел = "Раздел5" Тогда
		ПоследняяКолонкаОбласти = 15;
		
	ИначеЕсли Раздел = "Раздел6" Тогда
		
		ПоследняяКолонкаОбласти = 15;
		
		Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда
			ПоследняяКолонкаОбласти = 34;
		КонецЕсли;
		
	ИначеЕсли Раздел = "Раздел7"
		ИЛИ (Раздел = "Раздел8" И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_21633
		И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_21634
		И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_2164
		И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_21641
		И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_21642
		И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_21644) Тогда
		
		ПоследняяКолонкаОбласти = 17;
		
		Если Раздел = "Раздел7" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634) Тогда
			ПоследняяКолонкаОбласти = 32;
		КонецЕсли; 		
	КонецЕсли; 		
	
	ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
	
	Выборка = РезультатЗапроса.Выбрать(); 	
	
	Пока Выборка.Следующий() Цикл
		
	
						
						
		
		Если Раздел = "Раздел7" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
			 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
			 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644)
			ИЛИ (Раздел = "Раздел9" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21632 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21632)) ИЛИ (Раздел = "Раздел8" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634)) Тогда
			ОбластьСтрока.Параметры.КодРаздела = Выборка.КодРаздела;
			ОбластьСтрока.Параметры.ВидАктивов = Выборка.ВидАктивов;
			ОбластьСтрока.Параметры.СуммаРазмещаемыхСредств = Выборка.СуммаРазмещаемыхСредств;
			ОбластьСтрока.Параметры.НаименованиеКредитногоРейтинговогоАгенства = Выборка.НаименованиеКредитногоРейтинговогоАгенства;
			ОбластьСтрока.Параметры.УровеньКредитногоРейтинга = Выборка.УровеньКредитногоРейтинга; 			
			
		ИначеЕсли Раздел = "Раздел10" Тогда
			
			
			Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда
				ОбластьСтрока.Параметры.Заполнить(Выборка);
				
			Иначе	
				Если СокрЛП(Выборка.Комментарий) <> "" тогда
					Если Выборка.ВидДоговора = "ДоговорыЗайма" Тогда
						ОбластьЗаголовок.Параметры.НомерСтроки = "1";	
					Иначе
						ОбластьЗаголовок.Параметры.НомерСтроки = "2";		
					КонецЕсли;
					
					ОбластьЗаголовок.Параметры.Комментарий = Выборка.Комментарий;
								
					ТабличныйДокумент.Вывести(ОбластьЗаголовок); 	
					Продолжить;
				КонецЕсли;
				
				ОбластьСтрока.Параметры.НомерСтроки	 = "-";
				ОбластьСтрока.Параметры.ДатаНомерДоговора		 = Выборка.ДатаНомерДоговора;
				ОбластьСтрока.Параметры.ДатаНомерПротокола		 = Выборка.ДатаНомерПротокола;						
				ОбластьСтрока.Параметры.РазмерОбязательствНаМоментЗаключенияДоговора	 = Выборка.РазмерОбязательствНаМоментЗаключенияДоговора;
				ОбластьСтрока.Параметры.РазмерОбязательствНаКонецОтчетногоПериода	 = Выборка.РазмерОбязательствНаКонецОтчетногоПериода;
				ОбластьСтрока.Параметры.УсловиеИсполненияОбязательств		 = Выборка.УсловиеИсполненияОбязательств;
				ОбластьСтрока.Параметры.СрокИсполненияОбязательств		 = Выборка.СрокИсполненияОбязательств;	
			КонецЕсли;
			
		ИначеЕсли (Раздел = "Раздел11" Или Раздел = "Раздел12" Или Раздел = "Раздел13") И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644) Тогда			
			ОбластьСтрока.Параметры.Заполнить(Выборка);   	
					
		Иначе	

			
			Если Раздел = "Раздел6" Тогда
				
				Если КодДокумента = перечисления.КодДокумента.ОКУД_0420820_2164
					ИЛИ КодДокумента = перечисления.КодДокумента.ОКУД_0420820_21641
					ИЛИ КодДокумента = перечисления.КодДокумента.ОКУД_0420820_21642
					ИЛИ КодДокумента = перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
					
					Если  Выборка.ЗначениеПоказателя = -99999 Тогда
						ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел6_21634_Группа");      
					Иначе
						ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел6_2164");      
					КонецЕсли;
					
				ИНаче	
					Если КодДокумента = перечисления.КодДокумента.ОКУД_0420820_21632 Тогда		
						ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел6");
					Иначе
						ОбластьСтрока = Макет.получитьОбласть("СтрокаРаздел6_21633");
					КонецЕсли;
					
					Если Выборка.Раздел.Уровень() = 1 Тогда
						ОбластьСтрока.Область(1, 1, 1, ПоследняяКолонкаОбласти).ЦветФона = ЦветРаздел2Уровня;
				    Иначе	
						ОбластьСтрока.Область(1, 1, 1, ПоследняяКолонкаОбласти).ЦветФона = WebЦвета.Белый;
					КонецЕсли;   	

				КонецЕсли;
				
				Поз = СтрНайти(Выборка.РазделКод, "_");
		
				Если Поз > 0 Тогда     			
					ОбластьСтрока.Параметры.КодРаздела = Сред(Выборка.РазделКод, Поз + 1);
				Иначе	
					ОбластьСтрока.Параметры.КодРаздела = СокрЛП(Выборка.РазделКод);
				КонецЕсли;  
			КонецЕсли;
					
					
					
			Поз = СтрНайти(Выборка.РазделКод, "_");
			
			Если Поз > 0 Тогда     			
				ОбластьСтрока.Параметры.КодРаздела = Сред(Выборка.РазделКод, Поз + 1);
			Иначе	
				ОбластьСтрока.Параметры.КодРаздела = СокрЛП(Выборка.РазделКод);
			КонецЕсли;  
			
			Если Раздел = "Раздел9" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634) Тогда 
				
			ИначеЕсли Раздел = "Раздел5"
				ИЛИ Раздел = "Раздел6"
				ИЛИ Раздел = "Раздел7" 
				ИЛИ Раздел = "Раздел8" Тогда
				
				Если Выборка.Раздел.Уровень() = 1 Тогда
					ОбластьСтрока.Область(1, 1, 1, ПоследняяКолонкаОбласти).ЦветФона = ЦветРаздел2Уровня;
			    Иначе	
					ОбластьСтрока.Область(1, 1, 1, ПоследняяКолонкаОбласти).ЦветФона = WebЦвета.Белый;
				КонецЕсли;   	
			Иначе	

				Если Выборка.Раздел.Уровень() = 1 Тогда
					ОбластьСтрока.Область(1, 1, 1, ПоследняяКолонкаОбласти).ЦветФона = ЦветРаздел1Уровня;
				ИначеЕсли Выборка.Раздел.Уровень() = 2 Тогда
					ОбластьСтрока.Область(1, 1, 1, ПоследняяКолонкаОбласти).ЦветФона = ЦветРаздел2Уровня;
				//ИначеЕсли Выборка.Раздел.Уровень() = 3 Тогда
				//	ОбластьСтрока.Область(1, 1, 1, ПоследняяКолонкаОбласти).ЦветФона = ЦветРаздел3Уровня;
			    Иначе	
					ОбластьСтрока.Область(1, 1, 1, ПоследняяКолонкаОбласти).ЦветФона = WebЦвета.Белый;
				КонецЕсли;   	
			КонецЕсли;
			
			ДобавляемыйОтступ = ""; 			
			
			
			Если Выборка.Раздел.Уровень() > 1 Тогда
				Для сч = 1 по Выборка.Раздел.Уровень()-1 Цикл
					ДобавляемыйОтступ = ДобавляемыйОтступ + "  ";					
				КонецЦикла;                                  					
			КонецЕсли; 			                                                                                                                                                  			
			
			ОбластьСтрока.Параметры.НаименованиеПоказателя = ДобавляемыйОтступ + СРО_ЗагрузкаОтчетности.ПолучитьНазваниеРазделаПоКодуДокумента(Выборка.Раздел, КодДокумента);
			
			
			Если Раздел = "Раздел6" 
				И (КодДокумента = перечисления.КодДокумента.ОКУД_0420820_2164					
				ИЛИ КодДокумента = перечисления.КодДокумента.ОКУД_0420820_21641
				ИЛИ КодДокумента = перечисления.КодДокумента.ОКУД_0420820_21642
				ИЛИ КодДокумента = перечисления.КодДокумента.ОКУД_0420820_21644)
				И Выборка.ЗначениеПоказателя = -99999 Тогда
				
				Если РезультатЗапроса.Колонки.Найти("Раздел") <> Неопределено Тогда
					Попытка
						ТабличныйДокумент.Вывести(ОбластьСтрока, 3 + Выборка.Раздел.Уровень());
					Исключение	
						ТабличныйДокумент.Вывести(ОбластьСтрока);
					КонецПопытки;
				Иначе
					ТабличныйДокумент.Вывести(ОбластьСтрока);
				КонецЕсли;
				
				Продолжить;
			Иначе	  
				ОбластьСтрока.Параметры.ЗначениеПоказателя = ПолучитьФорматДляРаздела6(Выборка.ЗначениеПоказателя, Раздел, КодДокумента);
			КонецЕсли;
					
			Если Раздел = "Раздел5"
				ИЛИ Раздел = "Раздел6" 
				ИЛИ Раздел = "Раздел7"
				ИЛИ (Раздел = "Раздел8" И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_2164 И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_21641
				И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_21642 И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_21644) Тогда
				
				
				ОбластьСтрока.Параметры.Показатель2 = ПолучитьФорматДляРаздела6(Выборка.Показатель2, Раздел, КодДокумента);
				ОбластьСтрока.Параметры.Показатель3 = ПолучитьФорматДляРаздела6(Выборка.Показатель3, Раздел, КодДокумента);
				
				Если Раздел = "Раздел5" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21631 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21632) Тогда
					ОбластьСтрока.Параметры.Показатель4 = ?(Выборка.Показатель4 =-99999, "Х", Выборка.Показатель4);  	
				ИначеЕсли Раздел = "Раздел6" И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
					ИЛИ (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
					ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644))
					ИЛИ Раздел = "Раздел7" ИЛИ Раздел = "Раздел8" Тогда
					
					
					ОбластьСтрока.Параметры.Показатель4 = ПолучитьФорматДляРаздела6(Выборка.Показатель4, Раздел, КодДокумента);
					ОбластьСтрока.Параметры.Показатель5 = ПолучитьФорматДляРаздела6(Выборка.Показатель5, Раздел, КодДокумента);
					ОбластьСтрока.Параметры.Показатель6 = ПолучитьФорматДляРаздела6(Выборка.Показатель6, Раздел, КодДокумента);
									
					Если (Раздел = "Раздел6" ИЛИ Раздел = "Раздел7") И (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
						ИЛИ (КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 
						ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
						ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
						ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
						ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644)) Тогда
					
						ОбластьСтрока.Параметры.Показатель7 = ПолучитьФорматДляРаздела6(Выборка.Показатель7, Раздел, КодДокумента);
						ОбластьСтрока.Параметры.Показатель8 = ПолучитьФорматДляРаздела6(Выборка.Показатель8, Раздел, КодДокумента);
						ОбластьСтрока.Параметры.Показатель9 = ПолучитьФорматДляРаздела6(Выборка.Показатель9, Раздел, КодДокумента);
						ОбластьСтрока.Параметры.Показатель10 = ПолучитьФорматДляРаздела6(Выборка.Показатель10, Раздел, КодДокумента);
						ОбластьСтрока.Параметры.Показатель11 = ПолучитьФорматДляРаздела6(Выборка.Показатель11, Раздел, КодДокумента);
						ОбластьСтрока.Параметры.Показатель12 = ПолучитьФорматДляРаздела6(Выборка.Показатель12, Раздел, КодДокумента);
						
						Если Раздел = "Раздел6" Тогда														
							Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
								ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
								ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
								ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
								ОбластьСтрока.Параметры.ВидЗадолжностиОсновной = ПолучитьФорматДляРаздела6(Выборка.ВидЗадолжностиОсновной, Раздел, КодДокумента);
								ОбластьСтрока.Параметры.ВидЗадолжностиДополнительный = ПолучитьФорматДляРаздела6(Выборка.ВидЗадолжностиДополнительный, Раздел, КодДокумента);
							Иначе
								ОбластьСтрока.Параметры.Показатель13 = ПолучитьФорматДляРаздела6(Выборка.Показатель13, Раздел, КодДокумента);
								ОбластьСтрока.Параметры.Показатель14 = ПолучитьФорматДляРаздела6(Выборка.Показатель14, Раздел, КодДокумента);
							КонецЕсли;
						КонецЕсли;		
						
					КонецЕсли;					
		
				КонецЕсли;	
			Иначе   					
				Если Выборка.ЗначениеПоказателя <>-99999 И Выборка.ЗначениеПоказателя < 0 Тогда
					ОбластьСтрока.Область(1, 12, 1, 14).ЦветТекста = WebЦвета.Красный;
				Иначе
					ОбластьСтрока.Область(1, 12, 1, 14).ЦветТекста = WebЦвета.Черный;				
				КонецЕсли; 				
			КонецЕсли;
		КонецЕсли;
		
		
		Если РезультатЗапроса.Колонки.Найти("Раздел") <> Неопределено Тогда
			Попытка
				ТабличныйДокумент.Вывести(ОбластьСтрока, 3 + Выборка.Раздел.Уровень());
			Исключение	
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецПопытки;
		Иначе
			ТабличныйДокумент.Вывести(ОбластьСтрока);
		КонецЕсли;
			
		
	КонецЦикла;  
	
	ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок(); 



КонецПроцедуры

Функция СформироватьТабличныеДокументы(СтруктураПараметров) Экспорт
	
	Если СтруктураПараметров.Свойство("ТабличныйДокумент") Тогда	
		ТабличныйДокумент = СтруктураПараметров.ТабличныйДокумент;  
	Иначе
		ТабличныйДокумент = Новый ТабличныйДокумент;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("КраткийРеестр") Тогда	
		КраткийРеестр = СтруктураПараметров.КраткийРеестр;  
	Иначе
		КраткийРеестр = Новый ТабличныйДокумент;
	КонецЕсли;
	
	ДатаНачала = СтруктураПараметров.ДатаНачалаОтчета;
	ДатаОкончания = КонецДня(СтруктураПараметров.ДатаОкончанияОтчета);
	МассивКПК = СтруктураПараметров.МассивКПК;  

	Если СтруктураПараметров.Свойство("флФильтрыПоАктивам") Тогда	
		флФильтрыПоАктивам = СтруктураПараметров.флФильтрыПоАктивам;  
	Иначе
		флФильтрыПоАктивам = Ложь;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("АктивыОт") Тогда	
		АктивыОт = СтруктураПараметров.АктивыОт;      
	Иначе
		АктивыОт = Ложь;      
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("АктивыДо") Тогда	
		АктивыДо = СтруктураПараметров.АктивыДо;  	
	Иначе
		АктивыДо = Ложь;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("флФильтрПоКоличествуЧленов") Тогда	
		флФильтрПоКоличествуЧленов = СтруктураПараметров.флФильтрПоКоличествуЧленов;
	Иначе
		флФильтрПоКоличествуЧленов = Ложь;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("КоличествоЧленовОт") Тогда	
		КоличествоЧленовОт = СтруктураПараметров.КоличествоЧленовОт; 
	Иначе
		КоличествоЧленовОт = 0;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("КоличествоЧленовДо") Тогда		
		КоличествоЧленовДо = СтруктураПараметров.КоличествоЧленовДо;
	Иначе
		КоличествоЧленовДо = 0;		
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("флФильтрПоКоличествуРегионов") Тогда	
		флФильтрПоКоличествуРегионов = СтруктураПараметров.флФильтрПоКоличествуРегионов;   
	Иначе
		флФильтрПоКоличествуРегионов = 0;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("КоличествоРегионовДляОтбора") Тогда	
		КоличествоРегионовДляОтбора = СтруктураПараметров.КоличествоРегионовДляОтбора;
	Иначе
		КоличествоРегионовДляОтбора = 0;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("флВыводитьРеестр") Тогда	
		флВыводитьРеестр = СтруктураПараметров.флВыводитьРеестр;
	Иначе
		флВыводитьРеестр = 0;		
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("флВыводитьСопроводительноеПисьмо") Тогда	
		флВыводитьСопроводительноеПисьмо = СтруктураПараметров.флВыводитьСопроводительноеПисьмо;  
	Иначе
		флВыводитьСопроводительноеПисьмо = 0;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("СписокРазделов") Тогда	
		СписокРазделов = СтруктураПараметров.СписокРазделов;  
	Иначе
		СписокРазделов = Новый СписокЗначений;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("ВсеРазделы") Тогда
		ВсеРазделы = СтруктураПараметров.ВсеРазделы;
	Иначе
		ВсеРазделы = Истина;
	КонецЕсли;      		
	
	ТабличныйДокумент.НачатьАвтогруппировкуСтрок(); 
	
	Запрос = Новый Запрос;
	
	Если 1 = 1 Тогда // свернул текст запроса
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ОтчетностьКПК.Ссылка КАК ДокументОтчетности,
		|	ОтчетностьКПК.Ссылка.КПК КАК КПК
		|ПОМЕСТИТЬ ВТ_КПК
		|ИЗ
		|	Документ.ОтчетностьКПК КАК ОтчетностьКПК
		|ГДЕ
		|	ОтчетностьКПК.ДатаОкончанияОтчетногоПериода МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ОтчетностьКПК.ИспользоватьДокумент = ИСТИНА
		|   #ОтборПоКПК#
		|СГРУППИРОВАТЬ ПО
		|	ОтчетностьКПК.Ссылка,
		|	ОтчетностьКПК.Ссылка.КПК
		|
		|ИМЕЮЩИЕ
		|	1 = 1
		|    #ОтборИмеющие#
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОтчетности,
		|	КПК
		|;

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.КПК КАК КПК,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.Регион) КАК КоличествоРегионов,
		|	Сумма(ВложенныйЗапрос.ПредставлениеАдреса) КАК КоличествоФилиалов,
		|	ВложенныйЗапрос.ДокументОтчетности КАК ДокументОтчетности
		|ПОМЕСТИТЬ ВТ_КПК_Регионы
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_КПК.КПК КАК КПК,
		|		КонтрагентыКонтактнаяИнформация.Регион КАК Регион,
		|		0 КАК ПредставлениеАдреса,
		|		ВТ_КПК.ДокументОтчетности КАК ДокументОтчетности
		|	ИЗ
		|		ВТ_КПК КАК ВТ_КПК
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|			ПО ВТ_КПК.КПК = КонтрагентыКонтактнаяИнформация.Ссылка
		|				И (КонтрагентыКонтактнаяИнформация.Тип = &Адрес)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВТ_КПК.КПК,
		|		КонтрагентыКонтактнаяИнформация.Регион,
		|		КонтрагентыКонтактнаяИнформация.Представление,    
		|		ВТ_КПК.ДокументОтчетности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОтчетностьКПКОбособленныеПодразделения_КонтактнаяИнформация.Ссылка.КПК,
		|		ОтчетностьКПКОбособленныеПодразделения_КонтактнаяИнформация.Регион,
		|		1,
		|		ОтчетностьКПКОбособленныеПодразделения_КонтактнаяИнформация.Ссылка
		|	ИЗ
		|		Документ.ОтчетностьКПК.ОбособленныеПодразделения_КонтактнаяИнформация КАК ОтчетностьКПКОбособленныеПодразделения_КонтактнаяИнформация
		|	ГДЕ
		|		ОтчетностьКПКОбособленныеПодразделения_КонтактнаяИнформация.Тип = &Адрес
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ОтчетностьКПКОбособленныеПодразделения_КонтактнаяИнформация.Ссылка.КПК,
		|		ОтчетностьКПКОбособленныеПодразделения_КонтактнаяИнформация.Регион,
		|		ОтчетностьКПКОбособленныеПодразделения_КонтактнаяИнформация.Представление, 
		|		ОтчетностьКПКОбособленныеПодразделения_КонтактнаяИнформация.Ссылка) КАК ВложенныйЗапрос

		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.КПК,
		|	ВложенныйЗапрос.ДокументОтчетности

		|ИНДЕКСИРОВАТЬ ПО
		|	КПК,
		|	ДокументОтчетности
		|;


		|ВЫБРАТЬ
		|	ОтчетностьКПК.Ссылка КАК ДокументОтчетности,
		|	ОтчетностьКПК.Ссылка.КодДокумента КАК КодДокумента,        
		|	ВЫРАЗИТЬ(ОтчетностьКПК.КПКПолноеНаименование КАК СТРОКА(1000)) КАК КПКПолноеНаименование,
		|	ОтчетностьКПК.КПККраткоеНаименование КАК КПККраткоеНаименование,
		|	ОтчетностьКПК.КПКИНН КАК КПКИНН,
		|	ОтчетностьКПК.КПКОГРН КАК КПКОГРН,
		|	ОтчетностьКПК.КПКДатаСоздания КАК КПКДатаСоздания,
		|	ВЫРАЗИТЬ(ОтчетностьКПК.КПКМестоНахождения КАК СТРОКА(1000)) КАК КПКМестоНахождения,
		|	ВЫРАЗИТЬ(ОтчетностьКПК.КПКАдресФактическогоМестонахождения КАК СТРОКА(1000)) КАК КПКАдресФактическогоМестонахождения,
		|	ВЫРАЗИТЬ(ОтчетностьКПК.КПКПочтовыйАдрес КАК СТРОКА(1000)) КАК КПКПочтовыйАдрес,
		|	ОтчетностьКПК.КПКНомерТелефона КАК КПКНомерТелефона,
		|	ОтчетностьКПК.КПКНомерФакса КАК КПКНомерФакса,
		|	ОтчетностьКПК.КПКАдресЭлектроннойПочты КАК КПКАдресЭлектроннойПочты,
		|	ОтчетностьКПК.КПКАдресСайта КАК КПКАдресСайта,
		|	ОтчетностьКПК.НаименованиеОрганизацииПредоставившейОтчет КАК НаименованиеОрганизацииПредоставившейОтчет,
		|	ВЫРАЗИТЬ(ОтчетностьКПК.СРОПолноеНаименование КАК СТРОКА(1000)) КАК СРОПолноеНаименование,
		|	ОтчетностьКПК.СРОИНН КАК СРОИНН,
		|	ОтчетностьКПК.СРООГРН КАК СРООГРН,
		|	ОтчетностьКПК.СРОНомерВРесстреСРО КАК СРОНомерВРесстреСРО,
		|	ОтчетностьКПК.КПКДатаВступленияВСРО КАК КПКДатаВступленияВСРО,
		|	ВЫРАЗИТЬ(ОтчетностьКПК.КПК2УровняПолноеНаименование КАК СТРОКА(1000)) КАК КПК2УровняПолноеНаименование,
		|	ОтчетностьКПК.КПК2УровняИНН КАК КПК2УровняИНН,
		|	ОтчетностьКПК.КПК2УровняОГРН КАК КПК2УровняОГРН,
		|	ОтчетностьКПК.ДатаВступленияКПКВКПК2Уровня КАК ДатаВступленияКПКВКПК2Уровня,
		|	ОтчетностьКПК.РейтинговоеАгенство_ПолноеНаименование КАК РейтинговоеАгенство_ПолноеНаименование,
		|	ОтчетностьКПК.РейтинговоеАгенство_ИНН КАК РейтинговоеАгенство_ИНН,
		|	ОтчетностьКПК.РейтинговоеАгенство_ОГРН КАК РейтинговоеАгенство_ОГРН,
		|	ОтчетностьКПК.РейтинговоеАгенство_УровеньРейтинга КАК РейтинговоеАгенство_УровеньРейтинга,
		|	ОтчетностьКПК.РейтинговоеАгенство_ДатаПрисвоенияРейтинга КАК РейтинговоеАгенство_ДатаПрисвоенияРейтинга, 		
		|	ВЫРАЗИТЬ(ОтчетностьКПК.БКИПолноеНаименование КАК СТРОКА(1000)) КАК БКИПолноеНаименование,
		|	ОтчетностьКПК.БКИИНН КАК БКИИНН,
		|	ОтчетностьКПК.БКИОГРН КАК БКИОГРН,
		|	ОтчетностьКПК.БКИДатаЗаключенияДоговора КАК БКИДатаЗаключенияДоговора,
		|	ОтчетностьКПК.БКИНомерДоговора КАК БКИНомерДоговора,      		
		|	ОтчетностьКПК.ДатаОкончанияОтчетногоПериода КАК ДатаОкончанияОтчетногоПериода,
		|	ВЫРАЗИТЬ(ОтчетностьКПК.СопроводительноеПисьмо_КПКПолноеНаименование КАК СТРОКА(1000)) КАК СопроводительноеПисьмо_КПКПолноеНаименование,
		|	ОтчетностьКПК.СопроводительноеПисьмо_КПККраткоеНаименование КАК СопроводительноеПисьмо_КПККраткоеНаименование,
		|	ОтчетностьКПК.СопроводительноеПисьмо_КПКИНН КАК СопроводительноеПисьмо_КПКИНН,
		|	ОтчетностьКПК.СопроводительноеПисьмо_КПКОГРН КАК СопроводительноеПисьмо_КПКОГРН,
		|	ОтчетностьКПК.ОтчетнаяДата КАК ОтчетнаяДата,
		|	ВЫРАЗИТЬ(ОтчетностьКПК.СопроводительноеПисьмо_ФИОРуководителяКПК КАК СТРОКА(1000)) КАК СопроводительноеПисьмо_ФИОРуководителяКПК,
		|	ОтчетностьКПК.СопроводительноеПисьмо_ФамилияРуководителяКПК КАК СопроводительноеПисьмо_ФамилияРуководителяКПК,
		|	ОтчетностьКПК.СопроводительноеПисьмо_ИмяРуководителяКПК КАК СопроводительноеПисьмо_ИмяРуководителяКПК,
		|	ОтчетностьКПК.СопроводительноеПисьмо_ОтчествоРуководителяКПК КАК СопроводительноеПисьмо_ОтчествоРуководителяКПК,
		|	ОтчетностьКПК.ОснованиеНаправления КАК ОснованиеНаправления,
		|	ОтчетностьКПК.СопроводительноеПисьмо_ИсходящийНомер КАК СопроводительноеПисьмо_ИсходящийНомер,
		|	ОтчетностьКПК.ДатаИсходящегоДокумента КАК ДатаИсходящегоДокумента,
		|	ОтчетностьКПК.СопроводительноеПисьмо_Примечания КАК СопроводительноеПисьмо_Примечания,
		|	СУММА(ВЫБОР
		|			КОГДА ОтчетностьКПКТаблицаПоказателей.Раздел = &Раздел2_1
		|				ТОГДА ЕСТЬNULL(ОтчетностьКПКТаблицаПоказателей.Показатель1, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК АктивыНаКонецПериода,
		|	СУММА(ВЫБОР
	     
		|			КОГДА (ОтчетностьКПК.Ссылка.КодДокумента = ЗНАЧЕНИЕ(Перечисление.КодДокумента.ОКУД_0420820_21633) ИЛИ ОтчетностьКПК.Ссылка.КодДокумента = ЗНАЧЕНИЕ(Перечисление.КодДокумента.ОКУД_0420820_21634)) И ОтчетностьКПКТаблицаПоказателей.Раздел = &Раздел4_1    
		
		|				ТОГДА ЕСТЬNULL(ОтчетностьКПКТаблицаПоказателей.Показатель1, 0)
		|			КОГДА ОтчетностьКПК.Ссылка.КодДокумента <> ЗНАЧЕНИЕ(Перечисление.КодДокумента.ОКУД_0420820_21633)  И ОтчетностьКПК.Ссылка.КодДокумента <> ЗНАЧЕНИЕ(Перечисление.КодДокумента.ОКУД_0420820_21634) И ОтчетностьКПКТаблицаПоказателей.Раздел = &Раздел4_11	
		|				ТОГДА ЕСТЬNULL(ОтчетностьКПКТаблицаПоказателей.Показатель1, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоЧленовНаКонецПериода,
		|	ВТ_КПК_Регионы.КоличествоРегионов КАК КоличествоРегионов,
		|	ВТ_КПК_Регионы.КоличествоФилиалов КАК КоличествоФилиалов

		|ИЗ
		|	Документ.ОтчетностьКПК.ТаблицаПоказателей КАК ОтчетностьКПКТаблицаПоказателей
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетностьКПК КАК ОтчетностьКПК
		|		ПО ОтчетностьКПКТаблицаПоказателей.Ссылка = ОтчетностьКПК.Ссылка
		|			И (ОтчетностьКПКТаблицаПоказателей.Раздел = &Раздел2_1
		|				ИЛИ ОтчетностьКПКТаблицаПоказателей.Раздел = &Раздел4_1 ИЛИ ОтчетностьКПКТаблицаПоказателей.Раздел = &Раздел4_11)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КПК_Регионы КАК ВТ_КПК_Регионы
		|		ПО (ОтчетностьКПКТаблицаПоказателей.Ссылка = ВТ_КПК_Регионы.ДокументОтчетности)
		|			И (ОтчетностьКПКТаблицаПоказателей.Ссылка.КПК = ВТ_КПК_Регионы.КПК)
	    |
		|ГДЕ
		|	ОтчетностьКПК.ДатаОкончанияОтчетногоПериода МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ОтчетностьКПК.ИспользоватьДокумент = ИСТИНА
		|   #ОтборПоКПК1#
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_КПК_Регионы.КоличествоФилиалов,
		|	ВТ_КПК_Регионы.КоличествоРегионов,    
		|	ОтчетностьКПК.Ссылка,				   
		|	ВЫРАЗИТЬ(ОтчетностьКПК.КПКПолноеНаименование КАК СТРОКА(1000)),
		|	ОтчетностьКПК.КПККраткоеНаименование,
		|	ОтчетностьКПК.КПКИНН,
		|	ОтчетностьКПК.КПКОГРН,
		|	ОтчетностьКПК.КПКДатаСоздания,
		|	ВЫРАЗИТЬ(ОтчетностьКПК.КПКМестоНахождения КАК СТРОКА(1000)),
		|	ВЫРАЗИТЬ(ОтчетностьКПК.КПКАдресФактическогоМестонахождения КАК СТРОКА(1000)),
		|	ВЫРАЗИТЬ(ОтчетностьКПК.КПКПочтовыйАдрес КАК СТРОКА(1000)),
		|	ОтчетностьКПК.КПКНомерТелефона,
		|	ОтчетностьКПК.КПКНомерФакса,
		|	ОтчетностьКПК.КПКАдресЭлектроннойПочты,
		|	ОтчетностьКПК.КПКАдресСайта,
		|	ОтчетностьКПК.НаименованиеОрганизацииПредоставившейОтчет,
		|	ВЫРАЗИТЬ(ОтчетностьКПК.СРОПолноеНаименование КАК СТРОКА(1000)),
		|	ОтчетностьКПК.СРОИНН,
		|	ОтчетностьКПК.СРООГРН,
		|	ОтчетностьКПК.СРОНомерВРесстреСРО,
		|	ОтчетностьКПК.КПКДатаВступленияВСРО,
		|	ВЫРАЗИТЬ(ОтчетностьКПК.КПК2УровняПолноеНаименование КАК СТРОКА(1000)),
		|	ОтчетностьКПК.КПК2УровняИНН,
		|	ОтчетностьКПК.КПК2УровняОГРН,
		|	ОтчетностьКПК.ДатаВступленияКПКВКПК2Уровня,
		|	ОтчетностьКПК.РейтинговоеАгенство_ПолноеНаименование,
		|	ОтчетностьКПК.РейтинговоеАгенство_ИНН,
		|	ОтчетностьКПК.РейтинговоеАгенство_ОГРН,
		|	ОтчетностьКПК.РейтинговоеАгенство_УровеньРейтинга,
		|	ОтчетностьКПК.РейтинговоеАгенство_ДатаПрисвоенияРейтинга,
		|	ВЫРАЗИТЬ(ОтчетностьКПК.БКИПолноеНаименование КАК СТРОКА(1000)),
		|	ОтчетностьКПК.БКИИНН,
		|	ОтчетностьКПК.БКИОГРН,
		|	ОтчетностьКПК.БКИДатаЗаключенияДоговора,
		|	ОтчетностьКПК.БКИНомерДоговора,    
		|	ОтчетностьКПК.ДатаОкончанияОтчетногоПериода,
		|	ВЫРАЗИТЬ(ОтчетностьКПК.СопроводительноеПисьмо_КПКПолноеНаименование КАК СТРОКА(1000)),
		|	ОтчетностьКПК.СопроводительноеПисьмо_КПККраткоеНаименование,
		|	ОтчетностьКПК.СопроводительноеПисьмо_КПКИНН,
		|	ОтчетностьКПК.СопроводительноеПисьмо_КПКОГРН,
		|	ОтчетностьКПК.ОтчетнаяДата,
		|	ВЫРАЗИТЬ(ОтчетностьКПК.СопроводительноеПисьмо_ФИОРуководителяКПК КАК СТРОКА(1000)),
		|	ОтчетностьКПК.СопроводительноеПисьмо_ФамилияРуководителяКПК,
		|	ОтчетностьКПК.СопроводительноеПисьмо_ИмяРуководителяКПК,
		|	ОтчетностьКПК.СопроводительноеПисьмо_ОтчествоРуководителяКПК,
		|	ОтчетностьКПК.ОснованиеНаправления,
		|	ОтчетностьКПК.СопроводительноеПисьмо_ИсходящийНомер,
		|	ОтчетностьКПК.ДатаИсходящегоДокумента,
		|	ОтчетностьКПК.СопроводительноеПисьмо_Примечания
		|ИМЕЮЩИЕ
		|	1=1
		|    #ОтборИмеющие#
		|УПОРЯДОЧИТЬ ПО
		|	ОтчетностьКПК.КПК.НомерВРеестреСРО,
		|	ДатаОкончанияОтчетногоПериода";
					                                          				   
		
		ОтборИмеющие = "";
							  
		Если  флФильтрыПоАктивам Тогда  
		 
		 	ОтборИмеющие = "
			|	И СУММА(ВЫБОР
			|	КОГДА ОтчетностьКПКТаблицаПоказателей.Раздел = &Раздел2_1
			|	ТОГДА ЕСТЬNULL(ОтчетностьКПКТаблицаПоказателей.Показатель1, 0)
			|	ИНАЧЕ 0
			|	КОНЕЦ) >= &АктивыОт";

			Если АктивыДо <> 0 Тогда
				ОтборИмеющие = ОтборИмеющие + "
				|И СУММА(ВЫБОР
				|	КОГДА ОтчетностьКПКТаблицаПоказателей.Раздел = &Раздел2_1
				|		ТОГДА ЕСТЬNULL(ОтчетностьКПКТаблицаПоказателей.Показатель1, 0)
				|	ИНАЧЕ 0
				|КОНЕЦ) <= &АктивыДо";
			КонецЕсли; 		  		
				
			Запрос.УстановитьПараметр("АктивыОт", АктивыОт);
			Запрос.УстановитьПараметр("АктивыДо", АктивыДо); 		
		КонецЕсли; 	
		
		
		Если  флФильтрПоКоличествуЧленов Тогда  
		 
		 	ОтборИмеющие = ОтборИмеющие + "
			|	И СУММА(ВЫБОР           
			|			КОГДА (ОтчетностьКПК.Ссылка.КодДокумента = ЗНАЧЕНИЕ(Перечисление.КодДокумента.ОКУД_0420820_21633) ИЛИ ОтчетностьКПК.Ссылка.КодДокумента = ЗНАЧЕНИЕ(Перечисление.КодДокумента.ОКУД_0420820_21634)) И ОтчетностьКПКТаблицаПоказателей.Раздел = &Раздел4_1    
			
			|				ТОГДА ЕСТЬNULL(ОтчетностьКПКТаблицаПоказателей.Показатель1, 0)
			|			КОГДА ОтчетностьКПК.Ссылка.КодДокумента <> ЗНАЧЕНИЕ(Перечисление.КодДокумента.ОКУД_0420820_21633) И ОтчетностьКПК.Ссылка.КодДокумента <> ЗНАЧЕНИЕ(Перечисление.КодДокумента.ОКУД_0420820_21634) И ОтчетностьКПКТаблицаПоказателей.Раздел = &Раздел4_11	
			|				ТОГДА ЕСТЬNULL(ОтчетностьКПКТаблицаПоказателей.Показатель1, 0)
			|			ИНАЧЕ 0
			|		КОНЕЦ)  >= &КоличествоЧленовОт";

			Если КоличествоЧленовДо <> 0 Тогда
				ОтборИмеющие = ОтборИмеющие + "
				|	И СУММА(ВЫБОР           
				|			КОГДА (ОтчетностьКПК.Ссылка.КодДокумента = ЗНАЧЕНИЕ(Перечисление.КодДокумента.ОКУД_0420820_21633) ИЛИ ОтчетностьКПК.Ссылка.КодДокумента = ЗНАЧЕНИЕ(Перечисление.КодДокумента.ОКУД_0420820_21634)) И ОтчетностьКПКТаблицаПоказателей.Раздел = &Раздел4_1    
				
				|				ТОГДА ЕСТЬNULL(ОтчетностьКПКТаблицаПоказателей.Показатель1, 0)
				|			КОГДА ОтчетностьКПК.Ссылка.КодДокумента <> ЗНАЧЕНИЕ(Перечисление.КодДокумента.ОКУД_0420820_21633) И ОтчетностьКПК.Ссылка.КодДокумента <> ЗНАЧЕНИЕ(Перечисление.КодДокумента.ОКУД_0420820_21634) И ОтчетностьКПКТаблицаПоказателей.Раздел = &Раздел4_11	
				|				ТОГДА ЕСТЬNULL(ОтчетностьКПКТаблицаПоказателей.Показатель1, 0)
				|			ИНАЧЕ 0
				|		КОНЕЦ) <= &КоличествоЧленовДо";
			КонецЕсли; 		  		
				
			Запрос.УстановитьПараметр("КоличествоЧленовОт", КоличествоЧленовОт);          
			Запрос.УстановитьПараметр("КоличествоЧленовДо", КоличествоЧленовДо); 		
		КонецЕсли; 		
		

		
		ОтборПоКПК = "";
		Если МассивКПК.Количество() > 0 Тогда
			ОтборПоКПК = "И ОтчетностьКПК.КПК В(&МассивКПК)";
			Запрос.УстановитьПараметр("МассивКПК", МассивКПК);		
		КонецЕсли;
		
		ОтборПоКПК1 = ОтборПоКПК;
		
		Если флФильтрПоКоличествуРегионов Тогда
			Запрос.УстановитьПараметр("КоличествоРегионовДляОтбора", КоличествоРегионовДляОтбора);		
		КонецЕсли;
		

		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ОтборПоКПК#", ОтборПоКПК); 	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ОтборПоКПК1#", ОтборПоКПК1); 	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ОтборИмеющие#", ОтборИмеющие); 	
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;	
	  
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));	
	Запрос.УстановитьПараметр("Раздел2_1", Справочники.Разделы.Раздел2_1);
	Запрос.УстановитьПараметр("Раздел4_11", Справочники.Разделы.Раздел4_11);      	
	Запрос.УстановитьПараметр("Раздел4_1", Справочники.Разделы.НайтиПоКоду("4_1"));   
	Запрос.УстановитьПараметр("Адрес", Перечисления.ТипыКонтактнойИнформации.Адрес); 
	
	// начинаем вывод таблицы
//	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");   
	Макет = ПолучитьОбщийМакет("СРО_ОтчетПоРазделам");  	
	
	//ОтчетОбъект.ПолучитьМакет("Макет");    
	
	// заголовок отчета
	ОбластьНаименованиеРаздела= Макет.ПолучитьОбласть("НаименованиеРаздела"); 		
	ОбластьЗаголовокОтчета= Макет.ПолучитьОбласть("ЗаголовокОтчета");	 	
	ТабличныйДокумент.Вывести(ОбластьЗаголовокОтчета, 1);
		
	ОбластьШапкаДокументаОтчетности= Макет.ПолучитьОбласть("ШапкаДокументаОтчетности");	

	
	// Области подразделов    
	
	                                                              	 	
	
	ОбластьРаздел1_Подраздел5_Шапка= Макет.ПолучитьОбласть("Раздел1_Подраздел5_Шапка"); 
	ОбластьСтрокаРаздел1_Подраздел5= Макет.ПолучитьОбласть("СтрокаРаздел1_Подраздел5"); 
	
	
	ОбластьСопроводительноеПисьмо = Макет.ПолучитьОбласть("СопроводительноеПисьмо"); 


	// добавить проверку на отбор по разделам
	
	Если флВыводитьРеестр Тогда
		МакетРеестр = Отчеты.СРО_ОтчетПоРазделамДокументовОтчетности.ПолучитьМакет("Реестр");		
		ОбластьРеестрШапка = МакетРеестр.ПолучитьОбласть("РеестрШапка");
		ОбластьРеестрШапка.параметры.ПредставлениеПериода = ПредставлениеПериода(ДатаНачала, ДатаОкончания);	
		КраткийРеестр.Вывести(ОбластьРеестрШапка);
		
		ОбластьРеестрСтрока = МакетРеестр.ПолучитьОбласть("РеестрСтрока");
	КонецЕсли; 	
	
	// Дополнительный отчет		
	Выборка = Запрос.Выполнить().Выбрать();
	
	сч = 0;
	
	// вывод таблицы по каждому документу отчетности
	Пока Выборка.Следующий() Цикл      
		
		Если ВсеРазделы ИЛИ (НЕ ВсеРазделы И СписокРазделов.НайтиПоЗначению(Справочники.Разделы.Раздел1) <> Неопределено) Тогда	
			
			ДокументОтчетности = Выборка.ДокументОтчетности;
			КПК = ДокументОтчетности.КПК;
			МассивРегионов = Новый Массив;

			// по контрагенту
			Для Каждого ТекСтрока ИЗ КПК.КонтактнаяИнформация Цикл 	
				Если ТекСтрока.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
					Если МассивРегионов.Найти(СокрЛП(ТекСтрока.Регион)) = Неопределено Тогда
						МассивРегионов.Добавить(СокрЛП(ТекСтрока.Регион));					
					КонецЕсли;   				
				КонецЕсли;
			КонецЦикла;
			
			// По Обособленным подразделения
			Для Каждого ТекСтрока ИЗ ДокументОтчетности.ОбособленныеПодразделения_КонтактнаяИнформация Цикл 				
				Если ТекСтрока.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
					Если МассивРегионов.Найти(СокрЛП(ТекСтрока.Регион)) = Неопределено Тогда
						МассивРегионов.Добавить(СокрЛП(ТекСтрока.Регион));					
					КонецЕсли;   				
				КонецЕсли;
			КонецЦикла;
			
			// По местам нахождения обособленных подразделений
			
			// По Обособленным подразделения
			Для Каждого ТекСтрока ИЗ ДокументОтчетности.ТаблицаАдресовМестаНахожденияОбособленныхПодразделений Цикл 	
				Адрес = СокрЛП(ТекСтрока.Адрес);
				
				Поз = СтрНайти(Адрес, ",");
				
				Если Поз > 0 Тогда
					ТекРегион = Лев(Адрес, Поз - 1);
					Если МассивРегионов.Найти(ТекРегион) = Неопределено Тогда
						МассивРегионов.Добавить(ТекРегион);					
					КонецЕсли;   		
	
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		Если флФильтрПоКоличествуРегионов Тогда
			Если МассивРегионов.Количество() < КоличествоРегионовДляОтбора Тогда
				Продолжить;
			КонецЕсли;			
		КонецЕсли;                                      
		
		ДокументОтчетности = Выборка.ДокументОтчетности;
		
		КодДокумента = ДокументОтчетности.КодДокумента;
		
		Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
			ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
			ОбластьСопроводительноеПисьмо = Макет.ПолучитьОбласть("СопроводительноеПисьмо_2164");  
		КонецЕсли;
		
		НачалоПериода = НачалоКвартала(Выборка.ДатаОкончанияОтчетногоПериода);
		ОкончаниеПериода = КонецКвартала(Выборка.ДатаОкончанияОтчетногоПериода);  		
		
		ОбластьШапкаДокументаОтчетности.Параметры.НомерВРеестреСРО      = ДокументОтчетности.КПК.НомерВРеестреСРО;
		ОбластьШапкаДокументаОтчетности.Параметры.КПКПолноеНаименование = СокрЛП(Выборка.КПКПолноеНаименование);
		ОбластьШапкаДокументаОтчетности.Параметры.ПредставлениеПериода = ПредставлениеПериода(НачалоПериода, ОкончаниеПериода);	
		ОбластьШапкаДокументаОтчетности.Параметры.КодДокумента = Выборка.КодДокумента;	
		ТабличныйДокумент.Вывести(ОбластьШапкаДокументаОтчетности, 2);		
		
		// Выводим строку краткого реестра
		Если флВыводитьРеестр Тогда
			сч = сч + 1;
			ОбластьРеестрСтрока.Параметры.сч	             = сч;
			ОбластьРеестрСтрока.Параметры.НомерВРеестреСРО   = ДокументОтчетности.КПК.НомерВРеестреСРО; 	
			ОбластьРеестрСтрока.Параметры.НаименованиеПолное = СокрЛП(Выборка.КПКПолноеНаименование);	
			ОбластьРеестрСтрока.Параметры.ИНН	             = СокрЛП(ДокументОтчетности.КПК.ИНН);          
			ОбластьРеестрСтрока.Параметры.ОГРН               = СокрЛП(ДокументОтчетности.КПК.ОГРН);

			КраткийРеестр.Вывести(ОбластьРеестрСтрока);
		КонецЕсли;	


		Если ВсеРазделы ИЛИ (НЕ ВсеРазделы И СписокРазделов.НайтиПоЗначению(Справочники.Разделы.Раздел1) <> Неопределено) Тогда		
		
			// Раздел 1
			ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Раздел I. Общие сведения";
			ТабличныйДокумент.Вывести(ОбластьНаименованиеРаздела, 3);
					
			// Подраздел 1. Реквизиты кредитного потребительского кооператива
			
			ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Подраздел 1. Реквизиты кредитного потребительского кооператива";
			ТабличныйДокумент.Вывести(ОбластьНаименованиеРаздела, 4);


			
			Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
				ИЛИ  КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634
				ИЛИ  КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
				ИЛИ  КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
				ИЛИ  КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
				ИЛИ  КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
				ОбластьРаздел1_Подраздел1= Макет.ПолучитьОбласть("Раздел1_Подраздел1_33_1"); 
				ОбластьСтрокаРаздел1_Подраздел1_33_МестоНахождениеКПК = Макет.ПолучитьОбласть("Раздел1_Подраздел1_33_МестоНахождениеКПК"); 				
				ОбластьРаздел1_Подраздел1_33_2 = Макет.ПолучитьОбласть("Раздел1_Подраздел1_33_2"); 
				ОбластьРаздел1_Подраздел1_33_2_Строка = Макет.ПолучитьОбласть("Раздел1_Подраздел1_33_2_Строка"); 
				
				ОбластьРаздел1_Подраздел2_Шапка= Макет.ПолучитьОбласть("Раздел1_Подраздел2_Шапка_33"); 				
				ОбластьСтрокаРаздел1_Подраздел2= Макет.ПолучитьОбласть("СтрокаРаздел1_Подраздел2_33"); 
				
				ОбластьСтрокаРаздел1_Подраздел2_Строка_33 = Макет.ПолучитьОбласть("СтрокаРаздел1_Подраздел2_Строка_33"); 
				
				ОбластьСтрокаРаздел1_Подраздел2_Строка_33_ДвойнойРазделитель = Макет.ПолучитьОбласть("СтрокаРаздел1_Подраздел2_Строка_33_ДвойнойРазделитель"); 				

				ОбластьРаздел1_Подраздел3_33 = Макет.ПолучитьОбласть("Раздел1_Подраздел3_33");
				ОбластьСтрокаРаздел1_Подраздел3_33 = Макет.ПолучитьОбласть("Раздел1_Подраздел3_33_Строка");
				
				//ОбластьЗаголовкиШапкиРаздел10 = Макет.ПолучитьОбласть("ЗаголовкиШапкиРаздел10_33");
				//ОбластьСтрокаРаздел10_33 = Макет.ПолучитьОбласть("СтрокаРаздел10_33");
				//
				//ОбластьЗаголовкиШапкиРаздел11 = Макет.ПолучитьОбласть("ЗаголовкиШапкиРаздел11_33");
				//ОбластьСтрокаРаздел11_33 = Макет.ПолучитьОбласть("СтрокаРаздел11_33");
				
				Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164 
					ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
					ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
					ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда				
					ОбластьРаздел1_Подраздел3 = Макет.ПолучитьОбласть("Раздел1_Подраздел3_2164"); 
				Иначе
					ОбластьРаздел1_Подраздел3 = Макет.ПолучитьОбласть("Раздел1_Подраздел4_3_3"); 
				КонецЕсли;
				
				Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
					ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
					ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
					ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
					ОбластьРаздел1_Подраздел4 = Макет.ПолучитьОбласть("Раздел1_Подраздел4_2164"); 
				Иначе
					ОбластьРаздел1_Подраздел4 = Макет.ПолучитьОбласть("Раздел1_Подраздел4"); 
				КонецЕсли;        
				
				ОбластьРаздел1_Подраздел6 = Макет.ПолучитьОбласть("Раздел1_Подраздел6_3_3"); 

						
			Иначе
				ОбластьРаздел1_Подраздел1= Макет.ПолучитьОбласть("Раздел1_Подраздел1"); 
				ОбластьРаздел1_Подраздел2_Шапка= Макет.ПолучитьОбласть("Раздел1_Подраздел2_Шапка"); 	
				ОбластьСтрокаРаздел1_Подраздел2= Макет.ПолучитьОбласть("СтрокаРаздел1_Подраздел2"); 
				ОбластьРаздел1_Подраздел3 = Макет.ПолучитьОбласть("Раздел1_Подраздел3"); 
				
				ОбластьРаздел1_Подраздел6 = Макет.ПолучитьОбласть("Раздел1_Подраздел6"); 

			КонецЕсли;
			
			ОбластьРаздел1_Подраздел1.Параметры.Заполнить(Выборка);				
			ОбластьРаздел1_Подраздел1.Параметры.АктивыНаКонецПериода           = Выборка.АктивыНаКонецПериода;
			ОбластьРаздел1_Подраздел1.Параметры.КоличествоЧленовНаКонецПериода = Выборка.КоличествоЧленовНаКонецПериода;
			
			// Вытягиваем количество регионов из документов 			
			
			ОбластьРаздел1_Подраздел1.Параметры.КоличествоРегионов             = МассивРегионов.Количество(); // Выборка.КоличествоРегионов;    	
			ОбластьРаздел1_Подраздел1.Параметры.КоличествоФилиалов             = Выборка.КоличествоФилиалов;    
				
			ТабличныйДокумент.Вывести(ОбластьРаздел1_Подраздел1, 5);
			
			НомерСтроки = 0;
			Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
				НомерСтроки = НомерСтроки + 1;
				
				Для Каждого ТекСтрока ИЗ ДокументОтчетности.ТаблицаАдресовМестаНахожденияОбособленныхПодразделений Цикл
					ОбластьСтрокаРаздел1_Подраздел1_33_МестоНахождениеКПК.Параметры.Заполнить(ТекСтрока);		
					ОбластьСтрокаРаздел1_Подраздел1_33_МестоНахождениеКПК.Параметры.НомерСтроки = НомерСтроки;
					ТабличныйДокумент.Вывести(ОбластьСтрокаРаздел1_Подраздел1_33_МестоНахождениеКПК, 5);
				КонецЦикла;
			
				ОбластьРаздел1_Подраздел1_33_2.Параметры.Заполнить(Выборка);
				ТабличныйДокумент.Вывести(ОбластьРаздел1_Подраздел1_33_2, 5); 
					
				Для Каждого ТекСтрока ИЗ ДокументОтчетности.КодыДеятельности Цикл					
					ОбластьРаздел1_Подраздел1_33_2_Строка.Параметры.КодДеятельности = ТекСтрока.КодДеятельности;
					ТабличныйДокумент.Вывести(ОбластьРаздел1_Подраздел1_33_2_Строка, 6);
				КонецЦикла;	

			КонецЕсли;      			
			
			// // Подраздел 2. Сведения об обособленных подразделениях
			
			ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Подраздел 2. Сведения об обособленных подразделениях";
			ТабличныйДокумент.Вывести(ОбластьНаименованиеРаздела, 4);

			
			ТекИдентификаторПодразделения = "";
			
	//		АдресОбособленногоПодразделения = СокрЛП(Выборка.ДокументОтчетности.ТаблицаАдресовМестаНахождения[0].Адрес);

			
			// Подраздел 2. Сведения об обособленных подразделениях
			ТабличныйДокумент.Вывести(ОбластьРаздел1_Подраздел2_Шапка, 5);
			
			Если Выборка.ДокументОтчетности.ТаблицаОбособленныхПодразделениях.Количество() > 0 Тогда
				
				
				ТекИдентификаторПодразделения = "";
				Для Каждого СтрокаТЗ ИЗ Выборка.ДокументОтчетности.ТаблицаОбособленныхПодразделениях Цикл	
					
					АдресФактическогоНахождения	= "";
					ПочтовыйАдрес               = "";
					НомерТелефона	            = "";
					
					ГУИдПодразделения = СтрокаТЗ.ИдентификаторПодразделения;
					
					СтруктураПоиска = Новый Структура("ИдентификаторПодразделения", ГУИдПодразделения);
					
					ТаблицаКонтактнаяИнформация = ДокументОтчетности.ОбособленныеПодразделения_КонтактнаяИнформация;
					
					Если ТаблицаКонтактнаяИнформация.Количество() = 0 Тогда
						АдресФактическогоНахождения = СтрокаТЗ.АдресФактическогоНахождения;
						ПочтовыйАдрес = СтрокаТЗ.ПочтовыйАдрес;
						НомерТелефона = СтрокаТЗ.НомерТелефона;
					Иначе					
					
						СтрокиКонтактнойИнформации = ДокументОтчетности.ОбособленныеПодразделения_КонтактнаяИнформация.найтиСтроки(СтруктураПоиска);
						
						АдресЭлектроннойПочты = "";
						
						Для Каждого СтрокаКИ ИЗ СтрокиКонтактнойИнформации Цикл
							
							Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.ФактическийАдресКонтрагента  И АдресФактическогоНахождения = "" Тогда
								АдресФактическогоНахождения = СтрЗаменить(СтрокаКИ.Представление," ,", ", ");
							ИначеЕсли СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента  И ПочтовыйАдрес = "" Тогда
								ВремПочтовыйАдрес = СтрЗаменить(СтрокаКИ.Представление," ,", ", ");
			
								Если АдресФактическогоНахождения <> "" И ВремПочтовыйАдрес <> АдресФактическогоНахождения Тогда
									ПочтовыйАдрес = ВремПочтовыйАдрес;
								ИначеЕсли АдресФактическогоНахождения = "" Тогда
									ПочтовыйАдрес = ВремПочтовыйАдрес;
								КонецЕсли;
								
								Если ПочтовыйАдрес = "" Тогда  								
									ПочтовыйАдрес = ВремПочтовыйАдрес;
								КонецЕсли;	
								
								// Ищем фактический	 адрес 
								ТаблицаАдресовМестаНахожденияОбособленныхПодразделений = Выборка.ДокументОтчетности.ТаблицаАдресовМестаНахожденияОбособленныхПодразделений;
								
								НайденныеСтроки = ДокументОтчетности.ТаблицаАдресовМестаНахожденияОбособленныхПодразделений.НайтиСтроки(Новый Структура("ИдентификаторПодразделения", СтрокаКИ.ИдентификаторПодразделения));
								
								Если НайденныеСтроки.Количество() > 0 Тогда     									
									АдресФактическогоНахождения = СокрЛП(НайденныеСтроки[0].Адрес);    									
								КонецЕсли;
								
								
							ИначеЕсли СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента Тогда
								НомерТелефона = СокрЛП(СтрокаКИ.Представление);   	
								
							ИначеЕсли СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтрагента Тогда
								
								АдресЭлектроннойПочты = АдресЭлектроннойПочты + ?(АдресЭлектроннойПочты="", "", "; ") + СокрЛП(СтрокаКИ.Представление);   	
	
							КонецЕсли;
							
						КонецЦикла;
						
						АдресЭлектроннойПочты = СокрЛП(АдресЭлектроннойПочты); 						
						
					КонецЕсли;     					
					
					ОбластьСтрокаРаздел1_Подраздел2.Параметры.НомерСтроки = СтрокаТЗ.НомерСтроки;
					ОбластьСтрокаРаздел1_Подраздел2.Параметры.НаименованиеОбособленногоПодразделения = СтрокаТЗ.НаименованиеОбособленногоПодразделения;
					ОбластьСтрокаРаздел1_Подраздел2.Параметры.ВидОбособленногоПодразделения = СтрокаТЗ.ВидОбособленногоПодразделения;     					
					ОбластьСтрокаРаздел1_Подраздел2.Параметры.АдресФактическогоНахождения = АдресФактическогоНахождения;
					ОбластьСтрокаРаздел1_Подраздел2.Параметры.ПочтовыйАдрес				  = ПочтовыйАдрес;
					ОбластьСтрокаРаздел1_Подраздел2.Параметры.НомерТелефона 			  = НомерТелефона;
					
					Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
						ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда
						ОбластьСтрокаРаздел1_Подраздел2.Параметры.АдресЭлектроннойПочты 			  = АдресЭлектроннойПочты;
					КонецЕсли;    
							
					ТабличныйДокумент.Вывести(ОбластьСтрокаРаздел1_Подраздел2, 5); 
					
					Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
						ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда

						// Выводим строки таблицы ТаблицаАдресовМестаНахожденияОбособленныхПодразделений
						// Ищем фактический	 адрес 
						ТаблицаАдресовМестаНахожденияОбособленныхПодразделений = ДокументОтчетности.ТаблицаАдресовМестаНахожденияОбособленныхПодразделений;
						
						НайденныеСтроки = ДокументОтчетности.ТаблицаАдресовМестаНахожденияОбособленныхПодразделений.НайтиСтроки(Новый Структура("ИдентификаторПодразделения", СтрокаТЗ.ИдентификаторПодразделения));
						
						Если НайденныеСтроки.Количество() > 0 Тогда     
							НомерСтроки = 0;
							Для Каждого ТекСтрока ИЗ НайденныеСтроки Цикл
								НомерСтроки = НомерСтроки + 1;
								АдресФактическогоНахождения = СокрЛП(НайденныеСтроки[0].Адрес);    	
								
								ОбластьСтрокаРаздел1_Подраздел2_Строка_33.Параметры.Заполнить(ТекСтрока);
								ОбластьСтрокаРаздел1_Подраздел2_Строка_33.Параметры.НомерСтроки = НомерСтроки;
								ТабличныйДокумент.Вывести(ОбластьСтрокаРаздел1_Подраздел2_Строка_33, 6);   							
								
							Конеццикла;
							
							ТабличныйДокумент.Вывести(ОбластьСтрокаРаздел1_Подраздел2_Строка_33_ДвойнойРазделитель, 6);   
							
						КонецЕсли;
					КонецЕсли;

				КонецЦикла; 				
			КонецЕсли;
			
			
			    
			Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
				
				// Подраздел 3. Сведения о деятельности обособленных подразделений КПК  
				ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Подраздел 3. Сведения о деятельности обособленных подразделений КПК";
				ТабличныйДокумент.Вывести(ОбластьНаименованиеРаздела, 4);    
				
				ТабличныйДокумент.Вывести(ОбластьРаздел1_Подраздел3_33, 5); 
				
				
				Для Каждого ТекСтрока ИЗ ДокументОтчетности.ТаблицаОбособленныхПодразделениях Цикл
					ОбластьСтрокаРаздел1_Подраздел3_33.Параметры.Заполнить(ТекСтрока);					
						
					ОбластьСтрокаРаздел1_Подраздел3_33.Параметры.ОбъемВыданныхЗаймов = СРО_ЗагрузкаОтчетности.ПолучитьПредставлениеЧисловогоПоказателя(ТекСтрока.ОбъемВыданныхЗаймов);    				
					ОбластьСтрокаРаздел1_Подраздел3_33.Параметры.ОбъемПривлеченныхСредств = СРО_ЗагрузкаОтчетности.ПолучитьПредставлениеЧисловогоПоказателя(ТекСтрока.ОбъемПривлеченныхСредств);                                                                    				
					ОбластьСтрокаРаздел1_Подраздел3_33.Параметры.СуммаЗадолжностиПоОснДолгуПоПредоставленнымЗаймам = СРО_ЗагрузкаОтчетности.ПолучитьПредставлениеЧисловогоПоказателя(ТекСтрока.СуммаЗадолжностиПоОснДолгуПоПредоставленнымЗаймам);    	                  
					ОбластьСтрокаРаздел1_Подраздел3_33.Параметры.СуммаПросроченнойЗадолжностиПоОснДолгуПоПредоставленнымЗаймам = СРО_ЗагрузкаОтчетности.ПолучитьПредставлениеЧисловогоПоказателя(ТекСтрока.СуммаПросроченнойЗадолжностиПоОснДолгуПоПредоставленнымЗаймам);    				;
								
					ТабличныйДокумент.Вывести(ОбластьСтрокаРаздел1_Подраздел3_33, 5);
				КонецЦикла;                                                          				
				
				
				// Подраздел 4. Сведения о саморегулируемой организации
				ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Подраздел 4. Сведения о саморегулируемой организации";
				ТабличныйДокумент.Вывести(ОбластьНаименованиеРаздела, 4);    
				
				ОбластьРаздел1_Подраздел3.Параметры.Заполнить(Выборка);
				
				ОбластьРаздел1_Подраздел3.Параметры.Раздел1_Подраздел3_1 = "1";
				ОбластьРаздел1_Подраздел3.Параметры.Раздел1_Подраздел3_2 = "2";
				ОбластьРаздел1_Подраздел3.Параметры.Раздел1_Подраздел3_3 = "3";
				
				Если КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_2164
					И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_21641
					И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_21642
					И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
					ОбластьРаздел1_Подраздел3.Параметры.Раздел1_Подраздел3_4 = "4";
					ОбластьРаздел1_Подраздел3.Параметры.Раздел1_Подраздел3_5 = "5";
				КонецЕсли;

				
				ТабличныйДокумент.Вывести(ОбластьРаздел1_Подраздел3, 5);
				
				// Подраздел 5. Сведения о Кредитном потребительском кооперативе 2 уровня
				ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Подраздел 5. Сведения о Кредитном потребительском кооперативе 2 уровня";
				ТабличныйДокумент.Вывести(ОбластьНаименованиеРаздела, 4);         
				
				ОбластьРаздел1_Подраздел4.Параметры.Заполнить(Выборка);
				
				
				ОбластьРаздел1_Подраздел4.Параметры.Пункт_1 = "1";
				ОбластьРаздел1_Подраздел4.Параметры.Пункт_2 = "2";
				ОбластьРаздел1_Подраздел4.Параметры.Пункт_3 = "3";
				
				Если КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_2164
					И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_21641
					И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_21642
					И КодДокумента <> Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
					ОбластьРаздел1_Подраздел4.Параметры.Пункт_4 = "4";  
					ОбластьРаздел1_Подраздел4.Параметры.Пункт_5 = "5"; 
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьРаздел1_Подраздел4, 5);				
				
				// Подраздел 6. Кредитный рейтинг КПК
				ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Подраздел 6. Кредитный рейтинг КПК";
				ТабличныйДокумент.Вывести(ОбластьНаименованиеРаздела, 4);
				
				ОбластьРаздел1_Подраздел6.Параметры.Заполнить(Выборка);
				ОбластьРаздел1_Подраздел6.Параметры.Раздел1_Подраздел6_1 = "1";
				ОбластьРаздел1_Подраздел6.Параметры.Раздел1_Подраздел6_2 = "2";
				ОбластьРаздел1_Подраздел6.Параметры.Раздел1_Подраздел6_3 = "3";
				ОбластьРаздел1_Подраздел6.Параметры.Раздел1_Подраздел6_4 = "4";
				ОбластьРаздел1_Подраздел6.Параметры.Раздел1_Подраздел6_5 = "5";   
				
				ТабличныйДокумент.Вывести(ОбластьРаздел1_Подраздел6, 5); 	
 
				
				// Подраздел 7. Сведения о счетах КПК
				
				Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
					ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
					ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
					ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
					ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Подраздел 7. Принцип объединения членов КПК (пайщиков)";
					ТабличныйДокумент.Вывести(ОбластьНаименованиеРаздела, 4);
					
					ОбластьРаздел1_Подраздел7_2164 = Макет.ПолучитьОбласть("Раздел1_Подраздел7_2164"); 
					ОбластьСтрокаРаздел1_Подраздел7_2164 = Макет.ПолучитьОбласть("Раздел1_Подраздел7_2164_Строка"); 
					
					ТабличныйДокумент.Вывести(ОбластьРаздел1_Подраздел7_2164, 5);    				
				
					Для Каждого ТекСтрока ИЗ ДокументОтчетности.ТаблицаПринципыОбъединенияЧленовКПК Цикл
						ОбластьСтрокаРаздел1_Подраздел7_2164.Параметры.Заполнить(ТекСтрока);
						
						ОбластьСтрокаРаздел1_Подраздел7_2164.Параметры.КоличествоЧленовКПК = ?(ТекСтрока.КоличествоЧленовКПК = -99999, "-", ТекСтрока.КоличествоЧленовКПК);
						ОбластьСтрокаРаздел1_Подраздел7_2164.Параметры.ОГРНЧленаКПК = ?(ТекСтрока.ОГРНЧленаКПК = -99999, "-", ТекСтрока.ОГРНЧленаКПК);
						
						ТабличныйДокумент.Вывести(ОбластьСтрокаРаздел1_Подраздел7_2164, 5);
					КонецЦикла;   	   					
					
				Иначе	
					ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Подраздел 7. Сведения о счетах КПК, открытых в кредитных организациях";
					ТабличныйДокумент.Вывести(ОбластьНаименованиеРаздела, 4);
					
					ТабличныйДокумент.Вывести(ОбластьРаздел1_Подраздел5_Шапка, 5);     
					
					Если Выборка.ДокументОтчетности.ТаблицаКредитныхСчетов.Количество() > 0 Тогда
						Для Каждого СтрокаТЗ ИЗ Выборка.ДокументОтчетности.ТаблицаКредитныхСчетов Цикл			
							ОбластьСтрокаРаздел1_Подраздел5.Параметры.Заполнить(СтрокаТЗ);
							ТабличныйДокумент.Вывести(ОбластьСтрокаРаздел1_Подраздел5, 6);   
						КонецЦикла; 				
					КонецЕсли;
				КонецЕсли;


			Иначе	
				
				// Подраздел 3. Сведения о саморегулируемой организации
				ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Подраздел 3. Сведения о саморегулируемой организации";
				ТабличныйДокумент.Вывести(ОбластьНаименованиеРаздела, 4);    
				
				ОбластьРаздел1_Подраздел3.Параметры.Заполнить(Выборка);
				ОбластьРаздел1_Подраздел3.Параметры.Раздел1_Подраздел3_1 = "24";
				ОбластьРаздел1_Подраздел3.Параметры.Раздел1_Подраздел3_2 = "25";
				ОбластьРаздел1_Подраздел3.Параметры.Раздел1_Подраздел3_3 = "26";
				ОбластьРаздел1_Подраздел3.Параметры.Раздел1_Подраздел3_4 = "27";
				ОбластьРаздел1_Подраздел3.Параметры.Раздел1_Подраздел3_5 = "28";   

				ТабличныйДокумент.Вывести(ОбластьРаздел1_Подраздел3, 5);
				
				// Подраздел 4. Сведения о Кредитном потребительском кооперативе 2 уровня
				ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Подраздел 4. Сведения о Кредитном потребительском кооперативе 2 уровня";
				ТабличныйДокумент.Вывести(ОбластьНаименованиеРаздела, 4);    
				
				ОбластьРаздел1_Подраздел4.Параметры.Заполнить(Выборка);
				
				ОбластьРаздел1_Подраздел4.Параметры.Пункт_1 = "29";
				ОбластьРаздел1_Подраздел4.Параметры.Пункт_2 = "30";
				ОбластьРаздел1_Подраздел4.Параметры.Пункт_3 = "31";
				ОбластьРаздел1_Подраздел4.Параметры.Пункт_4 = "32";

				ТабличныйДокумент.Вывести(ОбластьРаздел1_Подраздел4, 5);    
				
				// Подраздел 5. Сведения о счетах КПК
				ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Подраздел 5. Сведения о счетах КПК";
				ТабличныйДокумент.Вывести(ОбластьНаименованиеРаздела, 4);
				
				ТабличныйДокумент.Вывести(ОбластьРаздел1_Подраздел5_Шапка, 5);     
				
				Если Выборка.ДокументОтчетности.ТаблицаКредитныхСчетов.Количество() > 0 Тогда
					Для Каждого СтрокаТЗ ИЗ Выборка.ДокументОтчетности.ТаблицаКредитныхСчетов Цикл			
						ОбластьСтрокаРаздел1_Подраздел5.Параметры.Заполнить(СтрокаТЗ);
						ТабличныйДокумент.Вывести(ОбластьСтрокаРаздел1_Подраздел5, 6);   
					КонецЦикла; 				
				КонецЕсли;
				
				// Подраздел 6. Кредитный рейтинг КПК
				ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Подраздел 6. Кредитный рейтинг КПК";
				ТабличныйДокумент.Вывести(ОбластьНаименованиеРаздела, 4);
				
				ОбластьРаздел1_Подраздел6.Параметры.Заполнить(Выборка);
				ОбластьРаздел1_Подраздел6.Параметры.Раздел1_Подраздел6_1 = "42";
				ОбластьРаздел1_Подраздел6.Параметры.Раздел1_Подраздел6_2 = "43";
				ОбластьРаздел1_Подраздел6.Параметры.Раздел1_Подраздел6_3 = "44";
				ОбластьРаздел1_Подраздел6.Параметры.Раздел1_Подраздел6_4 = "45";
				ОбластьРаздел1_Подраздел6.Параметры.Раздел1_Подраздел6_5 = "46";   
				
				ТабличныйДокумент.Вывести(ОбластьРаздел1_Подраздел6, 5); 	
			
			КонецЕсли;		                                                		
	

		КонецЕсли;
		
		// Раздел 2		
		Если ВсеРазделы ИЛИ (НЕ ВсеРазделы И СписокРазделов.НайтиПоЗначению(Справочники.Разделы.Раздел2) <> Неопределено) Тогда	 						
			
			// выводим таблицу  	   			
			ВывестиТаблицуПоказателей("Раздел2", Выборка.ДокументОтчетности, ТабличныйДокумент, Макет); 			
		КонецЕсли;

		// Раздел 3		
		Если ВсеРазделы ИЛИ (НЕ ВсеРазделы И СписокРазделов.НайтиПоЗначению(Справочники.Разделы.Раздел3) <> Неопределено) Тогда	
			
			// выводим таблицу  	   			
			ВывестиТаблицуПоказателей("Раздел3", Выборка.ДокументОтчетности, ТабличныйДокумент, Макет); 			
		КонецЕсли;    		
			
		// Раздел 4		
		Если ВсеРазделы ИЛИ (НЕ ВсеРазделы И СписокРазделов.НайтиПоЗначению(Справочники.Разделы.Раздел4) <> Неопределено) Тогда	
			// выводим таблицу  	   			
			ВывестиТаблицуПоказателей("Раздел4", Выборка.ДокументОтчетности, ТабличныйДокумент, Макет); 			
		КонецЕсли;
		
		// Раздел 5		
		Если ВсеРазделы ИЛИ (НЕ ВсеРазделы И СписокРазделов.НайтиПоЗначению(Справочники.Разделы.Раздел5) <> Неопределено) Тогда	
			// выводим таблицу  	   			
			ВывестиТаблицуПоказателей("Раздел5", Выборка.ДокументОтчетности, ТабличныйДокумент, Макет); 			
		КонецЕсли;
		
		// Раздел 6		
		Если ВсеРазделы ИЛИ (НЕ ВсеРазделы И СписокРазделов.НайтиПоЗначению(Справочники.Разделы.Раздел6) <> Неопределено) Тогда	
			// выводим таблицу  	   			
			ВывестиТаблицуПоказателей("Раздел6", Выборка.ДокументОтчетности, ТабличныйДокумент, Макет); 			
		КонецЕсли;
		
		// Раздел 7		
		Если ВсеРазделы ИЛИ (НЕ ВсеРазделы И СписокРазделов.НайтиПоЗначению(Справочники.Разделы.Раздел7) <> Неопределено) Тогда	
			// выводим таблицу  	   			
			ВывестиТаблицуПоказателей("Раздел7", Выборка.ДокументОтчетности, ТабличныйДокумент, Макет); 			
		КонецЕсли;

		// Раздел 8		
		Если ВсеРазделы ИЛИ (НЕ ВсеРазделы И СписокРазделов.НайтиПоЗначению(Справочники.Разделы.Раздел8) <> Неопределено) Тогда	
			// выводим таблицу  	   			
			ВывестиТаблицуПоказателей("Раздел8", Выборка.ДокументОтчетности, ТабличныйДокумент, Макет); 			
		КонецЕсли;
		
		// Раздел 9		
		Если ВсеРазделы ИЛИ (НЕ ВсеРазделы И СписокРазделов.НайтиПоЗначению(Справочники.Разделы.Раздел9) <> Неопределено) Тогда	
			// выводим таблицу  	   			
			ВывестиТаблицуПоказателей("Раздел9", Выборка.ДокументОтчетности, ТабличныйДокумент, Макет); 			
		КонецЕсли;
		
		// Раздел 10		
		Если ВсеРазделы ИЛИ (НЕ ВсеРазделы И СписокРазделов.НайтиПоЗначению(Справочники.Разделы.Раздел10) <> Неопределено) Тогда	
			// выводим таблицу  	   			
			ВывестиТаблицуПоказателей("Раздел10", Выборка.ДокументОтчетности, ТабличныйДокумент, Макет); 			
		КонецЕсли;
		
		// Раздел 11		
		Если ВсеРазделы ИЛИ (НЕ ВсеРазделы И СписокРазделов.НайтиПоЗначению(Справочники.Разделы.Раздел11) <> Неопределено) Тогда	
			// выводим таблицу  	   			
			ВывестиТаблицуПоказателей("Раздел11", Выборка.ДокументОтчетности, ТабличныйДокумент, Макет); 			
		КонецЕсли;
		
		// Дальше разделы 12 и 13 для 2.16.3.3
		
		// Раздел 12
		
		Если ВсеРазделы ИЛИ (НЕ ВсеРазделы И СписокРазделов.НайтиПоЗначению(Справочники.Разделы.Раздел12) <> Неопределено) Тогда	
			// выводим таблицу  	   			
			ВывестиТаблицуПоказателей("Раздел12", Выборка.ДокументОтчетности, ТабличныйДокумент, Макет); 			
		КонецЕсли;

		// Раздел 13		
		Если ВсеРазделы ИЛИ (НЕ ВсеРазделы И СписокРазделов.НайтиПоЗначению(Справочники.Разделы.Раздел13) <> Неопределено) Тогда	
			// выводим таблицу  	   			
			ВывестиТаблицуПоказателей("Раздел13", Выборка.ДокументОтчетности, ТабличныйДокумент, Макет); 			
		КонецЕсли;    

					
		// Сопроводительное писмьо	
		Если ВсеРазделы ИЛИ (НЕ ВсеРазделы И флВыводитьСопроводительноеПисьмо) Тогда
			ОбластьНаименованиеРаздела.Параметры.НазваниеРаздела = "Сопроводительное письмо";
			ТабличныйДокумент.Вывести(ОбластьНаименованиеРаздела, 3);
			
			ОбластьСопроводительноеПисьмо.Параметры.Заполнить(Выборка);
			ТабличныйДокумент.Вывести(ОбластьСопроводительноеПисьмо, 4);
		КонецЕсли;
		
	КонецЦикла;
	
	ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();  
	
	МассивТабДокументов = Новый Массив;
	МассивТабДокументов.Добавить(ТабличныйДокумент);
	
	Возврат МассивТабДокументов;

КонецФункции
