
Функция ИнициализироватьТаблицуДляРассылки()
	ТаблицаДляРассылки = Новый ТаблицаЗначений;
	ТаблицаДляРассылки.Колонки.Добавить("КПК");
	ТаблицаДляРассылки.Колонки.Добавить("НомерВРеестреСРО", Новый ОписаниеТипов("Число"));
	ТаблицаДляРассылки.Колонки.Добавить("Флаг", Новый ОписаниеТипов("Булево"));
	ТаблицаДляРассылки.Колонки.Добавить("ИНН");
	ТаблицаДляРассылки.Колонки.Добавить("ОГРН");
	
	Возврат ТаблицаДляРассылки;	
	
КонецФункции

Функция ПолучитьМассивПериодов(НачалоПериода, ОкончаниеПериода)
	
	МассивПериодов = Новый Массив;            	
	ВремПериод = КонецКвартала(НачалоПериода);    
	
	Пока ВремПериод <= ОкончаниеПериода Цикл
		МассивПериодов.Добавить(ВремПериод);  		
		ВремПериод = КонецКвартала(ДобавитьМесяц(ВремПериод, 3));
	КонецЦикла;
	
	Возврат МассивПериодов;
	
КонецФункции


Функция ПолучитьПредставлениеФН(ЗначениеПоказателя)
	
	Если ЗначениеПоказателя = -1 Тогда
		Возврат "нет данных";
	Иначе
		Возврат ?(ЗначениеПоказателя = 0, "нет", "да");	
	КонецЕсли;
	
КонецФункции


Функция ЕстьОшибкаВФН(НаименованиеФН, СтруктураЗначение, КодДокумента, СрокДеятельностиКПК, ПредставлениеДокумента = "")
	
	ПоказательФН = 0;
	
	Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда
	
		Раздел8_2_1 = ?(СтруктураЗначение.Свойство("Раздел8_2_1"), СтруктураЗначение.Раздел8_2_1, 0);  
		Раздел8_3_1 = ?(СтруктураЗначение.Свойство("Раздел8_3_1"), СтруктураЗначение.Раздел8_3_1, 0);  
		Раздел8_8_1 = ?(СтруктураЗначение.Свойство("Раздел8_8_1"), СтруктураЗначение.Раздел8_8_1, 0);        
		Раздел8_8_2 = ?(СтруктураЗначение.Свойство("Раздел8_8_2"), СтруктураЗначение.Раздел8_8_2, 0);    
		
		Если НЕ СтруктураЗначение.Свойство("Раздел8_2_1")
			ИЛИ НЕ СтруктураЗначение.Свойство("Раздел8_3_1")
			ИЛИ НЕ СтруктураЗначение.Свойство("Раздел8_8_1") 
			ИЛИ НЕ СтруктураЗначение.Свойство("Раздел8_8_2") тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ПредставлениеДокумента;		
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
	Это216 = КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
	ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642 ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644;
	РазрядностьОкругления = ?(Это216, 2, 1);
	
	Попытка
		Если НаименованиеФН = "ФН1" Тогда
			
			НС_04_99_49 = СРО_ЗагрузкаОтчетности.ПолучитьУстановленноеЗначениеНорматива("ФН1", СтруктураЗначение, СрокДеятельностиКПК, КодДокумента);   
			
			Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда    						
				Значение = СтруктураЗначение.Раздел2_3_1_1 + СтруктураЗначение.Раздел2_3_1_2 + СтруктураЗначение.Раздел2_3_2_1 + СтруктураЗначение.Раздел2_3_2_2;
				Факт04_99_49 = ?(Значение = 0, 0, окр(СтруктураЗначение.Раздел2_2_2 / Значение*100, РазрядностьОкругления));  
				
			Иначе  			
				Значение = СтруктураЗначение.Раздел2_3_1_1 + СтруктураЗначение.Раздел2_3_1_3 + СтруктураЗначение.Раздел2_3_1_5 + СтруктураЗначение.Раздел2_3_2_1 + СтруктураЗначение.Раздел2_3_2_3 + СтруктураЗначение.Раздел2_3_2_5;
				Факт04_99_49 = ?(Значение = 0, 0, окр(СтруктураЗначение.Раздел2_2_2 / Значение*100, 1));  
			КонецЕсли;
			
			Если Факт04_99_49 < НС_04_99_49 И Значение <> 0 Тогда 								
				ПоказательФН = 1;                                   
			КонецЕсли;		
			
		ИначеЕсли НаименованиеФН = "ФН2" Тогда
			НС_04_99_50 = СРО_ЗагрузкаОтчетности.ПолучитьУстановленноеЗначениеНорматива("ФН2", СтруктураЗначение, СрокДеятельностиКПК, КодДокумента);   

			
			Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда    						
				Значение = СтруктураЗначение.Раздел2_3_1_1 + СтруктураЗначение.Раздел2_3_1_2 + СтруктураЗначение.Раздел2_3_2_1 + СтруктураЗначение.Раздел2_3_2_2;
				Факт04_99_50 = ?(Значение = 0, 0, окр(СтруктураЗначение.Раздел9_2_1 / Значение*100, 1));
				
			ИначеЕсли КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда  
				Значение = СтруктураЗначение.Раздел2_3_1_1 + СтруктураЗначение.Раздел2_3_1_2 + СтруктураЗначение.Раздел2_3_2_1 + СтруктураЗначение.Раздел2_3_2_2;
				Факт04_99_50 = ?(Значение = 0, 0, окр(Раздел8_2_1 / Значение*100, РазрядностьОкругления));
				
			Иначе					
				Значение = СтруктураЗначение.Раздел2_3_1_1 + СтруктураЗначение.Раздел2_3_1_3 + СтруктураЗначение.Раздел2_3_1_5 + СтруктураЗначение.Раздел2_3_2_1 + СтруктураЗначение.Раздел2_3_2_3 + СтруктураЗначение.Раздел2_3_2_5;
				Факт04_99_50 = ?(Значение = 0, 0, окр(СтруктураЗначение.Раздел4_20 / Значение*100, 1));
		
			КонецЕсли;
				
			Если Факт04_99_50 > НС_04_99_50 И Значение <> 0 Тогда   	
				ПоказательФН = 1;
			КонецЕсли;
			
			
		ИначеЕсли НаименованиеФН = "ФН3" Тогда
			
			НС_04_99_51 = СРО_ЗагрузкаОтчетности.ПолучитьУстановленноеЗначениеНорматива("ФН3", СтруктураЗначение, СрокДеятельностиКПК, КодДокумента);   
			
			Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда    						
				Значение = СтруктураЗначение.Раздел2_1_1 + СтруктураЗначение.Раздел2_1_2 + СтруктураЗначение.Раздел4_16_1;
				Факт04_99_51 = ?(Значение = 0, 0, окр(СтруктураЗначение.Раздел9_3_1 / Значение*100, 1));     
				
			ИначеЕсли КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда  
				Значение = СтруктураЗначение.Раздел2_1_1 + СтруктураЗначение.Раздел2_1_2;
				Факт04_99_51 = ?(Значение = 0, 0, окр(Раздел8_3_1 / Значение*100, РазрядностьОкругления));     		
				
			Иначе	       					
						
				Значение = СтруктураЗначение.Раздел2_1_1 + СтруктураЗначение.Раздел2_1_2 + СтруктураЗначение.Раздел4_35_1;
				Факт04_99_51 = ?(Значение = 0, 0, окр(СтруктураЗначение.Раздел4_26 / Значение*100, 1));
				
			КонецЕсли;
			
			Если Факт04_99_51 > НС_04_99_51 И Значение <> 0 Тогда 
				ПоказательФН = 1;
			КонецЕсли;

		ИначеЕсли НаименованиеФН = "ФН4" Тогда
			
			НС_04_99_52 = СРО_ЗагрузкаОтчетности.ПолучитьУстановленноеЗначениеНорматива("ФН4", СтруктураЗначение, СрокДеятельностиКПК, КодДокумента);   
			
			Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда    						
				Значение = СтруктураЗначение.Раздел2_3_1_1 + СтруктураЗначение.Раздел2_3_1_2 + СтруктураЗначение.Раздел2_3_2_1 + СтруктураЗначение.Раздел2_3_2_2;
			Иначе   					
				Значение = СтруктураЗначение.Раздел2_3_1_1 + СтруктураЗначение.Раздел2_3_1_3 + СтруктураЗначение.Раздел2_3_1_5 + СтруктураЗначение.Раздел2_3_2_1 + СтруктураЗначение.Раздел2_3_2_3 + СтруктураЗначение.Раздел2_3_2_5;			
			КонецЕсли;
			
			Факт04_99_52 = ?(Значение = 0, 0, окр(СтруктураЗначение.Раздел2_2_1 / Значение*100, РазрядностьОкругления)); 	
			
			Если Факт04_99_52 < НС_04_99_52 И Значение <> 0 Тогда							
				ПоказательФН = 1;
			КонецЕсли;

		ИначеЕсли НаименованиеФН = "ФН5" Тогда
			
			НС_04_99_53 = СРО_ЗагрузкаОтчетности.ПолучитьУстановленноеЗначениеНорматива("ФН5", СтруктураЗначение, СрокДеятельностиКПК, КодДокумента);   

			Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда    						
				Значение = СтруктураЗначение.Раздел2_3_1_1 + СтруктураЗначение.Раздел2_3_1_2 + СтруктураЗначение.Раздел2_3_2_1 + СтруктураЗначение.Раздел2_3_2_2;
				Факт04_99_53 = ?(Значение = 0, 0, окр((СтруктураЗначение.Раздел2_3_1_3 + СтруктураЗначение.Раздел2_3_2_3)/ Значение*100, РазрядностьОкругления)); 
			Иначе      			
				Значение = СтруктураЗначение.Раздел2_3_1_1 + СтруктураЗначение.Раздел2_3_1_3 + СтруктураЗначение.Раздел2_3_1_5 + СтруктураЗначение.Раздел2_3_2_1 + СтруктураЗначение.Раздел2_3_2_3 + СтруктураЗначение.Раздел2_3_2_5;
				Факт04_99_53 = ?(Значение = 0, 0, окр((СтруктураЗначение.Раздел2_3_1_7 + СтруктураЗначение.Раздел2_3_2_7)/ Значение*100, 1));
			КонецЕсли;       	
				
			Если Факт04_99_53 > НС_04_99_53 И Значение <> 0 Тогда 
		    	ПоказательФН = 1;
			КонецЕсли;
			
		ИначеЕсли НаименованиеФН = "ФН6" Тогда
			
			НС_04_99_54 = СРО_ЗагрузкаОтчетности.ПолучитьУстановленноеЗначениеНорматива("ФН6", СтруктураЗначение, СрокДеятельностиКПК, КодДокумента);  
			
			Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда    						
				Значение = СтруктураЗначение.Раздел2_2_1 + СтруктураЗначение.Раздел2_3_1 + СтруктураЗначение.Раздел2_3_2;
				Факт04_99_54 = ?(Значение = 0, 0, окр((СтруктураЗначение.Раздел2_1_1_3 + СтруктураЗначение.Раздел2_1_2_3)/ Значение*100, РазрядностьОкругления));    
			Иначе 			
				Значение = СтруктураЗначение.Раздел2_3_1_1 + СтруктураЗначение.Раздел2_3_1_3 + СтруктураЗначение.Раздел2_3_1_5 + СтруктураЗначение.Раздел2_3_1_7 + СтруктураЗначение.Раздел2_3_2_1 + СтруктураЗначение.Раздел2_3_2_3 + СтруктураЗначение.Раздел2_3_2_5 + СтруктураЗначение.Раздел2_3_2_7;
				Факт04_99_54 = ?(Значение = 0, 0, окр((СтруктураЗначение.Раздел2_1_1_4 + СтруктураЗначение.Раздел2_1_2_4)/ Значение*100, 1));
			
			КонецЕсли;      
			
			Если Факт04_99_54 > НС_04_99_54 И Значение <> 0 Тогда 
				ПоказательФН = 1;
			КонецЕсли;  

		ИначеЕсли НаименованиеФН = "ФН7" Тогда
			
			НС_04_99_55 = СРО_ЗагрузкаОтчетности.ПолучитьУстановленноеЗначениеНорматива("ФН7", СтруктураЗначение, СрокДеятельностиКПК, КодДокумента);  
			
			Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда    									
				Значение = СтруктураЗначение.Раздел2_3_1 + СтруктураЗначение.Раздел2_3_2;
				ЗначениеЧислителя = СтруктураЗначение.Раздел2_1_9_1_1 + СтруктураЗначение.Раздел2_1_9_2 + СтруктураЗначение.Раздел2_1_9_3 + СтруктураЗначение.Раздел2_1_9_4;
				ЗначениеЧислителя = ЗначениеЧислителя + СтруктураЗначение.Раздел2_1_3_2 + СтруктураЗначение.Раздел2_1_4_2 + СтруктураЗначение.Раздел2_1_1 + СтруктураЗначение.Раздел2_1_2;
						
				Факт04_99_55 = ?(Значение = 0, 0, окр(ЗначениеЧислителя / Значение*100, 1));	
				
			ИначеЕсли КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда    									
				Значение = СтруктураЗначение.Раздел2_3_1 + СтруктураЗначение.Раздел2_3_2;
				ЗначениеЧислителя = СтруктураЗначение.Раздел2_1_9_1_1 + СтруктураЗначение.Раздел2_1_9_2 + (СтруктураЗначение.Раздел2_1_9 - СтруктураЗначение.Раздел2_1_9_1 - СтруктураЗначение.Раздел2_1_9_2);
				ЗначениеЧислителя = ЗначениеЧислителя + СтруктураЗначение.Раздел2_1_3_1 + СтруктураЗначение.Раздел2_1_4_1 + СтруктураЗначение.Раздел2_1_3_2 + СтруктураЗначение.Раздел2_1_4_2 + СтруктураЗначение.Раздел2_1_1 + СтруктураЗначение.Раздел2_1_2;
						
				Факт04_99_55 = ?(Значение = 0, 0, окр(ЗначениеЧислителя / Значение*100, РазрядностьОкругления));			
									
			Иначе 	
						
				Значение = СтруктураЗначение.Раздел2_3_1_1 + СтруктураЗначение.Раздел2_3_1_3 + СтруктураЗначение.Раздел2_3_1_5 + СтруктураЗначение.Раздел2_3_1_7 + СтруктураЗначение.Раздел2_3_2_1 + СтруктураЗначение.Раздел2_3_2_3 + СтруктураЗначение.Раздел2_3_2_5 + СтруктураЗначение.Раздел2_3_2_7;
				Факт04_99_55 = ?(Значение = 0, 0, окр((СтруктураЗначение.Раздел2_1_12_1_1 + СтруктураЗначение.Раздел2_1_12-СтруктураЗначение.Раздел2_1_12_1 + СтруктураЗначение.Раздел2_1_3_2 + СтруктураЗначение.Раздел2_1_4_2 + СтруктураЗначение.Раздел2_1_1 + СтруктураЗначение.Раздел2_1_2)/ Значение*100, 1));								
			
			КонецЕсли;   
						
			Если Факт04_99_55 < НС_04_99_55 И Значение <> 0 Тогда 
				ПоказательФН = 1;
			КонецЕсли;

		ИначеЕсли НаименованиеФН = "ФН8" Тогда
			
			НС_04_99_56 = СРО_ЗагрузкаОтчетности.ПолучитьУстановленноеЗначениеНорматива("ФН8", СтруктураЗначение, СрокДеятельностиКПК, КодДокумента);   		
			
			Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_2164
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21641
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21642
				ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21644 Тогда 
				Значение = Раздел8_8_2;	
				Факт04_99_56 = ?(Значение = 0, 0, окр(Раздел8_8_1 / Значение * 100, РазрядностьОкругления));	
				
			Иначе		
				
				Если КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21633 
					ИЛИ КодДокумента = Перечисления.КодДокумента.ОКУД_0420820_21634 Тогда    						
					Значение = СтруктураЗначение.Раздел2_3_1 + СтруктураЗначение.Раздел2_3_3_1 + СтруктураЗначение.Раздел2_3_4_1;	
				Иначе                                                                                                                                                           							
					Значение = СтруктураЗначение.Раздел2_3_1 + СтруктураЗначение.Раздел2_3_3_1;                              			
				КонецЕсли;  
				
				Факт04_99_56 = ?(Значение = 0, 0, окр((СтруктураЗначение.Раздел2_1_1 + СтруктураЗначение.Раздел2_1_3 + СтруктураЗначение.Раздел2_1_8_1) / Значение*100, 1));
			КонецЕсли;
			
			Если Факт04_99_56 < НС_04_99_56 И Значение <> 0 Тогда 
				ПоказательФН = 1;
			КонецЕсли; 			             		
		

		КонецЕсли;
			
	Исключение
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ПредставлениеДокумента + " " + ОписаниеОшибки();
		Сообщение.Сообщить();
	КонецПопытки;
	Возврат ПолучитьПредставлениеФН(ПоказательФН);
	
	
КонецФункции


Функция СформироватьТабличныеДокументы(СтруктураПараметров) Экспорт
	
	ДатаНачала = СтруктураПараметров.ДатаНачалаОтчета;
	ДатаОкончания = КонецДня(СтруктураПараметров.ДатаОкончанияОтчета);
	
	МассивКПК = ?(СтруктураПараметров.Свойство("МассивКПК"), СтруктураПараметров.МассивКПК, Новый Массив);	 
	МассивСубъектов = ?(СтруктураПараметров.Свойство("МассивСубъектов"), СтруктураПараметров.МассивСубъектов, Новый Массив);	
	МассивУправленийГУ = ?(СтруктураПараметров.Свойство("МассивУправленийГУ"), СтруктураПараметров.МассивУправленийГУ, Новый Массив);	
	
	ВидОтбораОтчета = ?(СтруктураПараметров.Свойство("ВидОтбораОтчета"), СтруктураПараметров.ВидОтбораОтчета, 1);
	
	Если СтруктураПараметров.Свойство("ТабличныйДокумент") Тогда	
		ТабличныйДокумент = СтруктураПараметров.ТабличныйДокумент;  
	Иначе
		ТабличныйДокумент = Новый ТабличныйДокумент;
	КонецЕсли;           	
	
//	ВремТаблицаДляРассылки = РеквизитФормыВЗначение("ТаблицаДляРассылки");
	//
	//Если СтруктураПараметров.Свойство("ТаблицаДляРассылки") Тогда	
	//	ВремТаблицаДляРассылки = СтруктураПараметров.ТаблицаДляРассылки;  
	//Иначе
	//	ВремТаблицаДляРассылки = ИнициализироватьТаблицуДляРассылки();
	//КонецЕсли;
	
	 Макет = Отчеты.СРО_СводныйНФ.ПолучитьМакет("Макет"); 	
	//Макет = ОтчетОбъект.ПолучитьМакет("Макет");    			
	
	ОбластьШапкаОсновная = Макет.получитьОбласть("Шапка|Основная"); 	
	ОбластьШапкаФН = Макет.получитьОбласть("Шапка|ФН");    	
	ОбластьШапкаКомментарий = Макет.получитьОбласть("Шапка|Комментарий");   
	ОбластьШапкаОшибкаФНСУчетомПредПериодов = Макет.получитьОбласть("Шапка|ОшибкаФНСУчетомПредПериодов"); 
	
	ОбластьШапкаОсновная.Параметры.ПредставлениеПериода = Формат(ДатаНачала, "ДФ=""дд.ММ.гггг""") + " - " + Формат(ДатаОкончания, "ДФ=""дд.ММ.гггг""");  
	ТабличныйДокумент.Вывести(ОбластьШапкаОсновная);
	
	ОбластьСтрокаКПКОсновная = Макет.получитьОбласть("СтрокаКПК|Основная"); 	
	ОбластьСтрокаКПФН = Макет.получитьОбласть("СтрокаКПК|ФН"); 
	ОбластьСтрокаКПКомментарий = Макет.получитьОбласть("СтрокаКПК|Комментарий"); 
	
	ОбластьСтрокаОшибкаФНСУчетомПредПериодов = Макет.получитьОбласть("СтрокаКПК|ОшибкаФНСУчетомПредПериодов"); 
	
	
	МассивПериодов = ПолучитьМассивПериодов(ДатаНачала, КонецКвартала(ДатаОкончания));	
	СчетчикФН = 8;                                                                                              	
	
	НачальнаяКОлонка = 11;
	
	Для сч = 1 по 8 Цикл
		Для Каждого ТекПериод Из МассивПериодов Цикл
			СчетчикФН = СчетчикФН + 1;
			ОбластьШапкаФН.Параметры.Месяц_Год = Формат(ТекПериод, "ДФ=""ММ_гг""");   			
			ОбластьШапкаФН.Параметры.СчетчикФН = СчетчикФН;  
			ОбластьШапкаФН.Параметры.счФН = сч;
			ТабличныйДокумент.Присоединить(ОбластьШапкаФН);      
		
		КонецЦикла;  	
			
		// Выводим Комментарий
		СчетчикФН = СчетчикФН + 1;
		ОбластьШапкаКомментарий.Параметры.СчетчикФН = СчетчикФН;   		                  
		ТабличныйДокумент.Присоединить(ОбластьШапкаКомментарий);   		
		
		КонечнаяКолонка = НачальнаяКОлонка + МассивПериодов.Количество();     
		ТабличныйДокумент.Область(3, НачальнаяКОлонка , 3, КонечнаяКолонка).Объединить();
		ТабличныйДокумент.Область(4, НачальнаяКОлонка , 4, КонечнаяКолонка-1).Объединить();
		НачальнаяКОлонка =  КонечнаяКолонка + 1; 		 	
	КонецЦикла;    
	                                                     
	ТабличныйДокумент.Присоединить(ОбластьШапкаОшибкаФНСУчетомПредПериодов);
	
	// 
	МассивКодов = Новый Массив; 
	МассивКодов.Добавить("2_1");    
	МассивКодов.Добавить("2_1_1");
	МассивКодов.Добавить("2_1_1_3");
	МассивКодов.Добавить("2_1_1_4");
	МассивКодов.Добавить("2_1_2");
	МассивКодов.Добавить("2_1_2_3");
	МассивКодов.Добавить("2_1_2_4");
	МассивКодов.Добавить("2_1_3"); 	
	МассивКодов.Добавить("2_1_3_1");
	МассивКодов.Добавить("2_1_3_2");
	МассивКодов.Добавить("2_1_4_1");
	МассивКодов.Добавить("2_1_4_2");
	МассивКодов.Добавить("2_1_8_1");
	МассивКодов.Добавить("2_1_9");
	МассивКодов.Добавить("2_1_9_1");
	МассивКодов.Добавить("2_1_9_1_1");
	МассивКодов.Добавить("2_1_9_2");
	МассивКодов.Добавить("2_1_9_3"); 
	МассивКодов.Добавить("2_1_9_4");
	
	МассивКодов.Добавить("2_1_12");
	МассивКодов.Добавить("2_1_12_1");
	МассивКодов.Добавить("2_1_12_1_1");   
	МассивКодов.Добавить("2_2_1");
	МассивКодов.Добавить("2_2_2");
	МассивКодов.Добавить("2_3_1");
	МассивКодов.Добавить("2_3_1_1");
	МассивКодов.Добавить("2_3_1_2");
	МассивКодов.Добавить("2_3_1_3");
	МассивКодов.Добавить("2_3_1_5");
	МассивКодов.Добавить("2_3_1_7");
	МассивКодов.Добавить("2_3_2");
	МассивКодов.Добавить("2_3_2_1");
	МассивКодов.Добавить("2_3_2_2");
	МассивКодов.Добавить("2_3_2_3");
	МассивКодов.Добавить("2_3_2_5");
	МассивКодов.Добавить("2_3_2_7");
	МассивКодов.Добавить("2_3_3_1");   
	МассивКодов.Добавить("2_3_4_1");
	МассивКодов.Добавить("4_1");
	МассивКодов.Добавить("4_11");     
	МассивКодов.Добавить("4_16_1");
	МассивКодов.Добавить("4_20");
	МассивКодов.Добавить("4_24");
	МассивКодов.Добавить("4_26");

	МассивКодов.Добавить("4_26");
	МассивКодов.Добавить("4_35_1");	
	
	МассивКодов.Добавить("8_2_1");	  
	МассивКодов.Добавить("8_3_1");	
	
	МассивКодов.Добавить("8_8_1");	  
	МассивКодов.Добавить("8_8_2");	
	
	МассивКодов.Добавить("9_2_1");	  
	МассивКодов.Добавить("9_3_1");	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВремПериоды.ДатаОкончанияОтчетногоПериода КАК ДатаОкончанияОтчетногоПериода
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	&ВремПериоды КАК ВремПериоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК КПК
	|ПОМЕСТИТЬ ВТ_КПК
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	1 = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КПК.КПК КАК КПК,
	|	ВТ_Периоды.ДатаОкончанияОтчетногоПериода КАК ДатаОкончанияОтчетногоПериода
	|ПОМЕСТИТЬ ВТ_КПК_Периоды
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды,
	|	ВТ_КПК КАК ВТ_КПК
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КПК,
	|	ДатаОкончанияОтчетногоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетностьКПК.КПК КАК КПК,
	|	ОтчетностьКПК.Дата КАК ДатаОтчетности,
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ОтчетностьКПК.ДатаОкончанияОтчетногоПериода, КВАРТАЛ), ДЕНЬ) КАК ДатаОкончанияОтчетногоПериода
	|ПОМЕСТИТЬ ВТ_ОтчетностьКПК
	|ИЗ
	|	Документ.ОтчетностьКПК КАК ОтчетностьКПК
	|ГДЕ
	|	ОтчетностьКПК.КПК В
	|			(ВЫБРАТЬ
	|				ВТ_КПК.КПК
	|			ИЗ
	|				ВТ_КПК КАК ВТ_КПК)   
	|	И ОтчетностьКПК.ДатаОкончанияОтчетногоПериода В
	|			(ВЫБРАТЬ
	|				ВТ_Периоды.ДатаОкончанияОтчетногоПериода
	|			ИЗ
	|				ВТ_Периоды КАК ВТ_Периоды)
    
	//|	(ОтчетностьКПК.КПК, ОтчетностьКПК.ДатаОкончанияОтчетногоПериода) В
	//|			(ВЫБРАТЬ
	//|				ВТ_КПК_Периоды.КПК,
	//|				ВТ_КПК_Периоды.ДатаОкончанияОтчетногоПериода
	//|			ИЗ
	//|				ВТ_КПК_Периоды КАК ВТ_КПК_Периоды)
	|	И ОтчетностьКПК.Проведен = ИСТИНА
	|	И ОтчетностьКПК.ИспользоватьДокумент = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КПК,
	|	ДатаОкончанияОтчетногоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КПК_Периоды.КПК КАК КПК,
	|	ВТ_КПК_Периоды.ДатаОкончанияОтчетногоПериода КАК ДатаОкончанияОтчетногоПериода,
	|	МАКСИМУМ(ВТ_ОтчетностьКПК.ДатаОтчетности) КАК Дата
	|ПОМЕСТИТЬ ВТ_Отчетность
	|ИЗ
	|	ВТ_КПК_Периоды КАК ВТ_КПК_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтчетностьКПК КАК ВТ_ОтчетностьКПК
	|		ПО ВТ_КПК_Периоды.КПК = ВТ_ОтчетностьКПК.КПК
	|			И ВТ_КПК_Периоды.ДатаОкончанияОтчетногоПериода = ВТ_ОтчетностьКПК.ДатаОкончанияОтчетногоПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_КПК_Периоды.КПК,
	|	ВТ_КПК_Периоды.ДатаОкончанияОтчетногоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КПК,
	|	ДатаОкончанияОтчетногоПериода,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Отчетность.КПК КАК КПК,
	|	ВТ_Отчетность.ДатаОкончанияОтчетногоПериода КАК ДатаОкончанияОтчетногоПериода,
	|	ВТ_Отчетность.Дата КАК Дата,
	|	ОтчетностьКПК.Ссылка КАК Ссылка,
	|	ВТ_Отчетность.КПК.НомерВРеестреСРО КАК НомерВРеестреСРО
	|ПОМЕСТИТЬ ВремКПК_Документы
	|ИЗ
	|	ВТ_Отчетность КАК ВТ_Отчетность
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетностьКПК КАК ОтчетностьКПК
	|		ПО ВТ_Отчетность.КПК = ОтчетностьКПК.КПК
	|			И ВТ_Отчетность.ДатаОкончанияОтчетногоПериода = ОтчетностьКПК.ДатаОкончанияОтчетногоПериода
	|			И ВТ_Отчетность.Дата = ОтчетностьКПК.Дата
	|			И (ОтчетностьКПК.Проведен = ИСТИНА)
	|			И (ОтчетностьКПК.ИспользоватьДокумент = ИСТИНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремКПК_Документы.КПК КАК КПК,
	|	ВремКПК_Документы.ДатаОкончанияОтчетногоПериода КАК ДатаОкончанияОтчетногоПериода,
	|	ВремКПК_Документы.Дата КАК Дата,
	|	ВремКПК_Документы.Ссылка КАК Ссылка,
	|	ВремКПК_Документы.НомерВРеестреСРО КАК НомерВРеестреСРО,
	|	ВремКПК_Документы.КПК.УправлениеГУ КАК УправлениеГУ
	|ИЗ
	|	ВремКПК_Документы КАК ВремКПК_Документы
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерВРеестреСРО,
	|	ДатаОкончанияОтчетногоПериода
	|ИТОГИ ПО
	|	КПК
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремКПК_Документы.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ОтчетностьКПКТаблицаПоказателей.Раздел, ЗНАЧЕНИЕ(Справочник.Разделы.ПустаяСсылка)) КАК Раздел,
	|	ЕСТЬNULL(ОтчетностьКПКТаблицаПоказателей.Раздел.Код, """") КАК КодРаздела,
	|	ЕСТЬNULL(ОтчетностьКПКТаблицаПоказателей.Показатель1, 0) КАК Показатель
	|ИЗ
	|	ВремКПК_Документы КАК ВремКПК_Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетностьКПК.ТаблицаПоказателей КАК ОтчетностьКПКТаблицаПоказателей
	|		ПО ВремКПК_Документы.Ссылка = ОтчетностьКПКТаблицаПоказателей.Ссылка
	|			И (ОтчетностьКПКТаблицаПоказателей.Раздел.Код В (&МассивКодов))";
	
	
	ВремПериоды = Новый ТаблицаЗначений;
	ВремПериоды.Колонки.Добавить("ДатаОкончанияОтчетногоПериода", Новый ОписаниеТипов("Дата"));     
	
	Для Каждого ТекПериод ИЗ МассивПериодов Цикл
		НоваяСтрока = ВремПериоды.Добавить();
		НоваяСтрока.ДатаОкончанияОтчетногоПериода = НачалоДня(ТекПериод);		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ВремПериоды", ВремПериоды);
	Запрос.УстановитьПараметр("МассивКПК", МассивКПК);
	Запрос.УстановитьПараметр("МассивКодов", МассивКодов);

	УсловиеЗапроса = "";  

	Если ВидОтбораОтчета = 0 Тогда      		
		УсловиеЗапроса = "Контрагенты.Ссылка В(&МассивКПК)";	
		Запрос.УстановитьПараметр("МассивКПК", МассивКПК);  
		
	ИначеЕсли ВидОтбораОтчета = 1 Тогда 	
		УсловиеЗапроса = "Контрагенты.Субъект В(&МассивСубъектов)";
		Запрос.УстановитьПараметр("МассивСубъектов", МассивСубъектов);
		
	ИначеЕсли ВидОтбораОтчета = 2 Тогда 	                                		
		УсловиеЗапроса = "Контрагенты.УправлениеГУ В(&МассивУправленийГУ)";
		Запрос.УстановитьПараметр("МассивУправленийГУ", МассивУправленийГУ);		
	КонецЕсли; 	
	
	Если УсловиеЗапроса <> "" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "1 = 1", УсловиеЗапроса);
	КонецЕсли;
	
	РезультатПакет = Запрос.ВыполнитьПакет();         	
	РезультатКПК = РезультатПакет[6];       	
	
	ТаблицаПоказатели = РезультатПакет[7].Выгрузить();
	ТаблицаПоказатели.Колонки.Добавить("СтрокаПоиска");  
	
	
	Для Каждого ТекСтрока ИЗ ТаблицаПоказатели Цикл 
		ТекДатаОкончанияОтчетногоПериода = НачалоДня(КонецКвартала(ТекСтрока.Ссылка.ДатаОкончанияОтчетногоПериода));
		//ТекСтрока.СтрокаПоиска = Строка(ТекСтрока.Ссылка) + "_" +  Строка(ТекСтрока.Ссылка.ДатаОкончанияОтчетногоПериода)+ "_" +  Строка(ТекСтрока.КодРаздела);		
		ТекСтрока.СтрокаПоиска = Строка(ТекСтрока.Ссылка) + "_" +  Строка(ТекДатаОкончанияОтчетногоПериода);		
	КонецЦикла;   
	
	ТаблицаПоказатели.Индексы.Добавить("СтрокаПоиска");	
	
	ВыборкаКПК = РезультатКПК.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКПК.Следующий() Цикл
		КПК = ВыборкаКПК.КПК;     		
		
		ОбластьСтрокаКПКОсновная.Параметры.НомерВРеестреСРО    = КПК.НомерВРеестреСРО;
		ОбластьСтрокаКПКОсновная.Параметры.НаименованиеКраткое = КПК.НаименованиеКраткое;   
		ОбластьСтрокаКПКОсновная.Параметры.ИНН                 = КПК.ИНН;   
		ОбластьСтрокаКПКОсновная.Параметры.ОГРН                = КПК.ОГРН; 
		ОбластьСтрокаКПКОсновная.Параметры.Субъект			   = СокрЛП(КПК.Субъект); 
		ОбластьСтрокаКПКОсновная.Параметры.УправлениеГУ		   = СокрЛП(КПК.УправлениеГУ); 
		
		ОбластьСтрокаКПКОсновная.Параметры.ДатаВступленияВСРО  = Формат(КПК.ДатаВступленияВСРО, "ДЛФ=Д");
		
		ТабличныйДокумент.Вывести(ОбластьСтрокаКПКОсновная); 			
		
	//	СтруктураФН = Новый Структура;
		МассивФН1 = Новый Массив;
		МассивФН2 = Новый Массив;
		МассивФН3 = Новый Массив;
		МассивФН4 = Новый Массив;
		МассивФН5 = Новый Массив;
		МассивФН6 = Новый Массив;
		МассивФН7 = Новый Массив;
		МассивФН8 = Новый Массив;
		
		Выборка = ВыборкаКПК.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			// Выводим блок по ФН	
			
			Если НЕ ЗначениеЗаполнено(Выборка.Ссылка) Тогда
				СтрокаПоиска = "Нет документа отчетности";				
			Иначе
				ТекДатаОкончанияОтчетногоПериода = НачалоДня(КонецКвартала(Выборка.Ссылка.ДатаОкончанияОтчетногоПериода));
				СтрокаПоиска = Строка(Выборка.Ссылка) + "_" + Строка(ТекДатаОкончанияОтчетногоПериода);				
			КонецЕсли;
			
			НайденныеСтроки = ТаблицаПоказатели.НайтиСтроки(Новый Структура("СтрокаПоиска", СтрокаПоиска));
			
			Если НайденныеСтроки.Количество() = 0 Тогда  				
				МассивФН1.Добавить(ПолучитьПредставлениеФН(-1));
				МассивФН2.Добавить(ПолучитьПредставлениеФН(-1));
				МассивФН3.Добавить(ПолучитьПредставлениеФН(-1));
				МассивФН4.Добавить(ПолучитьПредставлениеФН(-1));
				МассивФН5.Добавить(ПолучитьПредставлениеФН(-1));
				МассивФН6.Добавить(ПолучитьПредставлениеФН(-1));
				МассивФН7.Добавить(ПолучитьПредставлениеФН(-1));
				МассивФН8.Добавить(ПолучитьПредставлениеФН(-1));
				
				Продолжить;			
			КонецЕсли;
			
			СтруктураЗначение = Новый Структура;
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл				
				СтруктураЗначение.Вставить("Раздел" + СокрЛП(НайденнаяСтрока.Раздел.Код), НайденнаяСтрока.Показатель);	 				
			КонецЦикла;
			
			ДокументОтчетности = НайденнаяСтрока.Ссылка;
			ПредставлениеДокумента = Строка(ДокументОтчетности);
			
			ТекДатаОкончанияОтчетногоПериода = НачалоДня(КонецКвартала(ДокументОтчетности.ДатаОкончанияОтчетногоПериода));
			
			СрокДеятельностиКПК = (ТекДатаОкончанияОтчетногоПериода - НачалоДня(ДокументОтчетности.КПКДатаСоздания)) / 86400;   
			
			КодДокумента = ДокументОтчетности.КодДокумента;
			
			// ФН1  			
			ПредставлениеЗначениеФН = ЕстьОшибкаВФН("ФН1", СтруктураЗначение, КодДокумента, СрокДеятельностиКПК, ПредставлениеДокумента);    						
			МассивФН1.Добавить(ПредставлениеЗначениеФН);
			
			// ФН2    			
			ПредставлениеЗначениеФН = ЕстьОшибкаВФН("ФН2", СтруктураЗначение, КодДокумента, СрокДеятельностиКПК, ПредставлениеДокумента);    						
			МассивФН2.Добавить(ПредставлениеЗначениеФН);
			
			// ФН3
			ПредставлениеЗначениеФН = ЕстьОшибкаВФН("ФН3", СтруктураЗначение, КодДокумента, СрокДеятельностиКПК, ПредставлениеДокумента);    						
			МассивФН3.Добавить(ПредставлениеЗначениеФН);
			
			// ФН4       			
			ПредставлениеЗначениеФН = ЕстьОшибкаВФН("ФН4", СтруктураЗначение, КодДокумента, СрокДеятельностиКПК, ПредставлениеДокумента);    						
			МассивФН4.Добавить(ПредставлениеЗначениеФН);
			
			// ФН5       			
			ПредставлениеЗначениеФН = ЕстьОшибкаВФН("ФН5", СтруктураЗначение, КодДокумента, СрокДеятельностиКПК, ПредставлениеДокумента);    						
			МассивФН5.Добавить(ПредставлениеЗначениеФН);
			
			// ФН6
			ПредставлениеЗначениеФН = ЕстьОшибкаВФН("ФН6", СтруктураЗначение, КодДокумента, СрокДеятельностиКПК, ПредставлениеДокумента);    						
			МассивФН6.Добавить(ПредставлениеЗначениеФН);
			
			// ФН7
			ПредставлениеЗначениеФН = ЕстьОшибкаВФН("ФН7", СтруктураЗначение, КодДокумента, СрокДеятельностиКПК, ПредставлениеДокумента);    						
			МассивФН7.Добавить(ПредставлениеЗначениеФН);
			
			// ФН8
			ПредставлениеЗначениеФН = ЕстьОшибкаВФН("ФН8", СтруктураЗначение, КодДокумента, СрокДеятельностиКПК, ПредставлениеДокумента);    						
			МассивФН8.Добавить(ПредставлениеЗначениеФН);     
			
		КонецЦикла;		
		
		
		МассивОшибокПредыдущихПериодов = Новый Массив;    
		МассивФНТекущихПериодов = Новый Массив;
		
		// ФН1         
		ЕстьОшибкаФН1_ПредПериоды = Ложь;                     
		//Для Каждого ТекЭлемент Из МассивФН1 Цикл
		Для счЭлементов = 0 ПО МассивФН1.Количество() - 1 Цикл
			
			ТекЭлемент = МассивФН1[счЭлементов];
			
			Если счЭлементов < МассивФН1.Количество() - 1 Тогда   			
				Если  НЕ ЕстьОшибкаФН1_ПредПериоды Тогда
					Если ТекЭлемент = "да" Тогда
						ЕстьОшибкаФН1_ПредПериоды = Истина;
					КонецЕсли;				
				КонецЕсли;
			Иначе 
				МассивФНТекущихПериодов.Добавить(ТекЭлемент);				
			КонецЕсли;			
		
			ОбластьСтрокаКПФН.Параметры.ЗначениеФН = ТекЭлемент;   			
		
			Если ТекЭлемент = "нет данных" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.НейтральноЗеленый;
			ИначеЕсли ТекЭлемент = "да" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.ПесочноКоричневый;
			Иначе
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.Белый;
			КонецЕсли;     
			
			ТабличныйДокумент.Присоединить(ОбластьСтрокаКПФН)
		КонецЦикла;                  
		
		МассивОшибокПредыдущихПериодов.Добавить(ЕстьОшибкаФН1_ПредПериоды);    	
		ТабличныйДокумент.Присоединить(ОбластьСтрокаКПКомментарий);     	
		
		// ФН2                                                          
		ЕстьОшибкаФН2_ПредПериоды = Ложь;
		//Для Каждого ТекЭлемент Из МассивФН2 Цикл
		Для счЭлементов = 0 ПО МассивФН2.Количество() - 1 Цикл   
			ТекЭлемент = МассивФН2[счЭлементов];
			
			Если счЭлементов < МассивФН2.Количество() - 1 Тогда
				Если НЕ ЕстьОшибкаФН2_ПредПериоды Тогда
					Если ТекЭлемент = "да" Тогда
						ЕстьОшибкаФН2_ПредПериоды = Истина;
					КонецЕсли;	            
				КонецЕсли;
			Иначе 
				МассивФНТекущихПериодов.Добавить(ТекЭлемент);		
			КонецЕсли;

			ОбластьСтрокаКПФН.Параметры.ЗначениеФН = ТекЭлемент;   		
			
			Если ТекЭлемент = "нет данных" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.НейтральноЗеленый;
			ИначеЕсли ТекЭлемент = "да" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.ПесочноКоричневый;
			Иначе
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.Белый;
			КонецЕсли;

			ТабличныйДокумент.Присоединить(ОбластьСтрокаКПФН)
		КонецЦикла;
		
		МассивОшибокПредыдущихПериодов.Добавить(ЕстьОшибкаФН2_ПредПериоды); 
		ТабличныйДокумент.Присоединить(ОбластьСтрокаКПКомментарий);
		
		// ФН3   
		ЕстьОшибкаФН3_ПредПериоды = Ложь;
		//Для Каждого ТекЭлемент Из МассивФН3 Цикл
		Для счЭлементов = 0 ПО МассивФН3.Количество() - 1 Цикл	
			ТекЭлемент = МассивФН3[счЭлементов];
			
			Если счЭлементов < МассивФН3.Количество() - 1 Тогда
				Если НЕ ЕстьОшибкаФН3_ПредПериоды Тогда
					Если ТекЭлемент = "да" Тогда
						ЕстьОшибкаФН3_ПредПериоды = Истина;
					КонецЕсли;		        
				КонецЕсли;				
			Иначе 
				МассивФНТекущихПериодов.Добавить(ТекЭлемент);	
			КонецЕсли;

			ОбластьСтрокаКПФН.Параметры.ЗначениеФН = ТекЭлемент;  
			
			Если ТекЭлемент = "нет данных" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.НейтральноЗеленый;
			ИначеЕсли ТекЭлемент = "да" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.ПесочноКоричневый;
			Иначе
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.Белый;
			КонецЕсли;

			ТабличныйДокумент.Присоединить(ОбластьСтрокаКПФН)
		КонецЦикла;
		
		МассивОшибокПредыдущихПериодов.Добавить(ЕстьОшибкаФН3_ПредПериоды);
		ТабличныйДокумент.Присоединить(ОбластьСтрокаКПКомментарий);
		
		// ФН4  
		ЕстьОшибкаФН4_ПредПериоды = Ложь;
		//Для Каждого ТекЭлемент Из МассивФН4 Цикл
		Для счЭлементов = 0 ПО МассивФН4.Количество() - 1 Цикл      
			ТекЭлемент = МассивФН4[счЭлементов];
			
			Если счЭлементов < МассивФН4.Количество() - 1 Тогда
				Если НЕ ЕстьОшибкаФН4_ПредПериоды Тогда
					Если ТекЭлемент = "да" Тогда
						ЕстьОшибкаФН4_ПредПериоды = Истина;
					КонецЕсли;	            
				КонецЕсли;
			Иначе 
				МассивФНТекущихПериодов.Добавить(ТекЭлемент);		
			КонецЕсли;

			ОбластьСтрокаКПФН.Параметры.ЗначениеФН = ТекЭлемент;   
			
			Если ТекЭлемент = "нет данных" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.НейтральноЗеленый;
			ИначеЕсли ТекЭлемент = "да" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.ПесочноКоричневый;
			Иначе
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.Белый;
			КонецЕсли;

			ТабличныйДокумент.Присоединить(ОбластьСтрокаКПФН)
		КонецЦикла;
		
		МассивОшибокПредыдущихПериодов.Добавить(ЕстьОшибкаФН4_ПредПериоды);
		ТабличныйДокумент.Присоединить(ОбластьСтрокаКПКомментарий);
		
		// ФН5     
		ЕстьОшибкаФН5_ПредПериоды = Ложь;
		//Для Каждого ТекЭлемент Из МассивФН5 Цикл
		Для счЭлементов = 0 ПО МассивФН5.Количество() - 1 Цикл  
			ТекЭлемент = МассивФН5[счЭлементов];
			
			Если счЭлементов < МассивФН5.Количество() - 1 Тогда
				Если НЕ ЕстьОшибкаФН5_ПредПериоды Тогда
					Если ТекЭлемент = "да" Тогда
						ЕстьОшибкаФН5_ПредПериоды = Истина;
					КонецЕсли;	            
				КонецЕсли;
			Иначе 
				МассивФНТекущихПериодов.Добавить(ТекЭлемент);		
			КонецЕсли;

			ОбластьСтрокаКПФН.Параметры.ЗначениеФН = ТекЭлемент;   	
			
			Если ТекЭлемент = "нет данных" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.НейтральноЗеленый;
			ИначеЕсли ТекЭлемент = "да" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.ПесочноКоричневый;
			Иначе
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.Белый;
			КонецЕсли;

			ТабличныйДокумент.Присоединить(ОбластьСтрокаКПФН)
		КонецЦикла;
		
		МассивОшибокПредыдущихПериодов.Добавить(ЕстьОшибкаФН5_ПредПериоды);   
		ТабличныйДокумент.Присоединить(ОбластьСтрокаКПКомментарий);
		
		// ФН6  
		ЕстьОшибкаФН6_ПредПериоды = Ложь;
		//Для Каждого ТекЭлемент Из МассивФН6 Цикл
		Для счЭлементов = 0 ПО МассивФН6.Количество() - 1 Цикл  
			ТекЭлемент = МассивФН6[счЭлементов];
			
			Если счЭлементов < МассивФН6.Количество() - 1 Тогда
				Если НЕ ЕстьОшибкаФН6_ПредПериоды Тогда
					Если ТекЭлемент = "да" Тогда
						ЕстьОшибкаФН6_ПредПериоды = Истина;
					КонецЕсли;	            
				КонецЕсли;
			Иначе 
				МассивФНТекущихПериодов.Добавить(ТекЭлемент);		
			КонецЕсли;

			ОбластьСтрокаКПФН.Параметры.ЗначениеФН = ТекЭлемент;   
			
			Если ТекЭлемент = "нет данных" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.НейтральноЗеленый;
			ИначеЕсли ТекЭлемент = "да" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.ПесочноКоричневый;
			Иначе
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.Белый;
			КонецЕсли;

			ТабличныйДокумент.Присоединить(ОбластьСтрокаКПФН)
		КонецЦикла;
		
		МассивОшибокПредыдущихПериодов.Добавить(ЕстьОшибкаФН6_ПредПериоды);
		ТабличныйДокумент.Присоединить(ОбластьСтрокаКПКомментарий);
		
		// ФН7 
		ЕстьОшибкаФН7_ПредПериоды = Ложь;
		//Для Каждого ТекЭлемент Из МассивФН7 Цикл
		Для счЭлементов = 0 ПО МассивФН7.Количество() - 1 Цикл  
			ТекЭлемент = МассивФН7[счЭлементов];
			
			Если счЭлементов < МассивФН7.Количество() - 1 тогда
				Если НЕ ЕстьОшибкаФН7_ПредПериоды Тогда
					Если ТекЭлемент = "да" Тогда
						ЕстьОшибкаФН7_ПредПериоды = Истина;
					КонецЕсли;	            
				КонецЕсли;
			Иначе 
				МассивФНТекущихПериодов.Добавить(ТекЭлемент);			
			КонецЕсли;

			ОбластьСтрокаКПФН.Параметры.ЗначениеФН = ТекЭлемент; 
			
			Если ТекЭлемент = "нет данных" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.НейтральноЗеленый;
			ИначеЕсли ТекЭлемент = "да" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.ПесочноКоричневый;
			Иначе
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.Белый;
			КонецЕсли;

			ТабличныйДокумент.Присоединить(ОбластьСтрокаКПФН)
		КонецЦикла;
		
		МассивОшибокПредыдущихПериодов.Добавить(ЕстьОшибкаФН7_ПредПериоды);
		ТабличныйДокумент.Присоединить(ОбластьСтрокаКПКомментарий);
		
		// ФН8
		ЕстьОшибкаФН8_ПредПериоды = Ложь;
		//Для Каждого ТекЭлемент Из МассивФН8 Цикл
		Для счЭлементов = 0 ПО МассивФН8.Количество() - 1 Цикл  
			ТекЭлемент = МассивФН8[счЭлементов];
			
			Если счЭлементов < МассивФН8.Количество() - 1 Тогда
				Если НЕ ЕстьОшибкаФН8_ПредПериоды Тогда
					Если ТекЭлемент = "да" Тогда
						ЕстьОшибкаФН8_ПредПериоды = Истина;
					КонецЕсли;				
				КонецЕсли;
			Иначе 
				МассивФНТекущихПериодов.Добавить(ТекЭлемент);				
			КонецЕсли;

			ОбластьСтрокаКПФН.Параметры.ЗначениеФН = ТекЭлемент;   	
			
			Если ТекЭлемент = "нет данных" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.НейтральноЗеленый;
			ИначеЕсли ТекЭлемент = "да" Тогда
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.ПесочноКоричневый;
			Иначе
				ОбластьСтрокаКПФН.Область(1, 1, 1, 1).ЦветФона = WebЦвета.Белый;
			КонецЕсли;

			ТабличныйДокумент.Присоединить(ОбластьСтрокаКПФН)			
		КонецЦикла;
		
		МассивОшибокПредыдущихПериодов.Добавить(ЕстьОшибкаФН8_ПредПериоды); 		
		ТабличныйДокумент.Присоединить(ОбластьСтрокаКПКомментарий); 
		
		ОшибкаФН = ЕстьОшибкаПоПредПериодам(МассивОшибокПредыдущихПериодов, МассивФНТекущихПериодов);  
		
		ОбластьСтрокаОшибкаФНСУчетомПредПериодов.Параметры.ОшибкаФН = ОшибкаФН;	
		Если ОшибкаФН Тогда    
			ОбластьСтрокаОшибкаФНСУчетомПредПериодов.Область(1, 1, 1, 1).ЦветФона = WebЦвета.ПесочноКоричневый;   
		Иначе
			ОбластьСтрокаОшибкаФНСУчетомПредПериодов.Область(1, 1, 1, 1).ЦветФона = WebЦвета.НейтральноЗеленый;		
		КонецЕсли;

			
		ТабличныйДокумент.Присоединить(ОбластьСтрокаОшибкаФНСУчетомПредПериодов); 


	КонецЦикла;
	
	
	МассивТабДокументов = Новый Массив;
	МассивТабДокументов.Добавить(ТабличныйДокумент);
	
	Возврат МассивТабДокументов;

КонецФункции     

Функция ЕстьОшибкаПоПредПериодам(МассивОшибокПредыдущихПериодов, МассивФНТекущихПериодов)    
	
	Для счТек = 0 по МассивФНТекущихПериодов.Количество() - 1 Цикл  
		
		Если МассивФНТекущихПериодов[счТек] = "нет" Тогда
			Продолжить;
		КонецЕсли;
		
		Для счПред = 0 по МассивОшибокПредыдущихПериодов.Количество() - 1 Цикл  
			//Если счТек = счПред Тогда
			//	Продолжить;
			//КонецЕсли;
			
			Если МассивОшибокПредыдущихПериодов[счПред] = Истина Тогда 
				Возврат Истина;
			КонецЕсли;		
		КонецЦикла;   	
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции
