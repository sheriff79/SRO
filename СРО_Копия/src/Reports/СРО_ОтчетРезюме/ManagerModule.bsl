Процедура ЗаполнитьНаСервере_ФайлыКаталог(СтруктураПараметров)	
	
	ВремДерево = СтруктураПараметров.ВремДерево;  	
	ВремТаблицаОтчетности = СтруктураПараметров.ВремТаблицаОтчетности;    	
	                                                                                     
	ПутьККаталогуФайлуЗагрузки = СтруктураПараметров.ПутьККаталогуФайлуЗагрузки;
	ВидЗагрузки = СтруктураПараметров.ВидЗагрузки;   	
	флОтборПоПериоду = СтруктураПараметров.флОтборПоПериоду;   		
	
	ДатаНачала = СтруктураПараметров.ДатаНачалаОтчета;
	ДатаОкончания = СтруктураПараметров.ДатаОкончанияОтчета;
	
	СтруктураПараметровДляЗаполнения = Новый Структура;
	СтруктураПараметровДляЗаполнения.Вставить("ПутьККаталогуФайлуЗагрузки", ПутьККаталогуФайлуЗагрузки);
	СтруктураПараметровДляЗаполнения.Вставить("ЗаписьЭлектроннойПочты", "");
	СтруктураПараметровДляЗаполнения.Вставить("ВидЗагрузки", ВидЗагрузки);
	СтруктураПараметровДляЗаполнения.Вставить("ТаблицаОтчетности", ВремТаблицаОтчетности);      	
	
	СРО_ЗагрузкаОтчетности.ЗаполнитьНаСервере(СтруктураПараметровДляЗаполнения);		
	
	ВремТаблицаОтчетности = СтруктураПараметровДляЗаполнения.ТаблицаОтчетности;
	
	Если ВремТаблицаОтчетности.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;    
		
	ВремТаблица = ВремТаблицаОтчетности.СкопироватьКолонки("Период, СРОНомерВРесстреСРО, КПКИНН, КПКОГРН, КПККраткоеНаименование, ДатаИсходящегоДокумента, КодДокумента, ПолноеИмяФайла");
	
	Для Каждого ТекСтрока ИЗ ВремТаблицаОтчетности Цикл
		
		Если флОтборПоПериоду И (ТекСтрока.Период < ДатаНачала ИЛИ ТекСтрока.Период > ДатаОкончания) Тогда
			Продолжить;
		КонецЕсли;
		
		НайденныеСтроки = ВремДерево.Строки.НайтиСтроки(Новый Структура("КПКИНН, КПКОГРН", ТекСтрока.КПКИНН, ТекСтрока.КПКОГРН));
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = ВремДерево.Строки.Добавить();  			
			НоваяСтрока.СРОНомерВРесстреСРО = ТекСтрока.СРОНомерВРесстреСРО;
			НоваяСтрока.КПКИНН = ТекСтрока.КПКИНН;
			НоваяСтрока.КПКОГРН = ТекСтрока.КПКОГРН;   	
			НоваяСтрока.КПККраткоеНаименование = ТекСтрока.КПККраткоеНаименование;
		КонецЕсли; 				
	КонецЦикла;
	
	ВремТаблицаОтчетности.Сортировать("Период");
	
	Для Каждого СтрокаДерева ИЗ ВремДерево.Строки Цикл
		
		НайденныеСтроки = ВремТаблицаОтчетности.НайтиСтроки(Новый Структура("КПКИНН, КПКОГРН", СтрокаДерева.КПКИНН, СтрокаДерева.КПКОГРН));
		
		Для Каждого ЭлементМассива ИЗ НайденныеСтроки Цикл
			СтрокаДокумента = СтрокаДерева.Строки.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаДокумента, ЭлементМассива);
			
			//СтрокаДокумента.Период = ЭлементМассива.Период;
			//СтрокаДокумента.ДатаИсходящегоДокумента = ЭлементМассива.ДатаИсходящегоДокумента;
			//СтрокаДокумента.КодДокумента = ЭлементМассива.КодДокумента;
		КонецЦикла;     		
	КонецЦикла;    
	
	СтруктураПараметров.ВремДерево = ВремДерево;  	
	
КонецПроцедуры


Процедура ЗаполнитьНаСервере_ДокументыОтчетности(СтруктураПараметров)
	
	ВремДерево = СтруктураПараметров.ВремДерево;  	
	ВремТаблицаОтчетности = СтруктураПараметров.ВремТаблицаОтчетности;  
	
	ДатаНачала = СтруктураПараметров.ДатаНачалаОтчета;
	ДатаОкончания = КонецДня(СтруктураПараметров.ДатаОкончанияОтчета);   
	МассивКПК = СтруктураПараметров.МассивКПК;  	
	флОтборПоПериоду = СтруктураПараметров.флОтборПоПериоду;  
			
	СтруктураПараметровДляЗаполнения = Новый Структура;
	СтруктураПараметровДляЗаполнения.Вставить("ДатаНачалаОтчета", ДатаНачала);
	СтруктураПараметровДляЗаполнения.Вставить("ДатаОкончанияОтчета", ДатаОкончания);
	СтруктураПараметровДляЗаполнения.Вставить("МассивКПК", МассивКПК);  	
	СтруктураПараметровДляЗаполнения.Вставить("ТаблицаОтчетности", ВремТаблицаОтчетности);      	
	
	СРО_ЗагрузкаОтчетности.ЗаполнитьНаСервере_ТаблицаДокументовОтчетности(СтруктураПараметровДляЗаполнения);		
	
	ВремТаблицаОтчетности = СтруктураПараметровДляЗаполнения.ТаблицаОтчетности;
	
	Если ВремТаблицаОтчетности.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;    
		
	ВремТаблица = ВремТаблицаОтчетности.СкопироватьКолонки("Период, СРОНомерВРесстреСРО, КПКИНН, КПКОГРН, КПККраткоеНаименование, ДатаИсходящегоДокумента, КодДокумента, ПолноеИмяФайла, ДокументОтчетности");
	
	Для Каждого ТекСтрока ИЗ ВремТаблицаОтчетности Цикл
		
		Если флОтборПоПериоду И (ТекСтрока.Период < ДатаНачала ИЛИ ТекСтрока.Период > ДатаОкончания) Тогда
			Продолжить;
		КонецЕсли;
		
		НайденныеСтроки = ВремДерево.Строки.НайтиСтроки(Новый Структура("КПКИНН, КПКОГРН", ТекСтрока.КПКИНН, ТекСтрока.КПКОГРН));
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = ВремДерево.Строки.Добавить();  			
			НоваяСтрока.СРОНомерВРесстреСРО = ТекСтрока.СРОНомерВРесстреСРО;
			НоваяСтрока.КПКИНН = ТекСтрока.КПКИНН;
			НоваяСтрока.КПКОГРН = ТекСтрока.КПКОГРН;   	
			НоваяСтрока.КПККраткоеНаименование = ТекСтрока.КПККраткоеНаименование;
		КонецЕсли; 				
	КонецЦикла;
	
	ВремТаблицаОтчетности.Сортировать("Период");
	
	Для Каждого СтрокаДерева ИЗ ВремДерево.Строки Цикл
		
		НайденныеСтроки = ВремТаблицаОтчетности.НайтиСтроки(Новый Структура("КПКИНН, КПКОГРН", СтрокаДерева.КПКИНН, СтрокаДерева.КПКОГРН));
		
		Для Каждого ЭлементМассива ИЗ НайденныеСтроки Цикл
			СтрокаДокумента = СтрокаДерева.Строки.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаДокумента, ЭлементМассива);
			
			//СтрокаДокумента.Период = ЭлементМассива.Период;
			//СтрокаДокумента.ДатаИсходящегоДокумента = ЭлементМассива.ДатаИсходящегоДокумента;
			//СтрокаДокумента.КодДокумента = ЭлементМассива.КодДокумента;
		КонецЦикла;     		
	КонецЦикла;    	
	
	СтруктураПараметров.ВремДерево = ВремДерево;   
	
КонецПроцедуры


Процедура ЗаполнитьТаблицуДокументов(СтруктураПараметров) Экспорт	      
	
	Если СтруктураПараметров.ИсточникОтчета = 0 Тогда
		ЗаполнитьНаСервере_ФайлыКаталог(СтруктураПараметров);
	Иначе	
		ЗаполнитьНаСервере_ДокументыОтчетности(СтруктураПараметров);
	КонецЕсли; 	    
	
КонецПроцедуры


Функция СформироватьТабличныеДокументы(СтруктураПараметров) Экспорт
	
	ДатаНачала = СтруктураПараметров.ДатаНачалаОтчета;
	ДатаОкончания = КонецДня(СтруктураПараметров.ДатаОкончанияОтчета);
	МассивКПК = СтруктураПараметров.МассивКПК;	
	
	Если НЕ СтруктураПараметров.Свойство("ВремДерево") Тогда   		
		ВремДерево = СРО_ЗагрузкаОтчетности.ИнициализироватьДеревоДокументов();
		СтруктураПараметров.Вставить("ВремДерево", ВремДерево);
	Иначе
		ВремДерево = СтруктураПараметров.ВремДерево;
	КонецЕсли;     	
	
	Если НЕ СтруктураПараметров.Свойство("ВремТаблицаОтчетности") Тогда   		
		ВремТаблицаОтчетности = СРО_ЗагрузкаОтчетности.ИнициализироватьТаблицуОтчетности();
		СтруктураПараметров.Вставить("ВремТаблицаОтчетности", ВремТаблицаОтчетности);
	КонецЕсли;     	
	
	Если НЕ СтруктураПараметров.Свойство("ПутьККаталогуФайлуЗагрузки") Тогда
		СтруктураПараметров.Вставить("ПутьККаталогуФайлуЗагрузки", "");
	КонецЕсли;
	
	Если НЕ СтруктураПараметров.Свойство("ВидЗагрузки") Тогда
		СтруктураПараметров.Вставить("ВидЗагрузки", 0);
	КонецЕсли;   
	
	Если НЕ СтруктураПараметров.Свойство("флОтборПоПериод") Тогда
		СтруктураПараметров.Вставить("флОтборПоПериоду", Истина);
	КонецЕсли;  
	
	Если НЕ СтруктураПараметров.Свойство("ИсточникОтчета") Тогда   		
		СтруктураПараметров.Вставить("ИсточникОтчета", 1);
	КонецЕсли;                                                  	
	
	Если НЕ СтруктураПараметров.Свойство("ЭтоРассылкаОтчета") Тогда   		
		СтруктураПараметров.Вставить("ЭтоРассылкаОтчета", Ложь);
	КонецЕсли;  
	
	Если НЕ СтруктураПараметров.Свойство("СформироватьФормуПроверки") Тогда   		
		СтруктураПараметров.Вставить("СформироватьФормуПроверки", Ложь);
	КонецЕсли;   	                                             	
	 	
	// заполняем таблицу
	
	Если СтруктураПараметров.ЭтоРассылкаОтчета 
		И СтруктураПараметров.ИсточникОтчета = 1 Тогда
		
		ЗаполнитьТаблицуДокументов(СтруктураПараметров);   
		
		ВремДерево = СтруктураПараметров.ВремДерево;
		Для Каждого СтрокаКПК ИЗ ВремДерево.Строки Цикл	
			Для Каждого СтрокаДокумент ИЗ СтрокаКПК.Строки Цикл							
				СтрокаДокумент.Флаг = Истина;                           				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
//	Макет = Отчеты.СРО_СводныйНФ.ПолучитьМакет("Макет"); 		

	МассивТабличныхДокументов = Новый Массив;

	//ВремДерево = РеквизитФормыВЗначение("ДеревоДокументов"); 
	
	МассивРазделовДляЗапроса = Новый Массив;
	МассивРазделовДляЗапроса.Добавить(Справочники.Разделы.Раздел2);
	МассивРазделовДляЗапроса.Добавить(Справочники.Разделы.Раздел3);
	МассивРазделовДляЗапроса.Добавить(Справочники.Разделы.Раздел4);
	МассивРазделовДляЗапроса.Добавить(Справочники.Разделы.Раздел8);
	МассивРазделовДляЗапроса.Добавить(Справочники.Разделы.Раздел9);
	МассивРазделовДляЗапроса.Добавить(Справочники.Разделы.Раздел11);   
	
	Для Каждого СтрокаКПК ИЗ ВремДерево.Строки Цикл	
		Для Каждого СтрокаДокумент ИЗ СтрокаКПК.Строки Цикл			
			ПолноеИмяФайла = СокрЛП(СтрокаДокумент.ПолноеИмяФайла);
			
			Если СтрокаДокумент.Флаг Тогда  
				
				СтруктураПараметровОтчета = Новый Структура;
				СтруктураПараметровОтчета.Вставить("ОтчетныйПериод", СтрокаДокумент.Период);   
				СтруктураПараметровОтчета.Вставить("КПКИНН", СтрокаДокумент.КПКИНН);
				СтруктураПараметровОтчета.Вставить("КПКОГРН", СтрокаДокумент.КПКОГРН);
				СтруктураПараметровОтчета.Вставить("КПККраткоеНаименование", СтрокаКПК.КПККраткоеНаименование);
				СтруктураПараметровОтчета.Вставить("СРОНомерВРесстреСРО", СтрокаДокумент.СРОНомерВРесстреСРО);
				СтруктураПараметровОтчета.Вставить("КодДокумента", СтрокаДокумент.КодДокумента);
				СтруктураПараметровОтчета.Вставить("МассивТабличныхДокументов", МассивТабличныхДокументов);
				
				СтруктураПараметровОтчета.Вставить("ИсточникОтчета", СтруктураПараметров.ИсточникОтчета);				
					
				СтруктураПараметровОтчета.Вставить("МассивРазделовДляЗапроса", МассивРазделовДляЗапроса);					
				СтруктураПараметровОтчета.Вставить("СформироватьФормуПроверки", СтруктураПараметров.СформироватьФормуПроверки);	
				
				Если СтруктураПараметров.ИсточникОтчета = 0 Тогда
					СтруктураПараметровОтчета.Вставить("ПолноеИмяФайла", СтрокаДокумент.ПолноеИмяФайла);
				Иначе				
					СтруктураПараметровОтчета.Вставить("ДокументОтчетности", СтрокаДокумент.ДокументОтчетности);
				КонецЕсли;  					
				
				СРО_ЗагрузкаОтчетности.ВывестиРезюме(СтруктураПараметровОтчета);
				
				МассивТабличныхДокументов =  СтруктураПараметровОтчета.МассивТабличныхДокументов;
				
			КонецЕсли;
		КонецЦикла; 		                             	
	КонецЦикла;
	
	Возврат МассивТабличныхДокументов;

КонецФункции
