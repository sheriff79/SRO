
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВидЗагрузки = 0;
	
	ОбновитьДоступностьРеквизитов();           	
КонецПроцедуры



&НаСервере
Процедура ЗаполнитьНаСервере_ФайлыКаталог()	
	
	ВремДерево = РеквизитФормыВЗначение("ДеревоДокументов");
	
	ВремТаблицаОтчетности = Объект.ТаблицаОтчетности.Выгрузить();  	
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ПутьККаталогуФайлуЗагрузки", ПутьККаталогуФайлуЗагрузки);
	СтруктураПараметров.Вставить("ЗаписьЭлектроннойПочты", "");
	СтруктураПараметров.Вставить("ВидЗагрузки", ВидЗагрузки);
	СтруктураПараметров.Вставить("ТаблицаОтчетности", ВремТаблицаОтчетности);      	
	
	СРО_ЗагрузкаОтчетности.ЗаполнитьНаСервере(СтруктураПараметров);		
	
	ВремТаблицаОтчетности = СтруктураПараметров.ТаблицаОтчетности;
	
	Если ВремТаблицаОтчетности.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;    
		
	ВремТаблица = ВремТаблицаОтчетности.СкопироватьКолонки("Период, СРОНомерВРесстреСРО, КПКИНН, КПКОГРН, КПККраткоеНаименование, ДатаИсходящегоДокумента, КодДокумента, ПолноеИмяФайла");
	
	Для Каждого ТекСтрока ИЗ ВремТаблицаОтчетности Цикл
		
		Если флОтборПоПериоду И (ТекСтрока.Период < ПериодОтчета.ДатаНачала ИЛИ ТекСтрока.Период > ПериодОтчета.ДатаОкончания) Тогда
			Продолжить;
		КонецЕсли;
		
		НайденныеСтроки = ВремДерево.Строки.НайтиСтроки(Новый Структура("КПКИНН, КПКОГРН", ТекСтрока.КПКИНН, ТекСтрока.КПКОГРН));
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = ВремДерево.Строки.Добавить();  			
			НоваяСтрока.СРОНомерВРесстреСРО = ТекСтрока.СРОНомерВРесстреСРО;
			НоваяСтрока.КПКИНН = ТекСтрока.КПКИНН;
			НоваяСтрока.КПКОГРН = ТекСтрока.КПКОГРН;   	
			НоваяСтрока.КПККраткоеНаименование = ТекСтрока.КПККраткоеНаименование;
		КонецЕсли; 				
	КонецЦикла;
	
	ВремТаблицаОтчетности.Сортировать("Период");
	
	Для Каждого СтрокаДерева ИЗ ВремДерево.Строки Цикл
		
		НайденныеСтроки = ВремТаблицаОтчетности.НайтиСтроки(Новый Структура("КПКИНН, КПКОГРН", СтрокаДерева.КПКИНН, СтрокаДерева.КПКОГРН));
		
		Для Каждого ЭлементМассива ИЗ НайденныеСтроки Цикл
			СтрокаДокумента = СтрокаДерева.Строки.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаДокумента, ЭлементМассива);
			
			//СтрокаДокумента.Период = ЭлементМассива.Период;
			//СтрокаДокумента.ДатаИсходящегоДокумента = ЭлементМассива.ДатаИсходящегоДокумента;
			//СтрокаДокумента.КодДокумента = ЭлементМассива.КодДокумента;
		КонецЦикла;     		
	КонецЦикла;    	
	
	ЗначениеВРеквизитФормы(ВремДерево, "ДеревоДокументов");
	
КонецПроцедуры


Процедура ЗаполнитьНаСервере_ДокументыОтчетности()
	
	ВремДерево = РеквизитФормыВЗначение("ДеревоДокументов");
	
	ВремТаблицаОтчетности = Объект.ТаблицаОтчетности.Выгрузить();  	
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаНачалаОтчета", ПериодОтчета.ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончанияОтчета", ПериодОтчета.ДатаОкончания);
	СтруктураПараметров.Вставить("МассивКПК", СписокКПК.ВыгрузитьЗначения());
	
	СтруктураПараметров.Вставить("ТаблицаОтчетности", ВремТаблицаОтчетности);      	
	
	СРО_ЗагрузкаОтчетности.ЗаполнитьНаСервере_ТаблицаДокументовОтчетности(СтруктураПараметров);		
	
	ВремТаблицаОтчетности = СтруктураПараметров.ТаблицаОтчетности;
	
	Если ВремТаблицаОтчетности.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;    
		
	ВремТаблица = ВремТаблицаОтчетности.СкопироватьКолонки("Период, СРОНомерВРесстреСРО, КПКИНН, КПКОГРН, КПККраткоеНаименование, ДатаИсходящегоДокумента, КодДокумента, ПолноеИмяФайла, ДокументОтчетности");
	
	Для Каждого ТекСтрока ИЗ ВремТаблицаОтчетности Цикл
		
		Если флОтборПоПериоду И (ТекСтрока.Период < ПериодОтчета.ДатаНачала ИЛИ ТекСтрока.Период > ПериодОтчета.ДатаОкончания) Тогда
			Продолжить;
		КонецЕсли;
		
		НайденныеСтроки = ВремДерево.Строки.НайтиСтроки(Новый Структура("КПКИНН, КПКОГРН", ТекСтрока.КПКИНН, ТекСтрока.КПКОГРН));
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = ВремДерево.Строки.Добавить();  			
			НоваяСтрока.СРОНомерВРесстреСРО = ТекСтрока.СРОНомерВРесстреСРО;
			НоваяСтрока.КПКИНН = ТекСтрока.КПКИНН;
			НоваяСтрока.КПКОГРН = ТекСтрока.КПКОГРН;   	
			НоваяСтрока.КПККраткоеНаименование = ТекСтрока.КПККраткоеНаименование;
		КонецЕсли; 				
	КонецЦикла;
	
	ВремТаблицаОтчетности.Сортировать("Период");
	
	Для Каждого СтрокаДерева ИЗ ВремДерево.Строки Цикл
		
		НайденныеСтроки = ВремТаблицаОтчетности.НайтиСтроки(Новый Структура("КПКИНН, КПКОГРН", СтрокаДерева.КПКИНН, СтрокаДерева.КПКОГРН));
		
		Для Каждого ЭлементМассива ИЗ НайденныеСтроки Цикл
			СтрокаДокумента = СтрокаДерева.Строки.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаДокумента, ЭлементМассива);
			
			//СтрокаДокумента.Период = ЭлементМассива.Период;
			//СтрокаДокумента.ДатаИсходящегоДокумента = ЭлементМассива.ДатаИсходящегоДокумента;
			//СтрокаДокумента.КодДокумента = ЭлементМассива.КодДокумента;
		КонецЦикла;     		
	КонецЦикла;    	
	
	ЗначениеВРеквизитФормы(ВремДерево, "ДеревоДокументов");
	

	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьНаСервере()
	
	ВремДерево = РеквизитФормыВЗначение("ДеревоДокументов");	
	ВремТаблицаОтчетности = Объект.ТаблицаОтчетности.Выгрузить();  	

	Объект.ТаблицаОтчетности.Очистить();   	
	
	СтруктураПараметров = Новый Структура;   	
	СтруктураПараметров.Вставить("ДатаНачалаОтчета", ПериодОтчета.ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончанияОтчета", КонецДня(ПериодОтчета.ДатаОкончания));  
	СтруктураПараметров.Вставить("МассивКПК", СписокКПК.ВыгрузитьЗначения());    
	СтруктураПараметров.Вставить("ВремДерево", ВремДерево);
	СтруктураПараметров.Вставить("ВремТаблицаОтчетности", ВремТаблицаОтчетности);
	СтруктураПараметров.Вставить("ПутьККаталогуФайлуЗагрузки", ПутьККаталогуФайлуЗагрузки);
	СтруктураПараметров.Вставить("ВидЗагрузки", ВидЗагрузки);
	СтруктураПараметров.Вставить("ИсточникОтчета", ИсточникОтчета);   
	СтруктураПараметров.Вставить("флОтборПоПериоду", флОтборПоПериоду); 	
	СтруктураПараметров.Вставить("ЭтоРассылкаОтчетов", Ложь);	    
	
	Отчеты.СРО_ОтчетРезюме.ЗаполнитьТаблицуДокументов(СтруктураПараметров);
	
	ВремДерево = СтруктураПараметров.ВремДерево;
		
	ЗначениеВРеквизитФормы(ВремДерево, "ДеревоДокументов");
	
КонецПроцедуры


&НаСервере
Процедура ОчиститьДеревоНаСервере()
	Дерево = РеквизитФормыВЗначение("ДеревоДокументов");
	
	Дерево.Строки.Очистить();
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоДокументов");
КонецПроцедуры


&НаКлиенте
Процедура Заполнить(Команда)
	
	Если ИсточникОтчета = 1 
		И (ПериодОтчета.ДатаНачала = Дата(1, 1, 1) ИЛИ ПериодОтчета.ДатаОкончания = Дата(1, 1, 1)) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбран период отчета";				
		Сообщение.Сообщить();
		Возврат;		
	КонецЕсли;
	
	//Объект.ТаблицаОтчетности.Очистить();
	
	ОчиститьДеревоНаСервере();
	
	//ТаблицаОтчетности.Очистить();
	ТаблицаБанковскихСчетов.Очистить();
	ТаблицаОшибок.Очистить();	
	
	ЗаполнитьНаСервере();
КонецПроцедуры




&НаСервере
Процедура ЗагрузитьНаСервере(ПредварительнаяПроверка= Ложь);
	

	
	ВремТаблицаОтчетности = Объект.ТаблицаОтчетности.Выгрузить();
	
	СтруктураПараметров = Новый Структура;  	
	СтруктураПараметров.Вставить("ПредварительнаяПроверка", ПредварительнаяПроверка);
	СтруктураПараметров.Вставить("ТаблицаБанковскихСчетов", ТаблицаБанковскихСчетов);
	СтруктураПараметров.Вставить("ТаблицаОтчетности", ВремТаблицаОтчетности);
	
	СРО_ЗагрузкаОтчетности.ЗагрузитьНаСервере(СтруктураПараметров);
	
	Объект.ТаблицаОтчетности.Загрузить(ВремТаблицаОтчетности);
	
КонецПроцедуры



&НаКлиенте
Процедура Загрузить(Команда)  
	
	ЗагрузитьНаСервере(Ложь);
КонецПроцедуры


&НаКлиенте
Процедура ПутьККаталогФайлуЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СписокФайлов.Очистить();
	ВидЗагрузки = 0;
	
	Если ВидЗагрузки = 0 Тогда // Каталог
		ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		ДиалогВыбора.Каталог = ПутьККаталогуФайлуЗагрузки;
		ДиалогВыбора.Заголовок = "Выберете каталог с файлами";
		ДиалогВыбора.МножественныйВыбор = Ложь;
		
		Если ДиалогВыбора.Выбрать() Тогда
			ПутьККаталогуФайлуЗагрузки = ДиалогВыбора.Каталог;
			
		КонецЕсли;
	Иначе
		ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогВыбора.Заголовок = "Выберете файл XDTT";
		ДиалогВыбора.Фильтр = "Файлы xdtt|*.xtdd";
		ДиалогВыбора.МножественныйВыбор = Истина;
		
		Если ДиалогВыбора.Выбрать() Тогда
			
			Если ДиалогВыбора.ВыбранныеФайлы.Количество() = 1 Тогда // выбран один файл
				ПутьККаталогуФайлуЗагрузки = ДиалогВыбора.ВыбранныеФайлы[0];
			Иначе 
				ПутьККаталогуФайлуЗагрузки = ДиалогВыбора.Каталог;   				
			КонецЕсли;
			
			Для Каждого ВыбФайл Из ДиалогВыбора.ВыбранныеФайлы Цикл
				СписокФайлов.Добавить(ВыбФайл);				
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьЗаголовокПутиКФайлуКаталогу()
	Если ВидЗагрузки = 0 Тогда  // каталог
		Элементы.ПутьККаталогуФайлуЗагрузки.Заголовок = "Путь к каталогу с файлами";
	ИначеЕсли ВидЗагрузки = 1 Тогда	
		Элементы.ПутьККаталогуФайлуЗагрузки.Заголовок = "Путь к файлам XTDD";
	КонецЕсли;        	
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЗагрузкиПриИзменении(Элемент)
	ПутьККаталогуФайлуЗагрузки = "";
	ОбновитьЗаголовокПутиКФайлуКаталогу();	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьРеквизитов()
	
	Элементы.ПериодОтчета.Доступность = флОтборПоПериоду;
	
	Элементы.ГруппаПроверкаПоКаталогуФайлам.Видимость = ИсточникОтчета = 0;
	Элементы.ГруппаПроверкаПоДокументам.Видимость = НЕ ИсточникОтчета = 0;
	
	Элементы.ДеревоДокументов.ПодчиненныеЭлементы.ДеревоДокументовПолноеИмяФайла.Видимость = ИсточникОтчета = 0;
	Элементы.ДеревоДокументов.ПодчиненныеЭлементы.ДеревоДокументовДокументОтчетности.Видимость = НЕ ИсточникОтчета = 0;

КонецПроцедуры

&НаКлиенте                                                                  
Процедура флОтборПоПериодуПриИзменении(Элемент)	
	ОбновитьДоступностьРеквизитов();           
КонецПроцедуры


&НаСервере
Процедура УстановитьСнятьФлажки(Флаг, СтруктураПоиска = Неопределено)
	
	ВремДерево = РеквизитФормыВЗначение("ДеревоДокументов"); 
	
	Если СтруктураПоиска = Неопределено Тогда
		Для Каждого СтрокаКПК ИЗ ВремДерево.Строки Цикл 		
			СтрокаКПК.Флаг = Флаг;	
			
			УстановитьСнятьФлажкиВПодчиненныхСтроках(СтрокаКПК, Флаг);
		КонецЦикла;
	Иначе
		НайденныеСтроки = ВремДерево.Строки.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныеСтроки.Количество() > 0 Тогда                   
			СтрокаКПК = НайденныеСтроки[0];		 
			УстановитьСнятьФлажкиВПодчиненныхСтроках(СтрокаКПК, Флаг);		 
		КонецЕсли;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ВремДерево, "ДеревоДокументов");  
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСнятьФлажкиВПодчиненныхСтроках(СтрокаКПК, Флаг)
	
	Для Каждого СтрокаДокумента ИЗ СтрокаКПК.Строки Цикл
		СтрокаДокумента.Флаг = Флаг;		
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	УстановитьСнятьФлажки(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	УстановитьСнятьФлажки(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДокументовФлагПриИзменении(Элемент)
	
	Если Элементы.ДеревоДокументов.ТекущиеДанные.Период = Дата(1, 1, 1) Тогда    
		Флаг = Элементы.ДеревоДокументов.ТекущиеДанные.Флаг;
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("КПКИНН", Элементы.ДеревоДокументов.ТекущиеДанные.КПКИНН);
		СтруктураПоиска.Вставить("КПКОГРН", Элементы.ДеревоДокументов.ТекущиеДанные.КПКОГРН);
		СтруктураПоиска.Вставить("СРОНомерВРесстреСРО", Элементы.ДеревоДокументов.ТекущиеДанные.СРОНомерВРесстреСРО);	
		
		УстановитьСнятьФлажки(Флаг, СтруктураПоиска);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере               
Процедура ВывестиРезюме(СтруктураПараметров)    	
	
	
	
КонецПроцедуры


&НаСервере
Функция СформироватьНаСервере(СформироватьФормуПроверки)   
	
	ВремТаблицаОтчетности = Объект.ТаблицаОтчетности.Выгрузить();   
	ВремДерево = РеквизитФормыВЗначение("ДеревоДокументов");    	
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаНачалаОтчета", ПериодОтчета.ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончанияОтчета", КонецДня(ПериодОтчета.ДатаОкончания));
	СтруктураПараметров.Вставить("МассивКПК", СписокКПК.ВыгрузитьЗначения());
	СтруктураПараметров.Вставить("ВремДерево", ВремДерево);
	СтруктураПараметров.Вставить("ВремТаблицаОтчетности", ВремТаблицаОтчетности);
	
	СтруктураПараметров.Вставить("ПутьККаталогуФайлуЗагрузки", ПутьККаталогуФайлуЗагрузки);
	СтруктураПараметров.Вставить("ВидЗагрузки", ВидЗагрузки);    	
	СтруктураПараметров.Вставить("флОтборПоПериод", флОтборПоПериоду); 	
	СтруктураПараметров.Вставить("ИсточникОтчета", ИсточникОтчета);
	СтруктураПараметров.Вставить("ЭтоРассылкаОтчета", Ложь);	
	
	СтруктураПараметров.Вставить("СформироватьФормуПроверки", СформироватьФормуПроверки);	
	
	МассивТабличныхДокументов = Отчеты.СРО_ОтчетРезюме.СформироватьТабличныеДокументы(СтруктураПараметров);
	
	Возврат МассивТабличныхДокументов;	

КонецФункции




&НаКлиенте
Процедура Сформировать(СформироватьФормуПроверки = Ложь)  
	
	МассивТабличныхДокументов = СформироватьНаСервере(СформироватьФормуПроверки);

	Для Каждого ВремТабличныйДокумент ИЗ МассивТабличныхДокументов Цикл
		
		Если ТипЗнч(ВремТабличныйДокумент) = Тип("Структура") Тогда   			
			ТабличныйДокумент = ВремТабличныйДокумент.ТабличныйДокумент;    
		Иначе	
			ТабличныйДокумент = ВремТабличныйДокумент;      
		КонецЕсли;
		
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.Показать();   	
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ИсточникОтчетаПриИзменении(Элемент)
	ОбновитьДоступностьРеквизитов();    
КонецПроцедуры


&НаКлиенте
Процедура Резюме(Команда)
	 Сформировать(Ложь);
КонецПроцедуры


&НаКлиенте
Процедура ФормаСверкиДанныхБУ(Команда)
	Сформировать(Истина);
КонецПроцедуры

