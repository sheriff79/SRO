
&НаКлиенте
процедура ОбновитьПредставлениеПериода()
	ДатаОкончанияОтчетногоПериода = Объект.ДатаОкончанияОтчетногоПериода;
	
	НачалоПериода = НачалоКвартала(ДатаОкончанияОтчетногоПериода);
	ОкончаниеПериода = КонецКвартала(ДатаОкончанияОтчетногоПериода);   		
			
	Элементы.ДекорацияПериод.Заголовок = ПредставлениеПериода(НачалоПериода, ОкончаниеПериода);    
	УстановитьВидОтчетаНаСервере();
		
КонецПроцедуры

&НаСервере
процедура УстановитьВидОтчетаНаСервере()
	ДатаОкончанияОтчетногоПериода = Объект.ДатаОкончанияОтчетногоПериода;
	Если ДатаОкончанияОтчетногоПериода = НачалоДня(КонецКвартала(Дата(Год(ДатаОкончанияОтчетногоПериода), 3, 30))) Тогда
		Объект.ВидОтчета = Перечисления.ВидыОтчетов.Квартал1;	
	ИначеЕсли ДатаОкончанияОтчетногоПериода = НачалоДня(КонецКвартала(Дата(Год(ДатаОкончанияОтчетногоПериода), 6, 30))) Тогда
		Объект.ВидОтчета = Перечисления.ВидыОтчетов.Квартал2;		
	ИначеЕсли ДатаОкончанияОтчетногоПериода = НачалоДня(КонецКвартала(Дата(Год(ДатаОкончанияОтчетногоПериода), 9, 30))) Тогда
		Объект.ВидОтчета = Перечисления.ВидыОтчетов.Квартал3;			
	ИначеЕсли ДатаОкончанияОтчетногоПериода = НачалоДня(КонецКвартала(Дата(Год(ДатаОкончанияОтчетногоПериода), 12, 31))) Тогда
		Объект.ВидОтчета = Перечисления.ВидыОтчетов.Годовой90Дней;		
	КонецЕсли;  	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииОтчетногоПериода(Режим)
	
	Знак = ?(Режим = "Увеличить", 1, -1);   	
	
	//Если ПериодОтчетаГодовой() Тогда
	//	КоличествоМесяцев = 12;
	//	Объект.ДатаОкончанияОтчетногоПериода =  КонецКвартала(ДобавитьМесяц(Объект.ДатаОкончанияОтчетногоПериода, КоличествоМесяцев * Знак));			
	//Иначе	
		КоличествоМесяцев = 3;				 
		Объект.ДатаОкончанияОтчетногоПериода =  КонецКвартала(ДобавитьМесяц(Объект.ДатаОкончанияОтчетногоПериода, КоличествоМесяцев * Знак));			
//	КонецЕсли;  	
	
	
	ОбновитьПредставлениеПериода();	 
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура УменьшитьПериод(Команда)
	ПриИзмененииОтчетногоПериода("Уменьшить");     
КонецПроцедуры


&НаКлиенте
Процедура УвеличитьПериод(Команда)
	ПриИзмененииОтчетногоПериода("Увеличить");    
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончанияОтчетногоПериода) Тогда
		Объект.ДатаОкончанияОтчетногоПериода = КонецКвартала(ДобавитьМесяц(ТекущаяДата(), -3));
	КонецЕсли;
	
	ОбновитьПредставлениеПериода();

КонецПроцедуры


&НаСервере
Процедура ЗаполнитьТаблицуРазделовПСК()
	
	Объект.РазделыПСК.Очистить();
		
	Организация = Константы.ОсновнаяОрганизация.Получить();
	
	Запрос = Новый Запрос;
	
	
	Если НачалоДня(Объект.ДатаОкончанияОтчетногоПериода) >= Дата(2020, 6, 30) Тогда
		
		МассивКодовДокументов = Новый Массив;
		МассивКодовДокументов.Добавить(Перечисления.КодДокумента.ОКУД_0420820_21633);
		МассивКодовДокументов.Добавить(Перечисления.КодДокумента.ОКУД_0420820_21634);  
		
		Если НачалоДня(Объект.ДатаОкончанияОтчетногоПериода) >= Дата(2022, 3, 31) Тогда			
			МассивКодовДокументов.Добавить(Перечисления.КодДокумента.ОКУД_0420820_21641);  
		КонецЕсли;
		
		Если НачалоДня(Объект.ДатаОкончанияОтчетногоПериода) >= Дата(2022, 10, 1) Тогда			
			МассивКодовДокументов.Добавить(Перечисления.КодДокумента.ОКУД_0420820_21642);  
		КонецЕсли;
		
		Если НачалоДня(Объект.ДатаОкончанияОтчетногоПериода) >= Дата(2023,4, 1) Тогда			
			МассивКодовДокументов.Добавить(Перечисления.КодДокумента.ОКУД_0420820_21642);  
		КонецЕсли;


		
		Запрос.Текст = "ВЫБРАТЬ
		               |	Разделы.Ссылка КАК Ссылка,
		               |	Разделы.КодРаздела КАК Код,
		               |	СРО_НаименованияРазделовПоКодамДокументов.Значение КАК НаименованиеРаздела
		               |ИЗ
		               |	РегистрСведений.СРО_НаименованияРазделовПоКодамДокументов КАК СРО_НаименованияРазделовПоКодамДокументов
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Разделы КАК Разделы
		               |		ПО СРО_НаименованияРазделовПоКодамДокументов.Раздел = Разделы.Ссылка
		               |			И (СРО_НаименованияРазделовПоКодамДокументов.КодДокумента В (&МассивКодовДокументов))
		               |ГДЕ
		               |	Разделы.Ссылка В ИЕРАРХИИ(&Раздел5_6)
		               |	И Разделы.Ссылка <> &Раздел5_6
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Разделы.ПорядокСортировки";

		Запрос.УстановитьПараметр("Раздел5_6", Справочники.Разделы.Раздел5);
		Запрос.УстановитьПараметр("МассивКодовДокументов", МассивКодовДокументов);

		

	Иначе	
		// заполняем тьабличные строки
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	Разделы.Ссылка КАК Ссылка,
		               |	Разделы.КодРаздела КАК Код,
		               |	Разделы.Наименование КАК НаименованиеРаздела
		               |ИЗ
		               |	Справочник.Разделы КАК Разделы
		               |ГДЕ
		               |	Разделы.Ссылка В ИЕРАРХИИ(&Раздел5_6)
		               |	И Разделы.Ссылка <> &Раздел5_6
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Разделы.ПорядокСортировки";
		Запрос.УстановитьПараметр("Раздел5_6", Справочники.Разделы.Раздел6);
	КонецЕсли;
	
	Выборка = запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Объект.РазделыПСК.Добавить();
		НоваяСтрока.Код = СокрЛП(Выборка.Код);
		НоваяСтрока.Раздел = Выборка.Ссылка;
		
		НоваяСтрока.НаименованиеРаздела = Выборка.НаименованиеРаздела;
		
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьТаблицуРазделовПСК();	 
КонецПроцедуры
