
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Организация =  Константы.ОсновнаяОрганизация.Получить();
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	//Движения.СРО_ПоказателиДокумента.Записывать = Истина;
	//Движения.СРО_ПоказателиДокумента.Очистить();
	//движения.СРО_ПоказателиДокумента.Записать();

	//// регистр СРО_ПоказателиДокумента
	//Движения.СРО_ПоказателиДокумента.Записывать = Истина;
	//Для Каждого ТекСтрокаТаблицаПоказателей Из ТаблицаПоказателей Цикл
	//	Движение = Движения.СРО_ПоказателиДокумента.Добавить();
	//	Движение.ПредставлениеДокументаОтчетности = Строка(Ссылка);
	//	Движение.Регистратор = Ссылка;
	//	Движение.ДатаПериода = ДатаОкончанияОтчетногоПериода;
	//	Движение.КПК = КПК;                         
	//	Движение.Раздел = ТекСтрокаТаблицаПоказателей.Раздел;                         
	//	Движение.Показатель1 = ТекСтрокаТаблицаПоказателей.Показатель1;
	//	Движение.Показатель2 = ТекСтрокаТаблицаПоказателей.Показатель2;
	//	Движение.Показатель3 = ТекСтрокаТаблицаПоказателей.Показатель3;
	//	Движение.Показатель4 = ТекСтрокаТаблицаПоказателей.Показатель4;
	//	Движение.Показатель5 = ТекСтрокаТаблицаПоказателей.Показатель5;
	//	Движение.Показатель6 = ТекСтрокаТаблицаПоказателей.Показатель6;
	//	Движение.Показатель7 = ТекСтрокаТаблицаПоказателей.Показатель7;
	//	Движение.Показатель8 = ТекСтрокаТаблицаПоказателей.Показатель8;
	//	Движение.Показатель9 = ТекСтрокаТаблицаПоказателей.Показатель9;
	//	Движение.Показатель10 = ТекСтрокаТаблицаПоказателей.Показатель10;
	//	Движение.Показатель11 = ТекСтрокаТаблицаПоказателей.Показатель11;
	//	Движение.Показатель12 = ТекСтрокаТаблицаПоказателей.Показатель12;
	//	Движение.Показатель13 = ТекСтрокаТаблицаПоказателей.Показатель13;
	//	Движение.Показатель14 = ТекСтрокаТаблицаПоказателей.Показатель14;
	//	Движение.ПорядокСортировки = ТекСтрокаТаблицаПоказателей.ПорядокСортировки;
	//КонецЦикла;    
	

	
	
	Движения.СРО_ПоказателиДокументовОтчетности.Записывать = Истина;
	Движения.СРО_ПоказателиДокументовОтчетности.Очистить();
	движения.СРО_ПоказателиДокументовОтчетности.Записать();
	
	Движения.СРО_ДокументыСРО.Записывать = Истина;
	Движения.СРО_ДокументыСРО.Очистить();
	движения.СРО_ДокументыСРО.Записать();

	
	Если (ИспользоватьДокумент ИЛИ ПредварительнаяПроверка) Тогда
		//// регистр СРО_ПоказателиДокумента
		//Движения.СРО_ПоказателиДокументовОтчетности.Записывать = Истина;
		//Для Каждого ТекСтрокаТаблицаПоказателей Из ТаблицаПоказателей Цикл
		//	Движение = Движения.СРО_ПоказателиДокументовОтчетности.Добавить();
		////	Движение.ПредставлениеДокументаОтчетности = Строка(Ссылка);
		//	Движение.Период = ДатаОкончанияОтчетногоПериода;
		//	Движение.Регистратор = Ссылка;
		//	Движение.ДокументОтчетности = Ссылка;
		////	Движение.ДатаПериода = ДатаОкончанияОтчетногоПериода;
		//	Движение.КПК = КПК;                         
		//	Движение.Раздел = ТекСтрокаТаблицаПоказателей.Раздел;                         
		//	Движение.Показатель1 = ТекСтрокаТаблицаПоказателей.Показатель1;
		//	Движение.Показатель2 = ТекСтрокаТаблицаПоказателей.Показатель2;
		//	Движение.Показатель3 = ТекСтрокаТаблицаПоказателей.Показатель3;
		//	Движение.Показатель4 = ТекСтрокаТаблицаПоказателей.Показатель4;
		//	Движение.Показатель5 = ТекСтрокаТаблицаПоказателей.Показатель5;
		//	Движение.Показатель6 = ТекСтрокаТаблицаПоказателей.Показатель6;
		//	Движение.Показатель7 = ТекСтрокаТаблицаПоказателей.Показатель7;
		//	Движение.Показатель8 = ТекСтрокаТаблицаПоказателей.Показатель8;
		//	Движение.Показатель9 = ТекСтрокаТаблицаПоказателей.Показатель9;
		//	Движение.Показатель10 = ТекСтрокаТаблицаПоказателей.Показатель10;
		//	Движение.Показатель11 = ТекСтрокаТаблицаПоказателей.Показатель11;
		//	Движение.Показатель12 = ТекСтрокаТаблицаПоказателей.Показатель12;
		//	Движение.Показатель13 = ТекСтрокаТаблицаПоказателей.Показатель13;
		//	Движение.Показатель14 = ТекСтрокаТаблицаПоказателей.Показатель14;           
		//	
		//	Если СокрЛП(ТекСтрокаТаблицаПоказателей.ВидЗадолжностиОсновной) <> "" 			
		//		ИЛИ СокрЛП(ТекСтрокаТаблицаПоказателей.ВидЗадолжностиОсновной) <> "" Тогда 			
		//		//Сообщить("");
		//	КонецЕсли;       
		//	
		//	Движение.ВидЗадолжностиОсновной = ?(нрег(ТекСтрокаТаблицаПоказателей.ВидЗадолжностиОсновной) = "сумма задолженности", 1, 0);
		//	Движение.ВидЗадолжностиДополнительный = ?(нрег(ТекСтрокаТаблицаПоказателей.ВидЗадолжностиДополнительный) = "рвпз", 1, 0);     
		//	
		//	
		//		
		//КонецЦикла;
		
		// Записываем движения                                           
	
	
		ДвижениеСВ = Движения.СРО_ДокументыСРО.Добавить();
		ДвижениеСВ.КПК = КПК;   			
		ДвижениеСВ.Регистратор = Ссылка;
		ДвижениеСВ.ДокументОтчетности = Ссылка;
		ДвижениеСВ.ДатаОтчетногоПериода = ДатаОкончанияОтчетногоПериода;       			
		ДвижениеСВ.ИспользоватьДокумент = ИспользоватьДокумент;
		ДвижениеСВ.ПредварительнаяПроверка = ПредварительнаяПроверка;	 
		
		Движения.СРО_ДокументыСРО.Записать(Истина);
		
		
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
	Если ЗначениеЗаполнено(ВидОтчета) Тогда    
		ГодОтчетнойДаты = Год(ДатаОкончанияОтчетногоПериода);
		
		Если ВидОтчета = Перечисления.ВидыОтчетов.Квартал1 Тогда         
			ДатаОтчетногоПериодаВрем = Дата(ГодОтчетнойДаты, 3, 31);            		
		ИначеЕсли ВидОтчета = Перечисления.ВидыОтчетов.Квартал2 Тогда         
			ДатаОтчетногоПериодаВрем = Дата(ГодОтчетнойДаты, 6, 30);	        		
		ИначеЕсли ВидОтчета = Перечисления.ВидыОтчетов.Квартал3 Тогда         
			ДатаОтчетногоПериодаВрем = Дата(ГодОтчетнойДаты, 9, 30);		    		
		Иначе
			ДатаОтчетногоПериодаВрем = Дата(ГодОтчетнойДаты, 12, 31);			
		КонецЕсли;   
		
		Если НачалоДня(ДатаОкончанияОтчетногоПериода) <> НачалоДня(ДатаОтчетногоПериодаВрем) Тогда 
			ДатаОкончанияОтчетногоПериода = НачалоДня(ДатаОтчетногоПериодаВрем);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
