&НаСервере
Функция ПериодОтчетаГодовой()
	Если Объект.ВидОтчета = Перечисления.СРО_ВидПериодаБО.Годовой Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
процедура ОбновитьПредставлениеПериода()
	
	ДатаОкончанияОтчетногоПериода = Объект.ДатаОкончанияОтчетногоПериода;
	
	Если ПериодОтчетаГодовой() Тогда
		НачалоПериода = НачалоГода(ДатаОкончанияОтчетногоПериода);
		ОкончаниеПериода = КонецГода(ДатаОкончанияОтчетногоПериода);     
	Иначе
		НачалоПериода = НачалоКвартала(ДатаОкончанияОтчетногоПериода);
		ОкончаниеПериода = КонецКвартала(ДатаОкончанияОтчетногоПериода);   		
	КонецЕсли;
		
	Элементы.ДекорацияПериод.Заголовок = ПредставлениеПериода(НачалоПериода, ОкончаниеПериода);    
	
	ПредставлениеОтчетногоГода = Формат(ДатаОкончанияОтчетногоПериода, "ДФ=""гггг""");    
	
КонецПроцедуры


&НаКлиенте
Процедура ПриИзмененииОтчетногоПериода(Режим)
	
	Знак = ?(Режим = "Увеличить", 1, -1);   	
	
	Если ПериодОтчетаГодовой() Тогда
		КоличествоМесяцев = 12;
		Объект.ДатаОкончанияОтчетногоПериода =  КонецКвартала(ДобавитьМесяц(Объект.ДатаОкончанияОтчетногоПериода, КоличествоМесяцев * Знак));			
	Иначе	
		КоличествоМесяцев = 3;	
		
		ДатаОкончанияОтчетногоПериода = КонецКвартала(ДобавитьМесяц(Объект.ДатаОкончанияОтчетногоПериода, КоличествоМесяцев * Знак));
		Объект.ДатаОкончанияОтчетногоПериода = ДатаОкончанияОтчетногоПериода;
		
	//	Объект.БО_ПредыдущийПериод1 = НачалоКонецКвартала(ДобавитьМесяц(Объект.БО_ПериодОтчетности, -12));
	КонецЕсли;  	
	
	
	ОбновитьПредставлениеПериода();	  	
	
КонецПроцедуры

&НаКлиенте
Процедура УменьшитьПериод(Команда)
	ПриИзмененииОтчетногоПериода("Уменьшить");     
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьПериод(Команда)
	ПриИзмененииОтчетногоПериода("Увеличить");    
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончанияОтчетногоПериода) Тогда
		Объект.ДатаОкончанияОтчетногоПериода = КонецКвартала(ДобавитьМесяц(ТекущаяДата(), -3));
	КонецЕсли;
	
	ОбновитьПредставлениеПериода();
	//
	//ОбновитьРеквизитыНаФорме();	
	
	ВывестиТаблицуПоказателей("БухгалтерскийБаланс", ТаблицаПоказателей);	


КонецПроцедуры



&НаКлиенте
Процедура ОбновитьРеквизитыНаФорме()	
	
	//Элементы.Раздел12.Видимость = СтрНайти(Объект.КодДокумента, "2.16.3.3") > 0;
	//Элементы.Раздел13.Видимость = СтрНайти(Объект.КодДокумента, "2.16.3.3") > 0;
	//
	//КодДокумента_2_16_3_2 = СтрНайти(Объект.КодДокумента, "2.16.3.1") > 0 ИЛИ СтрНайти(Объект.КодДокумента, "2.16.3.2") ИЛИ Строка(Объект.КодДокумента) = "";
	//
	//Элементы.Группа21632.Видимость = КодДокумента_2_16_3_2;
	//Элементы.СРОНомерВРесстреСРО.Видимость  =КодДокумента_2_16_3_2;   
	//Элементы.Группа21633.Видимость = НЕ КодДокумента_2_16_3_2;
	//
	//
	
КонецПроцедуры


&НаКлиенте
Процедура КПКПриИзменении(Элемент)
	//ОбновитьРеквизитыНаФорме(); 
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Если НЕ Объект.Ссылка.Пустая() Тогда 		
	//	ОбновитьРаздел1();               	
	//КонецЕсли;                           	
	
КонецПроцедуры

&НаСервере
Процедура ВывестиТаблицуПоказателей_Копия(Раздел, ТабличныйДокумент)
	
	// очищаем таблиынй дкоумент на в закладке
	ТабличныйДокумент.Очистить();
	
	ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
	
	Макет = ПолучитьОбщийМакет("СРО_ОтчетПоРазделамБО");
	
	ОбластьШапка = Макет.получитьОбласть("Шапка");	
	ОбластьСтрока = Макет.получитьОбласть("Строка");  
	ОбластьГруппировка1 = Макет.получитьОбласть("Группировка1");   
	ОбластьГруппировка2 = Макет.получитьОбласть("Группировка2");   
	ОбластьСтрокаДетализации = Макет.получитьОбласть("СтрокаДетализации");  
	ОбластьШапка.Параметры.БО_ПериодОтчетности = Объект.БО_ПериодОтчетности;
	ОбластьШапка.Параметры.БО_ПредыдущийПериод1 = Объект.БО_ПредыдущийПериод1;
	ОбластьШапка.Параметры.БО_ПредыдущийПериод2 = Объект.БО_ПредыдущийПериод2;
	
	ТабличныйДокумент.Вывести(ОбластьШапка, 1);    

	ЦветРаздел1Уровня = Новый Цвет(145, 235, 149);
	ЦветРаздел2Уровня = Новый Цвет(174, 255, 187);  // 227, 255, 225
	ПоследняяКолонкаОбласти = 16;

	Запрос = Новый Запрос;

	// выбираем нужные разделы и показатели
	Если Раздел = "БухгалтерскийБаланс" тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.Раздел КАК Раздел,
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.Показатель1 КАК Показатель1,
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.Показатель2 КАК Показатель2,
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.Показатель3 КАК Показатель3,
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.ПорядокСортировки КАК ПорядокСортировки,
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.ОписаниеДетализации КАК ОписаниеДетализации,
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.Раздел.Представление КАК ПредставлениеРаздела,
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.Раздел.Код КАК КодРаздела
		|ИЗ
		|	Документ.БухгалтерскаяОтчетность.ТаблицаПоказателей КАК БухгалтерскаяОтчетностьТаблицаПоказателей
		|ГДЕ
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.Ссылка = &Ссылка
		|	И БухгалтерскаяОтчетностьТаблицаПоказателей.Раздел В ИЕРАРХИИ(&КорневойРаздел)
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодРаздела
		|ИТОГИ
		|	МАКСИМУМ(Показатель1),
		|	МАКСИМУМ(Показатель2),
		|	МАКСИМУМ(Показатель3)
		|ПО
		|	Раздел ТОЛЬКО ИЕРАРХИЯ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.Раздел КАК Раздел,
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.Показатель1 КАК Показатель1,
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.Показатель2 КАК Показатель2,
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.Показатель3 КАК Показатель3,
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.ПорядокСортировки КАК ПорядокСортировки,
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.РасшифровкаДетализации КАК РасшифровкаДетализации,
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.ОписаниеДетализации КАК ОписаниеДетализации
		|ИЗ
		|	Документ.БухгалтерскаяОтчетность.ДетальныеПоказатели КАК БухгалтерскаяОтчетностьДетальныеПоказатели
		|ГДЕ
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Раздел,
		|	ПорядокСортировки";
		
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("КорневойРаздел", Справочники.СРО_РазделыБО.БухгалтерскийБаланс);        
		
	КонецЕсли;
	
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	// детализация парамтеров
	ТЗДетализации = ПакетЗапросов[1].Выгрузить();
	
	// показатели
	Выборка = ПакетЗапросов[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	
	ТекРазделУровень = 2;

	Пока Выборка.Следующий() Цикл 		
		
		Если Выборка.Раздел = Справочники.СРО_РазделыБО.БухгалтерскийБаланс Тогда
			Продолжить;
		КонецЕсли;
		
		КодРаздела = Выборка.КодРаздела;  				
			
		Если Выборка.Раздел.Уровень() = 1 Тогда
		//	ОбластьСтрока.Область(1, 1, 1, ПоследняяКолонкаОбласти).ЦветФона = ЦветРаздел2Уровня;
			ОбластьВыводимаятрока = ОбластьГруппировка1;
			РазделУровень = ТекРазделУровень;
			
		ИначеЕсли Выборка.Раздел.Уровень() = 2 Тогда
		//	ОбластьСтрока.Область(1, 1, 1, ПоследняяКолонкаОбласти).ЦветФона = ЦветРаздел2Уровня;
			ОбластьВыводимаятрока = ОбластьГруппировка2; 	
			РазделУровень = ТекРазделУровень + 1;
		Иначе	
			ОбластьВыводимаятрока = ОбластьСтрока;
			//ОбластьСтрока.Область(1, 1, 1, ПоследняяКолонкаОбласти).ЦветФона = WebЦвета.Белый;
			РазделУровень = ТекРазделУровень + 2;
		КонецЕсли; 
		
		ОбластьВыводимаятрока.Параметры.Заполнить(Выборка);
		
		ОбластьВыводимаятрока.Параметры.КодРаздела = КодРаздела;
				
		ТабличныйДокумент.Вывести(ОбластьВыводимаятрока, РазделУровень);  
		
		// Выводим детальные записи если они есть
		НайденныеСтроки = ТЗДетализации.НайтиСтроки(Новый Структура("Раздел", Выборка.Раздел));
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			Для Каждого НайденнаяСтрока ИЗ НайденныеСтроки Цикл
				ОбластьСтрокаДетализации.Параметры.Заполнить(НайденнаяСтрока);				
				ОбластьСтрокаДетализации.Параметры.ПредставлениеРаздела = СокрЛП(НайденнаяСтрока.РасшифровкаДетализации);
				
				ТабличныйДокумент.Вывести(ОбластьСтрокаДетализации,  ТекРазделУровень + 3);  		
			КонецЦикла;
		КонецЕсли;                                                                                       	
			
	КонецЦикла;
	
	ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры


&НаСервере
Процедура ВывестиТаблицуПоказателей(Раздел, ТабличныйДокумент)
	
	// очищаем таблиынй дкоумент на в закладке
	ТабличныйДокумент.Очистить();
	
	ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
	
	Макет = ПолучитьОбщийМакет("СРО_ОтчетПоРазделамБО");
	
	ОбластьШапка = Макет.получитьОбласть("Шапка");	
	ОбластьСтрока = Макет.получитьОбласть("Строка");  
	ОбластьСтрокаПодраздел = Макет.получитьОбласть("СтрокаПодраздел"); 	
	ОбластьГруппировка1 = Макет.получитьОбласть("Группировка1");   
	ОбластьГруппировка2 = Макет.получитьОбласть("Группировка2");   
	ОбластьСтрокаДетализации = Макет.получитьОбласть("СтрокаДетализации");  
	ОбластьШапка.Параметры.БО_ПериодОтчетности = Объект.БО_ПериодОтчетности;
	ОбластьШапка.Параметры.БО_ПредыдущийПериод1 = Объект.БО_ПредыдущийПериод1;
	ОбластьШапка.Параметры.БО_ПредыдущийПериод2 = Объект.БО_ПредыдущийПериод2;
	
	ТабличныйДокумент.Вывести(ОбластьШапка, 1);    

	ЦветРаздел1Уровня = Новый Цвет(145, 235, 149);
	ЦветРаздел2Уровня = Новый Цвет(174, 255, 187);  // 227, 255, 225
	ПоследняяКолонкаОбласти = 16;

	Запрос = Новый Запрос;

	// выбираем нужные разделы и показатели
	Если Раздел = "БухгалтерскийБаланс" тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.Раздел КАК Раздел,
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.Показатель1 КАК Показатель1,
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.Показатель2 КАК Показатель2,
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.Показатель3 КАК Показатель3,
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.ПорядокСортировки КАК ПорядокСортировки,
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.ОписаниеДетализации КАК ОписаниеДетализации,
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.Раздел.Представление КАК ПредставлениеРаздела,
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.Раздел.Код КАК КодРаздела
		|ИЗ
		|	Документ.БухгалтерскаяОтчетность.ТаблицаПоказателей КАК БухгалтерскаяОтчетностьТаблицаПоказателей
		|ГДЕ
		|	БухгалтерскаяОтчетностьТаблицаПоказателей.Ссылка = &Ссылка
		|	И БухгалтерскаяОтчетностьТаблицаПоказателей.Раздел В ИЕРАРХИИ(&КорневойРаздел)
		|	И БухгалтерскаяОтчетностьТаблицаПоказателей.Ссылка.ИспользоватьДокумент
		|	И БухгалтерскаяОтчетностьТаблицаПоказателей.Ссылка.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодРаздела
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.Раздел КАК Раздел,
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.Показатель1 КАК Показатель1,
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.Показатель2 КАК Показатель2,
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.Показатель3 КАК Показатель3,
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.ПорядокСортировки КАК ПорядокСортировки,
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.РасшифровкаДетализации КАК РасшифровкаДетализации,
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.ОписаниеДетализации КАК ОписаниеДетализации,
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.КодРасшифровки КАК КодРасшифровки
		|ИЗ
		|	Документ.БухгалтерскаяОтчетность.ДетальныеПоказатели КАК БухгалтерскаяОтчетностьДетальныеПоказатели
		|ГДЕ
		|	БухгалтерскаяОтчетностьДетальныеПоказатели.Ссылка = &Ссылка
		|	И БухгалтерскаяОтчетностьДетальныеПоказатели.Ссылка.ИспользоватьДокумент
		|	И БухгалтерскаяОтчетностьДетальныеПоказатели.Ссылка.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Раздел,
		|	ПорядокСортировки";                  
		
		
		//Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	БухгалтерскаяОтчетностьТаблицаПоказателей.Раздел КАК Раздел,
		//|	БухгалтерскаяОтчетностьТаблицаПоказателей.Показатель1 КАК Показатель1,
		//|	БухгалтерскаяОтчетностьТаблицаПоказателей.Показатель2 КАК Показатель2,
		//|	БухгалтерскаяОтчетностьТаблицаПоказателей.Показатель3 КАК Показатель3,
		//|	БухгалтерскаяОтчетностьТаблицаПоказателей.ПорядокСортировки КАК ПорядокСортировки,
		//|	БухгалтерскаяОтчетностьТаблицаПоказателей.ОписаниеДетализации КАК ОписаниеДетализации,
		//|	БухгалтерскаяОтчетностьТаблицаПоказателей.Раздел.Представление КАК ПредставлениеРаздела,
		//|	БухгалтерскаяОтчетностьТаблицаПоказателей.Раздел.Код КАК КодРаздела
		//|ИЗ
		//|	Документ.БухгалтерскаяОтчетность.ТаблицаПоказателей КАК БухгалтерскаяОтчетностьТаблицаПоказателей
		//|ГДЕ
		//|	БухгалтерскаяОтчетностьТаблицаПоказателей.Ссылка = &Ссылка
		//|	И БухгалтерскаяОтчетностьТаблицаПоказателей.Раздел В ИЕРАРХИИ(&КорневойРаздел)
		//|	И БухгалтерскаяОтчетностьТаблицаПоказателей.Ссылка.ИспользоватьДокумент
		//|	И БухгалтерскаяОтчетностьТаблицаПоказателей.Ссылка.Проведен
		//|
		//|УПОРЯДОЧИТЬ ПО
		//|	КодРаздела
		//|ИТОГИ
		//|	МАКСИМУМ(Показатель1),
		//|	МАКСИМУМ(Показатель2),
		//|	МАКСИМУМ(Показатель3)
		//|ПО
		//|	Раздел ИЕРАРХИЯ
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	БухгалтерскаяОтчетностьДетальныеПоказатели.Раздел КАК Раздел,
		//|	БухгалтерскаяОтчетностьДетальныеПоказатели.Показатель1 КАК Показатель1,
		//|	БухгалтерскаяОтчетностьДетальныеПоказатели.Показатель2 КАК Показатель2,
		//|	БухгалтерскаяОтчетностьДетальныеПоказатели.Показатель3 КАК Показатель3,
		//|	БухгалтерскаяОтчетностьДетальныеПоказатели.ПорядокСортировки КАК ПорядокСортировки,
		//|	БухгалтерскаяОтчетностьДетальныеПоказатели.РасшифровкаДетализации КАК РасшифровкаДетализации,
		//|	БухгалтерскаяОтчетностьДетальныеПоказатели.ОписаниеДетализации КАК ОписаниеДетализации,
		//|	БухгалтерскаяОтчетностьДетальныеПоказатели.КодРасшифровки КАК КодРасшифровки
		//|ИЗ
		//|	Документ.БухгалтерскаяОтчетность.ДетальныеПоказатели КАК БухгалтерскаяОтчетностьДетальныеПоказатели
		//|ГДЕ
		//|	БухгалтерскаяОтчетностьДетальныеПоказатели.Ссылка = &Ссылка
		//|	И БухгалтерскаяОтчетностьДетальныеПоказатели.Ссылка.ИспользоватьДокумент
		//|	И БухгалтерскаяОтчетностьДетальныеПоказатели.Ссылка.Проведен
		//|
		//|УПОРЯДОЧИТЬ ПО
		//|	Раздел,
		//|	ПорядокСортировки";

		
		
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("КорневойРаздел", Справочники.СРО_РазделыБО.БухгалтерскийБаланс);        
		
	КонецЕсли;
	
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	// детализация парамтеров
	ТЗДетализации = ПакетЗапросов[1].Выгрузить();
	
	// показатели
	//ВыборкаПоГруппам = ПакетЗапросов[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	ВыборкаПоГруппам = ПакетЗапросов[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	
	ТекРазделУровень = 2;

	ТекРазделГруппы = Неопределено;
	ТекРазделГруппа1Уровня = Неопределено;
	
	БалансАктивы = Неопределено; 	
	БалансПассивы = Неопределено;    
	
	МассивВыведенныхРазделов = Новый Массив;
	
	Пока ВыборкаПоГруппам.Следующий() Цикл 		
		
		Если ВыборкаПоГруппам.Раздел = Справочники.СРО_РазделыБО.БухгалтерскийБаланс Тогда
			Продолжить;
		КонецЕсли;
		
		КодРаздела = ВыборкаПоГруппам.КодРаздела;  
		
		Если ВыборкаПоГруппам.Раздел = ТекРазделГруппы Тогда
			Продолжить;
		КонецЕсли;     		
		
		Если МассивВыведенныхРазделов.Найти(ВыборкаПоГруппам.Раздел) = Неопределено Тогда
			МассивВыведенныхРазделов.Добавить(ВыборкаПоГруппам.Раздел);
		Иначе
			Продолжить;
		КонецЕсли;
			
		 		           			
		Если ВыборкаПоГруппам.Раздел.Уровень() = 1 Тогда
			// ОбластьСтрока.Область(1, 1, 1, ПоследняяКолонкаОбласти).ЦветФона = ЦветРаздел1Уровня;
			ОбластьВыводимаятрока = ОбластьГруппировка1;
			РазделУровень = ТекРазделУровень;
			
		ИначеЕсли ВыборкаПоГруппам.Раздел.Уровень() = 2 Тогда
			// ОбластьСтрока.Область(1, 1, 1, ПоследняяКолонкаОбласти).ЦветФона = ЦветРаздел2Уровня;
			ОбластьВыводимаятрока = ОбластьГруппировка2; 	
			РазделУровень = ТекРазделУровень + 1;  
		Иначе
			//ОбластьСтрока.Область(1, 1, 1, ПоследняяКолонкаОбласти).ЦветФона = webЦвета.Белый;  	
			
			ОбластьВыводимаятрока = ОбластьСтрока;
			
			Если СтрДлина(КодРаздела) = 4 Тогда
				РазделУровень = ТекРазделУровень + 2;  
				ОбластьВыводимаятрока = ОбластьСтрока;   
			Иначе
				РазделУровень = ТекРазделУровень + 3;  
				ОбластьВыводимаятрока = ОбластьСтрокаПодраздел; 					
			КонецЕсли;	
			
		//	ОбластьВыводимаятрока = ОбластьСтрокаПодраздел; 		
		КонецЕсли;
		
		ОбластьВыводимаятрока.Параметры.Заполнить(ВыборкаПоГруппам);		
		ОбластьВыводимаятрока.Параметры.КодРаздела = КодРаздела;         				
		ТабличныйДокумент.Вывести(ОбластьВыводимаятрока, РазделУровень);   		
		
		//Если РазделДляРасшифровки <> Неопределено И СтрДлина(Выборка.Раздел.Код) <> 5 Тогда
		Если СтрДлина(КодРаздела) <> 5 Тогда
			// Выводим детальные записи если они есть
			НайденныеСтроки = ТЗДетализации.НайтиСтроки(Новый Структура("Раздел", ВыборкаПоГруппам.Раздел));
			
			Если НайденныеСтроки.Количество() > 0 Тогда
				
				Для Каждого НайденнаяСтрока ИЗ НайденныеСтроки Цикл
					ОбластьСтрокаДетализации.Параметры.Заполнить(НайденнаяСтрока);				
					ОбластьСтрокаДетализации.Параметры.ПредставлениеРаздела = СокрЛП(НайденнаяСтрока.РасшифровкаДетализации);
					
					ТабличныйДокумент.Вывести(ОбластьСтрокаДетализации,  РазделУровень + 1);  
					//
					//ОбластьСтрокаПодраздел.Параметры.Заполнить(НайденнаяСтрока);				
					//ОбластьСтрокаПодраздел.Параметры.ПредставлениеРаздела = СокрЛП(НайденнаяСтрока.РасшифровкаДетализации);
					//
					//ТабличныйДокумент.Вывести(ОбластьСтрокаПодраздел,  РазделУровень + 1);  		

				КонецЦикла;
			КонецЕсли;          
		КонецЕсли;
	КонецЦикла;
	
	ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)   	
		
	Если ТекущаяСтраница.Имя = "БухгалтерскийБаланс" Тогда
		ВывестиТаблицуПоказателей("БухгалтерскийБаланс", ТаблицаПоказателей);	
	КонецЕсли;
	
КонецПроцедуры



